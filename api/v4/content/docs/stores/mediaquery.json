{"data":{"metadata":{"authors":{},"created_at":1626842164000,"identifier":"/docs/stores/mediaquery","modified_at":1645838554000,"sections":[{"identifier":"mediaquery","level":1,"text":"mediaquery"},{"identifier":"imports","level":2,"text":"Imports"},{"identifier":"compatibility","level":2,"text":"Compatibility"}],"snippets":[{"identifier":"mediaquery-prevew","script":"<script>\n    import {\n        Code,\n        Heading,\n        Text,\n        mediaquery,\n        mediaqueries,\n    } from \"@kahi-ui/framework\";\n\n    const standard_hd_store = mediaquery(\n        \"(min-width: 1280px) and (min-height: 720px)\"\n    );\n\n    const ratio_store = mediaquery(\n        \"(aspect-ratio: 16/9)\"\n    );\n\n    // By default `mediaqueries` has `or` behavior, which means if any query is valid, then\n    // `true` is returned by the Store\n    //\n    // However in this case, we want `and` behavior, meaning all queries have to be valid\n    // for `true` to be returned\n    const combo_store = mediaqueries(\n        [\n            \"(min-width: 1280px) and (min-height: 720px)\",\n            \"(aspect-ratio: 16/9)\",\n        ],\n        {behavior: \"and\"}\n    );\n</script>\n\n<Heading>Queries Enabled</Heading>\n\n<Text>sHD: <Code>{$standard_hd_store}</Code></Text>\n<Text>16:9: <Code>{$ratio_store}</Code></Text>\n\n<Text>sHD + 16:9: <Code>{$combo_store}</Code></Text>","syntax":"svelte","title":"mediaquery Prevew"},{"identifier":"mediaquery-imports","script":"import {\n    mediaquery,\n    mediaqueries,\n} from \"@kahi-ui/framework\";","syntax":"javascript","title":"mediaquery Imports"}],"title":"mediaquery"},"text":"mediaquery NOTE : Introduced feature in v0.2.14. mediaquery / mediaqueries are readonly Svelte Stores , which returns true whenever a provided Media Query is currently active. <script> import { Code, Heading, Text, mediaquery, mediaqueries, } from \"@kahi-ui/framework\"; const standard_hd_store = mediaquery( \"(min-width: 1280px) and (min-height: 720px)\" ); const ratio_store = mediaquery( \"(aspect-ratio: 16/9)\" ); // By default `mediaqueries` has `or` behavior, which means if any query is valid, then // `true` is returned by the Store // // However in this case, we want `and` behavior, meaning all queries have to be valid // for `true` to be returned const combo_store = mediaqueries( [ \"(min-width: 1280px) and (min-height: 720px)\", \"(aspect-ratio: 16/9)\", ], {behavior: \"and\"} ); </script> <Heading>Queries Enabled</Heading> <Text>sHD: <Code>{$standard_hd_store}</Code></Text> <Text>16:9: <Code>{$ratio_store}</Code></Text> <Text>sHD + 16:9: <Code>{$combo_store}</Code></Text> Imports import { mediaquery, mediaqueries, } from \"@kahi-ui/framework\"; Compatibility The Stores are dependent on Window.matchMedia . So if you're rendering on the server, it'll always return false. ","references":{"custom_properties":{},"events":{},"properties":{},"slots":{}},"render":"<blockquote data-palette=\"accent\">\n<p><strong>NOTE</strong>: Introduced feature in <code>v0.2.14</code>.</p>\n</blockquote>\n<p><code>mediaquery</code> / <code>mediaqueries</code> are <strong>readonly</strong> <a href=\"https://svelte.dev/docs#svelte_store\" target=\"_blank\" rel=\"noopener noreferrer\">Svelte Stores</a>, which returns <code>true</code> whenever a provided <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media\" target=\"_blank\" rel=\"noopener noreferrer\">Media Query</a> is currently active.</p>\n<pre class=\"highlight language-svelte\" data-identifier=\"mediaquery-prevew\" data-mode=\"repl\" data-syntax=\"svelte\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n        Code<span class=\"token punctuation\">,</span>\n        Heading<span class=\"token punctuation\">,</span>\n        Text<span class=\"token punctuation\">,</span>\n        mediaquery<span class=\"token punctuation\">,</span>\n        mediaqueries<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@kahi-ui/framework\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> standard_hd_store <span class=\"token operator\">=</span> <span class=\"token function\">mediaquery</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"(min-width: 1280px) and (min-height: 720px)\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> ratio_store <span class=\"token operator\">=</span> <span class=\"token function\">mediaquery</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"(aspect-ratio: 16/9)\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// By default `mediaqueries` has `or` behavior, which means if any query is valid, then</span>\n    <span class=\"token comment\">// `true` is returned by the Store</span>\n    <span class=\"token comment\">//</span>\n    <span class=\"token comment\">// However in this case, we want `and` behavior, meaning all queries have to be valid</span>\n    <span class=\"token comment\">// for `true` to be returned</span>\n    <span class=\"token keyword\">const</span> combo_store <span class=\"token operator\">=</span> <span class=\"token function\">mediaqueries</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"(min-width: 1280px) and (min-height: 720px)\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"(aspect-ratio: 16/9)\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>behavior<span class=\"token operator\">:</span> <span class=\"token string\">\"and\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Heading</span><span class=\"token punctuation\">></span></span>Queries Enabled<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Heading</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span><span class=\"token punctuation\">></span></span>sHD: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Code</span><span class=\"token punctuation\">></span></span><span class=\"token language-javascript\"><span class=\"token punctuation\">{</span>$standard_hd_store<span class=\"token punctuation\">}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Code</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span><span class=\"token punctuation\">></span></span>16:9: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Code</span><span class=\"token punctuation\">></span></span><span class=\"token language-javascript\"><span class=\"token punctuation\">{</span>$ratio_store<span class=\"token punctuation\">}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Code</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span><span class=\"token punctuation\">></span></span>sHD + 16:9: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Code</span><span class=\"token punctuation\">></span></span><span class=\"token language-javascript\"><span class=\"token punctuation\">{</span>$combo_store<span class=\"token punctuation\">}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Code</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span></code></pre><h2 id=\"imports\">Imports</h2>\n<pre class=\"highlight language-javascript\" data-identifier=\"mediaquery-imports\" data-mode=\"default\" data-syntax=\"javascript\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    mediaquery<span class=\"token punctuation\">,</span>\n    mediaqueries<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@kahi-ui/framework\"</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"compatibility\">Compatibility</h2>\n<p>The Stores are dependent on <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Window.matchMedia</code></a>. So if you're rendering on the server, it'll always return <code>false</code>.</p>\n"}}