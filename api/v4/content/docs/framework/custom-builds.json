{"data":{"metadata":{"authors":{},"created_at":1645838554000,"identifier":"/docs/framework/custom-builds","modified_at":1646219125000,"sections":[{"identifier":"custom-builds","level":1,"text":"Custom Builds"},{"identifier":"downloading","level":2,"text":"Downloading"},{"identifier":"installation","level":2,"text":"Installation"},{"identifier":"building","level":2,"text":"Building"},{"identifier":"minifying","level":2,"text":"Minifying"},{"identifier":"filters","level":2,"text":"Filters"},{"identifier":"components","level":3,"text":"Components"},{"identifier":"globals","level":3,"text":"Globals"}],"snippets":[],"title":"Custom Builds"},"text":"Custom Builds WARNING : When using manual builds of Kahi UI, you'll need to rebuild the distributables every time you upgrade Kahi UI. If you're building a Web Application that's particularly sensitive to latency, page sizes, etc. It's recommended to create custom builds of the Framework's CSS distributables. Downloading First, you'll need to head over to Releases , download the source code .zip / .tar.gz archive that matches the version of Kahi UI you're developing against, and decompress the archive onto your filesystem. Installation Once you've got everything downloaded and decompressed, open a terminal in the source code directory and install Kahi UI's dependencies. npm ci Building Now you can start building the CSS distributables via a NPM script. npm run build:framework Which should output in the package/ directory like so. package/ │ └───kahi-ui.framework.css // Main CSS rules and stylings └───kahi-ui.framework.css.map // Source map for the above file └───kahi-ui.theme.default.css // Themeing variables that define the look and feel └───kahi-ui.theme.default.css.map // Source map for the above file Then just copy the files you require into your Web Application's codebase and import them. Minifying You can also build the minified versions of the CSS distributables with another NPM script. npm run build:minify Which would output to package/ without source maps like so. package/ │ └───kahi-ui.framework.min.css // Main CSS rules and stylings └───kahi-ui.theme.default.min.css // Themeing variables that define the look and feel Filters Each individual feature of Kahi UI that requires CSS can turned off, removing it from builds. And it's as simple as adding command line parameters. Just run either of the NPM scripts with filter parameters following this format: --disable-{SCOPE}-{FEATURE}. For instance, if wanting to disable Grid and the responsitivity of Spacings (e.g. margin={[\"mobile:medium\"]}), try the following. USAGE : The double dashes (--) after build:framework / build:minify is required so NPM passes our command line parameters to the script. npm run build:framework -- --disable-globals-intrinsics-responsitivity --disable-components-grid Components Disclosure --disable-components-disclosure-accordion — Accordion --disable-components-disclosure-carousel — Carousel --disable-components-disclosure-tab — Tab Display --disable-components-display-badge — Badge --disable-components-display-kbd — Kbd --disable-components-display-list — List --disable-components-display-table — Table Embedded --disable-components-embedded-figure — Figure Feedback --disable-components-feedback-dot — Dot --disable-components-feedback-ellipsis — Ellipsis --disable-components-feedback-progress — Progress Interactables --disable-components-interactables-button — Button --disable-components-interactables-check — Check --disable-components-interactables-file-drop-input — FileDropInput --disable-components-interactables-form — Form --disable-components-interactables-number-input — NumberInput --disable-components-interactables-radio — Radio --disable-components-interactables-switch — Switch --disable-components-interactables-text-input — TextInput Layouts --disable-components-layouts-center — Center --disable-components-layouts-container — Container --disable-components-layouts-divider — Divider --disable-components-layouts-grid — Grid --disable-components-layouts-group — Group --disable-components-layouts-mosaic — Mosaic --disable-components-layouts-position — Position --disable-components-layouts-scrollable — Scrollable --disable-components-layouts-spacer — Spacer --disable-components-layouts-stack — Stack Navigation --disable-components-navigation-anchor — Anchor --disable-components-navigation-aside — Aside --disable-components-navigation-breadcrumb — Breadcrumb --disable-components-navigation-menu — Menu --disable-components-navigation-omni — Omni Overlays --disable-components-overlays-backdrop — Backdrop --disable-components-overlays-clickable — Clickable --disable-components-overlays-overlay — Overlay --disable-components-overlays-popover — Popover Surfaces --disable-components-surfaces-box — Box --disable-components-surfaces-card — Card --disable-components-surfaces-hero — Hero --disable-components-surfaces-tile — Tile Typography --disable-components-typography-blockquote — Blockquote --disable-components-typography-code — Code --disable-components-typography-heading — Heading --disable-components-typography-text — Text Utilities --disable-components-utilities-animation — Animation --disable-components-utilities-portal — Portal --disable-components-utilities-transition — Transition Widgets --disable-components-widgets-dataselect — DataSelect Globals WARNING : Most non-Component specific properties are implemented as global CSS attributes to reduce redundancy. If you turn off the feature, it turns off for ALL Components. --disable-globals-alignments — <* alignment=\"{ALIGNMENT}\" alignment_x=\"{ALIGNMENT}\" alignment_y=\"{ALIGNMENT}\"> --disable-globals-alignments-responsitivity — <* alignment={[\"{VIEWPORT}:{ALIGNMENT}]} alignment_x={[\"{VIEWPORT}:{ALIGNMENT}]} alignment_y={[\"{VIEWPORT}:{ALIGNMENT}]}> --disable-globals-elevations — <* elevation=\"{ELEVATION}\"> --disable-globals-elevations-responsitivity — <* elevation={[\"{VIEWPORT}:{ELEVATION}\"]}> --disable-globals-fit — <* fit=\"{FIT}\"> --disable-globals-fit-responsitivity — <* fit={[\"{VIEWPORT}:{FIT}\"]}> --disable-globals-grid — <* points=\"{POINTS}\" span=\"{SPAN}\" span_x=\"{SPAN}\" span_y=\"{SPAN}\"> --disable-globals-grid-responsitivity — <* points={[\"{VIEWPORT}:{POINTS}\"]} span={[\"{VIEWPORT}:{SPAN}\"]} span_x={[\"{VIEWPORT}:{SPAN}\"]} span_y={[\"{VIEWPORT}:{SPAN}\"]}> --disable-globals-intrinsics — <* height max_height min_height margin padding size max_size min_size width max_width min_width> --disable-globals-intrinsics-responsitivity — <* height max_height min_height margin padding size max_size min_size width max_width min_width> --disable-globals-orientations — <* orientation=\"{ORIENTATION}\"> --disable-globals-orientations-responsitivity — <* orientation={[\"{VIEWPORT}:{ORIENTATION}\"]}> --disable-globals-palettes — <* palette=\"{PALETTE}\"> --disable-globals-radius — <* radius=\"{RADIUS}\"> --disable-globals-radius-responsitivity — <* radius={[\"{VIEWPORT}:{RADIUS}\"]}> --disable-globals-sizings — <* sizing=\"{SIZING}\"> --disable-globals-sizings-responsitivity — <* sizing={[\"{VIEWPORT}:{SIZING}\"]}> --disable-globals-spacings — <* spacing=\"{SPACING}\" spacing_x=\"{SPACING}\" spacing_y=\"{SPACING}\"> --disable-globals-spacings-responsitivity— <* spacing={[\"{VIEWPORT}:{SPACING}\"]} spacing_x={[\"{VIEWPORT}:{SPACING}\"]} spacing_y={[\"{VIEWPORT}:{SPACING}\"]}> ","references":{"custom_properties":{},"events":{},"properties":{},"slots":{}},"render":"<blockquote data-palette=\"alert\">\n<p><strong>WARNING</strong>: When using manual builds of Kahi UI, you'll need to rebuild the distributables every time you upgrade Kahi UI.</p>\n</blockquote>\n<p>If you're building a Web Application that's particularly sensitive to latency, page sizes, etc. It's recommended to create custom builds of the Framework's CSS distributables.</p>\n<h2 id=\"downloading\">Downloading</h2>\n<p>First, you'll need to head over to <a href=\"https://github.com/novacbn/kahi-ui/releases\" target=\"_blank\" rel=\"noopener noreferrer\">Releases</a>, download the source code <code>.zip</code> / <code>.tar.gz</code> archive that matches the version of Kahi UI you're developing against, and decompress the archive onto your filesystem.</p>\n<h2 id=\"installation\">Installation</h2>\n<p>Once you've got everything downloaded and decompressed, open a terminal in the source code directory and install Kahi UI's dependencies.</p>\n<pre class=\"highlight language-bash\" data-identifier=\"yy299a\" data-mode=\"default\" data-syntax=\"bash\"><code><span class=\"token function\">npm</span> ci</code></pre><h2 id=\"building\">Building</h2>\n<p>Now you can start building the CSS distributables via a NPM script.</p>\n<pre class=\"highlight language-bash\" data-identifier=\"1pwep2h\" data-mode=\"default\" data-syntax=\"bash\"><code><span class=\"token function\">npm</span> run build:framework</code></pre><p>Which should output in the <code>package/</code> directory like so.</p>\n<pre class=\"highlight language-bash\" data-identifier=\"8kxmku\" data-mode=\"default\" data-syntax=\"bash\"><code>package/\n│\n└───kahi-ui.framework.css           // Main CSS rules and stylings\n└───kahi-ui.framework.css.map       // Source map <span class=\"token keyword\">for</span> the above <span class=\"token function\">file</span>\n└───kahi-ui.theme.default.css       // Themeing variables that define the <span class=\"token function\">look</span> and feel\n└───kahi-ui.theme.default.css.map   // Source map <span class=\"token keyword\">for</span> the above <span class=\"token function\">file</span></code></pre><p>Then just copy the files you require into your Web Application's codebase and import them.</p>\n<h2 id=\"minifying\">Minifying</h2>\n<p>You can also build the minified versions of the CSS distributables with another NPM script.</p>\n<pre class=\"highlight language-bash\" data-identifier=\"1p5xcfd\" data-mode=\"default\" data-syntax=\"bash\"><code><span class=\"token function\">npm</span> run build:minify</code></pre><p>Which would output to <code>package/</code> without source maps like so.</p>\n<pre class=\"highlight language-bash\" data-identifier=\"1sx3vee\" data-mode=\"default\" data-syntax=\"bash\"><code>package/\n│\n└───kahi-ui.framework.min.css       // Main CSS rules and stylings\n└───kahi-ui.theme.default.min.css   // Themeing variables that define the <span class=\"token function\">look</span> and feel</code></pre><h2 id=\"filters\">Filters</h2>\n<p>Each individual feature of Kahi UI that requires CSS can turned off, removing it from builds. And it's as simple as adding command line parameters. Just run either of the NPM scripts with filter parameters following this format: <code>--disable-{SCOPE}-{FEATURE}</code>.</p>\n<p>For instance, if wanting to disable <a href=\"../layouts/grid\" svelte:prefetch=\"true\">Grid</a> and the responsitivity of <a href=\"../globals/spacings\" svelte:prefetch=\"true\">Spacings</a> (e.g. <code>margin={[&quot;mobile:medium&quot;]}</code>), try the following.</p>\n<blockquote data-palette=\"informative\">\n<p><strong>USAGE</strong>: The double dashes (<code>--</code>) after <code>build:framework</code> / <code>build:minify</code> is required so NPM passes our command line parameters to the script.</p>\n</blockquote>\n<pre class=\"highlight language-bash\" data-identifier=\"h9n6e\" data-mode=\"default\" data-syntax=\"bash\"><code><span class=\"token function\">npm</span> run build:framework -- --disable-globals-intrinsics-responsitivity --disable-components-grid</code></pre><h3 id=\"components\">Components</h3>\n<ul>\n<li>\n<p>Disclosure</p>\n<ul>\n<li><code>--disable-components-disclosure-accordion</code> — <a href=\"../disclosure/accordion\" svelte:prefetch=\"true\"><code>Accordion</code></a></li>\n<li><code>--disable-components-disclosure-carousel</code> — <a href=\"../disclosure/carousel\" svelte:prefetch=\"true\"><code>Carousel</code></a></li>\n<li><code>--disable-components-disclosure-tab</code> — <a href=\"../disclosure/tab\" svelte:prefetch=\"true\"><code>Tab</code></a></li>\n</ul>\n</li>\n<li>\n<p>Display</p>\n<ul>\n<li><code>--disable-components-display-badge</code> — <a href=\"../display/badge\" svelte:prefetch=\"true\"><code>Badge</code></a></li>\n<li><code>--disable-components-display-kbd</code> — <a href=\"../display/kbd\" svelte:prefetch=\"true\"><code>Kbd</code></a></li>\n<li><code>--disable-components-display-list</code> — <a href=\"../display/list\" svelte:prefetch=\"true\"><code>List</code></a></li>\n<li><code>--disable-components-display-table</code> — <a href=\"../display/table\" svelte:prefetch=\"true\"><code>Table</code></a></li>\n</ul>\n</li>\n<li>\n<p>Embedded</p>\n<ul>\n<li><code>--disable-components-embedded-figure</code> — <a href=\"../embedded/figure\" svelte:prefetch=\"true\"><code>Figure</code></a></li>\n</ul>\n</li>\n<li>\n<p>Feedback</p>\n<ul>\n<li><code>--disable-components-feedback-dot</code> — <a href=\"../feedback/dot\" svelte:prefetch=\"true\"><code>Dot</code></a></li>\n<li><code>--disable-components-feedback-ellipsis</code> — <a href=\"../feedback/ellipsis\" svelte:prefetch=\"true\"><code>Ellipsis</code></a></li>\n<li><code>--disable-components-feedback-progress</code> — <a href=\"../feedback/progress\" svelte:prefetch=\"true\"><code>Progress</code></a></li>\n</ul>\n</li>\n<li>\n<p>Interactables</p>\n<ul>\n<li><code>--disable-components-interactables-button</code> — <a href=\"../interactables/button\" svelte:prefetch=\"true\"><code>Button</code></a></li>\n<li><code>--disable-components-interactables-check</code> — <a href=\"../interactables/check\" svelte:prefetch=\"true\"><code>Check</code></a></li>\n<li><code>--disable-components-interactables-file-drop-input</code> — <a href=\"../interactables/filedropinput\" svelte:prefetch=\"true\"><code>FileDropInput</code></a></li>\n<li><code>--disable-components-interactables-form</code> — <a href=\"../interactables/form\" svelte:prefetch=\"true\"><code>Form</code></a></li>\n<li><code>--disable-components-interactables-number-input</code> — <a href=\"../interactables/numberinput\" svelte:prefetch=\"true\"><code>NumberInput</code></a></li>\n<li><code>--disable-components-interactables-radio</code> — <a href=\"../interactables/radio\" svelte:prefetch=\"true\"><code>Radio</code></a></li>\n<li><code>--disable-components-interactables-switch</code> — <a href=\"../interactables/switch\" svelte:prefetch=\"true\"><code>Switch</code></a></li>\n<li><code>--disable-components-interactables-text-input</code> — <a href=\"../interactables/textinput\" svelte:prefetch=\"true\"><code>TextInput</code></a></li>\n</ul>\n</li>\n<li>\n<p>Layouts</p>\n<ul>\n<li><code>--disable-components-layouts-center</code> — <a href=\"../layouts/center\" svelte:prefetch=\"true\"><code>Center</code></a></li>\n<li><code>--disable-components-layouts-container</code> — <a href=\"../layouts/container\" svelte:prefetch=\"true\"><code>Container</code></a></li>\n<li><code>--disable-components-layouts-divider</code> — <a href=\"../layouts/divider\" svelte:prefetch=\"true\"><code>Divider</code></a></li>\n<li><code>--disable-components-layouts-grid</code> — <a href=\"../layouts/grid\" svelte:prefetch=\"true\"><code>Grid</code></a></li>\n<li><code>--disable-components-layouts-group</code> — <a href=\"../layouts/group\" svelte:prefetch=\"true\"><code>Group</code></a></li>\n<li><code>--disable-components-layouts-mosaic</code> — <a href=\"../layouts/mosaic\" svelte:prefetch=\"true\"><code>Mosaic</code></a></li>\n<li><code>--disable-components-layouts-position</code> — <a href=\"../layouts/position\" svelte:prefetch=\"true\"><code>Position</code></a></li>\n<li><code>--disable-components-layouts-scrollable</code> — <a href=\"../layouts/scrollable\" svelte:prefetch=\"true\"><code>Scrollable</code></a></li>\n<li><code>--disable-components-layouts-spacer</code> — <a href=\"../layouts/spacer\" svelte:prefetch=\"true\"><code>Spacer</code></a></li>\n<li><code>--disable-components-layouts-stack</code> — <a href=\"../layouts/stack\" svelte:prefetch=\"true\"><code>Stack</code></a></li>\n</ul>\n</li>\n<li>\n<p>Navigation</p>\n<ul>\n<li><code>--disable-components-navigation-anchor</code> — <a href=\"../navigation/anchor\" svelte:prefetch=\"true\"><code>Anchor</code></a></li>\n<li><code>--disable-components-navigation-aside</code> — <a href=\"../navigation/aside\" svelte:prefetch=\"true\"><code>Aside</code></a></li>\n<li><code>--disable-components-navigation-breadcrumb</code> — <a href=\"../navigation/breadcrumb\" svelte:prefetch=\"true\"><code>Breadcrumb</code></a></li>\n<li><code>--disable-components-navigation-menu</code> — <a href=\"../navigation/menu\" svelte:prefetch=\"true\"><code>Menu</code></a></li>\n<li><code>--disable-components-navigation-omni</code> — <a href=\"../navigation/omni\" svelte:prefetch=\"true\"><code>Omni</code></a></li>\n</ul>\n</li>\n<li>\n<p>Overlays</p>\n<ul>\n<li><code>--disable-components-overlays-backdrop</code> — <a href=\"../overlays/backdrop\" svelte:prefetch=\"true\"><code>Backdrop</code></a></li>\n<li><code>--disable-components-overlays-clickable</code> — <a href=\"../overlays/clickable\" svelte:prefetch=\"true\"><code>Clickable</code></a></li>\n<li><code>--disable-components-overlays-overlay</code> — <a href=\"../overlays/overlay\" svelte:prefetch=\"true\"><code>Overlay</code></a></li>\n<li><code>--disable-components-overlays-popover</code> — <a href=\"../overlays/popover\" svelte:prefetch=\"true\"><code>Popover</code></a></li>\n</ul>\n</li>\n<li>\n<p>Surfaces</p>\n<ul>\n<li><code>--disable-components-surfaces-box</code> — <a href=\"../surfaces/box\" svelte:prefetch=\"true\"><code>Box</code></a></li>\n<li><code>--disable-components-surfaces-card</code> — <a href=\"../surfaces/card\" svelte:prefetch=\"true\"><code>Card</code></a></li>\n<li><code>--disable-components-surfaces-hero</code> — <a href=\"../surfaces/hero\" svelte:prefetch=\"true\"><code>Hero</code></a></li>\n<li><code>--disable-components-surfaces-tile</code> — <a href=\"../surfaces/tile\" svelte:prefetch=\"true\"><code>Tile</code></a></li>\n</ul>\n</li>\n<li>\n<p>Typography</p>\n<ul>\n<li><code>--disable-components-typography-blockquote</code> — <a href=\"../typography/blockquote\" svelte:prefetch=\"true\"><code>Blockquote</code></a></li>\n<li><code>--disable-components-typography-code</code> — <a href=\"../typography/code\" svelte:prefetch=\"true\"><code>Code</code></a></li>\n<li><code>--disable-components-typography-heading</code> — <a href=\"../typography/heading\" svelte:prefetch=\"true\"><code>Heading</code></a></li>\n<li><code>--disable-components-typography-text</code> — <a href=\"../typography/text\" svelte:prefetch=\"true\"><code>Text</code></a></li>\n</ul>\n</li>\n<li>\n<p>Utilities</p>\n<ul>\n<li><code>--disable-components-utilities-animation</code> — <a href=\"../utilities/animation\" svelte:prefetch=\"true\"><code>Animation</code></a></li>\n<li><code>--disable-components-utilities-portal</code> — <a href=\"../utilities/portal\" svelte:prefetch=\"true\"><code>Portal</code></a></li>\n<li><code>--disable-components-utilities-transition</code> — <a href=\"../utilities/transition\" svelte:prefetch=\"true\"><code>Transition</code></a></li>\n</ul>\n</li>\n<li>\n<p>Widgets</p>\n<ul>\n<li><code>--disable-components-widgets-dataselect</code> — <a href=\"../widgets/dataselect\" svelte:prefetch=\"true\"><code>DataSelect</code></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"globals\">Globals</h3>\n<blockquote data-palette=\"alert\">\n<p><strong>WARNING</strong>: Most non-Component specific properties are implemented as global CSS attributes to reduce redundancy. If you turn off the feature, it turns off for <strong>ALL</strong> Components.</p>\n</blockquote>\n<ul>\n<li><code>--disable-globals-alignments</code> — <code>&lt;* alignment=&quot;{ALIGNMENT}&quot; alignment_x=&quot;{ALIGNMENT}&quot; alignment_y=&quot;{ALIGNMENT}&quot;&gt;</code></li>\n<li><code>--disable-globals-alignments-responsitivity</code> — <code>&lt;* alignment={[&quot;{VIEWPORT}:{ALIGNMENT}]} alignment_x={[&quot;{VIEWPORT}:{ALIGNMENT}]} alignment_y={[&quot;{VIEWPORT}:{ALIGNMENT}]}&gt;</code></li>\n<li><code>--disable-globals-elevations</code> — <code>&lt;* elevation=&quot;{ELEVATION}&quot;&gt;</code></li>\n<li><code>--disable-globals-elevations-responsitivity</code> — <code>&lt;* elevation={[&quot;{VIEWPORT}:{ELEVATION}&quot;]}&gt;</code></li>\n<li><code>--disable-globals-fit</code> — <code>&lt;* fit=&quot;{FIT}&quot;&gt;</code></li>\n<li><code>--disable-globals-fit-responsitivity</code> — <code>&lt;* fit={[&quot;{VIEWPORT}:{FIT}&quot;]}&gt;</code></li>\n<li><code>--disable-globals-grid</code> — <code>&lt;* points=&quot;{POINTS}&quot; span=&quot;{SPAN}&quot; span_x=&quot;{SPAN}&quot; span_y=&quot;{SPAN}&quot;&gt;</code></li>\n<li><code>--disable-globals-grid-responsitivity</code> — <code>&lt;* points={[&quot;{VIEWPORT}:{POINTS}&quot;]} span={[&quot;{VIEWPORT}:{SPAN}&quot;]} span_x={[&quot;{VIEWPORT}:{SPAN}&quot;]} span_y={[&quot;{VIEWPORT}:{SPAN}&quot;]}&gt;</code></li>\n<li><code>--disable-globals-intrinsics</code> — <code>&lt;* height max_height min_height margin padding size max_size min_size width max_width min_width&gt;</code></li>\n<li><code>--disable-globals-intrinsics-responsitivity</code> — <code>&lt;* height max_height min_height margin padding size max_size min_size width max_width min_width&gt;</code></li>\n<li><code>--disable-globals-orientations</code> — <code>&lt;* orientation=&quot;{ORIENTATION}&quot;&gt;</code></li>\n<li><code>--disable-globals-orientations-responsitivity</code> — <code>&lt;* orientation={[&quot;{VIEWPORT}:{ORIENTATION}&quot;]}&gt;</code></li>\n<li><code>--disable-globals-palettes</code> — <code>&lt;* palette=&quot;{PALETTE}&quot;&gt;</code></li>\n<li><code>--disable-globals-radius</code> — <code>&lt;* radius=&quot;{RADIUS}&quot;&gt;</code></li>\n<li><code>--disable-globals-radius-responsitivity</code> — <code>&lt;* radius={[&quot;{VIEWPORT}:{RADIUS}&quot;]}&gt;</code></li>\n<li><code>--disable-globals-sizings</code> — <code>&lt;* sizing=&quot;{SIZING}&quot;&gt;</code></li>\n<li><code>--disable-globals-sizings-responsitivity</code> — <code>&lt;* sizing={[&quot;{VIEWPORT}:{SIZING}&quot;]}&gt;</code></li>\n<li><code>--disable-globals-spacings</code> — <code>&lt;* spacing=&quot;{SPACING}&quot; spacing_x=&quot;{SPACING}&quot; spacing_y=&quot;{SPACING}&quot;&gt;</code></li>\n<li><code>--disable-globals-spacings-responsitivity</code>— <code>&lt;* spacing={[&quot;{VIEWPORT}:{SPACING}&quot;]} spacing_x={[&quot;{VIEWPORT}:{SPACING}&quot;]} spacing_y={[&quot;{VIEWPORT}:{SPACING}&quot;]}&gt;</code></li>\n</ul>\n"}}