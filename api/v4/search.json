{"data":[{"identifier":"/blog/2022-02/0.6.0-alpha-1","title":"v0.6.0 - Alpha 1","text":"Hi and thanks for waiting for the v0.6.0 release! I know feature updates has stalled completely for a while due to the major rearchitecture going on. But it's allowed me to include two major features that I'm sure most people will love! You know what \"they\" say, something something lessons learned the hard way...\nCustom Builds\n\nFor more information, see the Custom Builds documentation.\n\nIt's been a long time since the very first public v0.2.0 release, and A LOT of features have been added in. Which with modern toolchains like Vite, Javascript can be easily tree shaken! What can't be tree shaken however, is the CSS distributables. As of this release, the Framework CSS distributable is a whopping 441+ KiB [MIN: 376+ kB] [MIN-BROTLI: 20+ KiB] [MIN-GZIP: 33+ KiB]. Which is A LOT of raw CSS. Even with the minified version being compressed for transfer.\nOne of the big features in this update is being able to download the source code of any release and disabling specific CSS features via custom builds. Using the build script, we can disable sources of bloat, like the global utility responitivitiy values. e.g. <* margin={[\"mobile:small\"]}>\nWhich takes the Framework CSS distributable from 441+ KiB to 250+ KiB (MIN: 215+ kB) (MIN-BROTLI: 15+ KiB) (MIN-GZIP: 19+ KiB). That's about a ~56% reduction alone!\nSo with this feature you can highly tune your bundle size by excluding features you don't need. This does come with the drawback of needing to manually rebuild (or in a CI) the CSS each time you update Kahi UI. In the future, having a Vite plugin that can on-demand rebuild the SASS codebase will be looked at. And also whenever dart-sass is compatible, integrate a Custom Build and Custom Theme builder into the documentation site.\nCustom Themes\n\nFor more information, see the Custom Themes documentation.\n\nPreviously the only documented way of customizing the theme of Kahi UI was using the per-Component CSS Custom Properties that were available and documented. However the overall global theme was not easily customizable or documented. Now with Custom Builds (see above), you can easily create your own themes.\nWant to add a new palette color that instantly works? Open and edit the src/themes/default/_theme.scss file. And simply use the built-in palette generator and define a new constant.\n\ne.g.\nAlternatively, you can manually specify shades.\nSo check out the documentation and explore the rest of the themeing to make your Application really pop!\nCHANGELOG\n\nRead full changelog on the GitHub Release.\n\n"},{"identifier":"/blog/2022-03/0.6.2-introducing-dataselect","title":"v0.6.2 - Introducing DataSelect","text":"One feature of commonly required in Web Applications is a select Component that can ingest a data structure and output a list of selectable options. Previously Kahi UI didn't have this feature, now it does and is fully styled!\n\nYour browser does not support playing HTML5 video.\nYou can download the file instead.\nHere is a description of the content: DataSelect Preview\n\nSearching\nNot only that. Just like DataTable, fuzzy search is also supported!\n\nYour browser does not support playing HTML5 video.\nYou can download the file instead.\nHere is a description of the content: DataSelect Fuzzy Search\n\nMultiple\nAnd of course, multiple choices are allowed!\n\nYour browser does not support playing HTML5 video.\nYou can download the file instead.\nHere is a description of the content: DataSelect Multiple Choice\n\nWant the user to only be able to select a maximum amount of choices? Sure!\n\nYour browser does not support playing HTML5 video.\nYou can download the file instead.\nHere is a description of the content: DataSelect Multiple Maximum Choices\n\nConclusion\nThere are many more features documented over at the DataSelect documentation. So check it out!\nCHANGELOG\n\nRead full changelog on the GitHub Release.\n\n"},{"identifier":"/docs/actions/auto_focus","title":"auto_focus","text":"\nNOTE: Introduced feature in v0.4.13.\n\nauto_focus is a Svelte Action, which when IAutoFocusOptions.enabled: boolean is true, focuses the first focusable element found within the attached element. When false, restores focus to the previously focused element.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement.\nTarget\nYou can set the element that is focused with a reference or CSS Selector when enabled via IAutoFocusOptions.target: HTMLElement | string option.\n"},{"identifier":"/docs/actions/click_inside","title":"click_inside","text":"\nNOTE: Introduced feature in v0.4.13.\n\nclick_inside is a Svelte Action, which runs a on_click_inside(event: MouseEvent): void callback whenever your attached element is clicked inside of.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement.\nIgnore\nYou can ignore elements that matches a given CSS Selector via the IClickInsideOptions.ignore: string option.\n"},{"identifier":"/docs/actions/click_outside","title":"click_outside","text":"\nNOTE: Introduced feature in v0.2.11.\n\nclick_outside is a Svelte Action, which runs a on_click_outside(event: MouseEvent): void callback whenever your attached element is clicked outside of.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement.\nIgnore\n\nNOTE: Introduced feature in v0.4.13.\n\nYou can ignore elements that matches a given CSS Selector via the IClickOutsideOptions.ignore: string option.\n"},{"identifier":"/docs/actions/intersection_observer","title":"intersection_observer","text":"\nNOTE: Introduced feature in v0.4.1.\n\nintersection_observer is a Svelte Action, which runs a on_intersect(intersections: IntersectionObserverEntry[]): void callback whenever the targetted element intersects the root viewport.\n\nNOTE: The below REPL basically reimplements IntersectionRender.\n\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement. The Action is dependent on IntersectionObserver.\n"},{"identifier":"/docs/actions/keybind","title":"keybind","text":"\nNOTE: Introduced feature in v0.3.1.\n\nkeybind is a Svelte Action, which runs a on_bind(event: IKeybindEvent): void callback whenever your assigned element has focus.\nImports\nCompatibility\nSvelte Actions are always ran on the Browser only with Javascript is enabled. So should not be used for critical end-user functionality, only progressive enhancement.\nBuilt-In Shortcuts\n\nNOTE: Introduced feature in v0.5.3.\n\nThe Framework provides a series of built-in keybinds using pre-configured standard keybinds that you can use in your own code.\n\n\naction_activate — Used for activating the current context, e.g. a focused label.\n\nEnter,   (space)\n\n\n\naction_exit — Used for exiting the current context, e.g. a prompt.\n\nEsc\n\n\n\naction_submit — Used for submitting the current context, e.g. a focused input.\n\nEnter\n\n\n\nnavigate_down — Used for navigating to the next item down.\n\nArrowDown\nRepeatable, 250ms throttle\n\n\n\nnavigate_left — Used for navigating to the next item left.\n\nArrowLeft\nRepeatable, 250ms throttle\n\n\n\nnavigate_right — Used for navigating to the next item right.\n\nArrowRight\nRepeatable, 250ms throttle\n\n\n\nnavigate_up — Used for navigating to the next item up.\n\nArrowUp\nRepeatable, 250ms throttle\n\n\n\nBinding\nYou can configure which set of keys you want to activate the binding by listing the Key Values in a key1+key2+keyN format via the IKeybindOptions.binds: string | string[] option. You can (theoretically) listen to as many keys as you want.\nYou can also have a single binding listen to multiple sets of keys by passing in an array.\nActive Binding\nYou can detect if the keybind is currently being pressed via the IKeybindEvent.detail.active member.\nEvent Management\nJust like with regular events, you can use IKeybindEvent.preventDefault: () => void / IKeybindEvent.stopPropagation: () => void functions to cancel propagation / the Browser using default behavior.\nRepeat\nYou can enable listening to repeat binding activations (e.g. binding being held down) via the IKeybindOptions.repeat: boolean option. And then detect if the current callback is a repeat via the IKeybindEvent.detail.repeat member.\nThrottling\nWhen listening to repeat binding activations, you can throttle activation callbacks for every N amount of milliseconds via the IKeybindOptions.repeat_throttle: number option.\n\nNOTE: Introduced feature in v0.4.13.\n\n\nNOTE: By using throttle_cancel in this pseudo search UI, the Browser scrolling via arrow keys is disabled.\n\nYou can also enable the keybind Action to automatically call preventDefault / stopPropagation on all throttled keydown / keyup events via the IKeybindOptions.throttle_cancel: boolean option.\n"},{"identifier":"/docs/actions/lost_focus","title":"lost_focus","text":"\nNOTE: Introduced feature in v0.5.0.\n\nlost_focus is a Svelte Action, which runs a on_lost_focus(): void callback whenever another element is focused which is not a child of the attached element, OR, the Browser window / tab is no longer actively focused.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement.\nIgnore\nYou can ignore elements that matches a given CSS Selector via the ILostFocusOptions.ignore: string option.\n\nTODO: snippet\n\n"},{"identifier":"/docs/actions/mutation_observer","title":"mutation_observer","text":"\nNOTE: Introduced feature in v0.4.1.\n\nmutation_observer is a Svelte Action, which runs a on_mutate(mutations: MutationRecord[]): void callback whenever the targetted element intersects the root viewport.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement. The Action is dependent on MutationObserver.\n"},{"identifier":"/docs/actions/overflow_clipping","title":"overflow_clipping","text":"\nNOTE: Introduced feature in v0.4.13.\n\n\nIMPORTANT: overflow_clipping only detects if the attached element has is clipping on a given axis, not if the scrollbar is visible.\n\n\nWARNING: This feature can cause performance degradation while enabled.\n\noverflow_clipping is a Svelte Action, which when IOverflowClippingOptions.enabled: boolean is true, runs the IOverflowClippingOptions.on_clip: (entry: {horizontal: boolean, vertical: boolean}) => void callback. Whenever content is clipping the bounding box of the attached element.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement.\n"},{"identifier":"/docs/actions/trap_focus","title":"trap_focus","text":"\nNOTE: Introduced feature in v0.4.13.\n\n\nUSAGE: This feature can not be demonstrated in the REPL, click the Link button to open in Playground.\n\ntrap_focus is a Svelte Action, which when ITrapFocusOptions.enabled: boolean is true, traps focus movement (TAB / SHIFT+TAB) to within the attached element's first and last found focusable elements.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement.\nFirst + Last\n\nUSAGE: This feature can not be demonstrated in the REPL, click the Link button to open in Playground.\n\nYou can customize the first / last focusable elements with references or CSS Selectors via the ITrapFocusOptions.first: HTMLElement | string / ITrapFocusOptions.last: HTMLElement | string options.\n"},{"identifier":"/docs/disclosure/accordion","title":"Accordion","text":"\nNOTE: Introduced feature in v0.4.5.\n\nAccordion Components are used for displaying related content in a collapsible stack of buttons, that toggles between views.\nImports\n\nLogic State\n\nNOTE: Introduced feature in v0.5.2.\n\n\nWARNING: This feature is only available in Javascript-enabled clients.\n\nYou can manually choose which <Accordion.Section> Components are active via the logic_state property.\nInclusive\nYou can change the behavior of the Accordion to allow multiple items to be revealed at once via the behavior property.\nSlot\n\nNOTE: Introduced feature in v0.5.2.\n\nYou can customize the icons the icons that represent the if an <Accordion.Section> Component is open or not via the close / open slots.\nPalette\nYou can change the color palette of the Accordion buttons via the palette property.\nLoading\n\nUSAGE: Use your Browser's devtools to observe this feature.\n\nYou can customize the slot loading behavior of individual Accordion.Section Components to not render their children, via the loading property.\nTransitions\nYou can use Transition Components to provide fancy switching animations.\n"},{"identifier":"/docs/disclosure/carousel","title":"Carousel","text":"\nNOTE: Introduced feature in v0.4.6.\n\nCarousel allows the user to scroll through \"slides\" of content without having to extend the page dimensions.\nImports\nOrientation\nYou can set the Carousel to render vertically via the orientation property.\nSpacing\n\nNOTE: By passing an array, you can set responsive values. e.g. spacing={[\"medium\", \"tablet:small\", \"mobile:tiny\"]}\n\nYou can adjust the spacing between items via the spacing, spacing_x, and spacing_y properties.\n"},{"identifier":"/docs/disclosure/tab","title":"Tab","text":"\nNOTE: Introduced feature in v0.3.1.\n\nTab Components are used for turning what would be multi-page content, into a block of multiple views with a set of radio buttons to toggle between.\nImports\n\nLogic State\n\nNOTE: Introduced feature in v0.5.2.\n\n\nWARNING: This feature is only available in Javascript-enabled clients.\n\nYou can manually choose which <Tab.Section> Component is active via the logic_state property.\nPalette\nYou can change the color palette of the Tab radio buttons via the palette property.\nSizing\nYou can alter how large each Tab radio button should be via the sizing property.\nAlignment\nYou can change the alignment of each Tab radio button via the alignment_x property.\nLoading\n\nUSAGE: Use your Browser's devtools to observe this feature.\n\nYou can customize the slot loading behavior of individual Tab.Section Components to not render their children, via the loading property.\nAnchor\nYou can substitute Tab.Label for Tab.Anchor to support per-page tabbed views.\nTransitions\nYou can use Transition Components to provide fancy switching animations.\n"},{"identifier":"/docs/display/badge","title":"Badge","text":"\nNOTE: Introduced feature in v0.2.0.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nBadge is typically used to subtlely display to the user some type of ancillary information, relating to its siblings / parent UI elements.\nImports\nPalette\nYou can change the color palette of the Badge via the palette property.\nRadius\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. radius={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can modify the border radius of the Badge via the radius property.\nShape\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. shape={[\"circle\", \"tablet:pill\", \"mobile:pill\"]}\n\nYou can modify the shape of the Badge via the shape property.\n"},{"identifier":"/docs/display/datestamp","title":"DateStamp","text":"\nNOTE: Introduced feature in v0.4.10.\n\nDateStamp formats an ISO 8601 / RFC 3339 timestamp into a human readable string, using the user preferences provided by the Browser.\nImports\nCustom Format\n\nNOTE: By using custom format settings, the user's defaults will not be loaded and you will have to opt into each unit of information.\n\nYou can customize how each individual component of the timestamp is displayed via the day, month, weekday, and year properties respectively.\n"},{"identifier":"/docs/display/datetimestamp","title":"DateTimeStamp","text":"\nNOTE: Introduced feature in v0.4.10.\n\nDateTimeStamp formats an ISO 8601 / RFC 3339 timestamp into a human readable string, using the user preferences provided by the Browser.\nImports\n12 Hour\nYou can have the timestamp render as 12-hour time (1...12 AM/PM) instead of 24-hour time (0...23) via the hour_12 property.\nCustom Format\n\nNOTE: By using custom format settings, the user's defaults will not be loaded and you will have to opt into each unit of information.\n\nYou can customize how each individual component of the timestamp is displayed via the day, month, weekday,  year, hour , minute, and second properties respectively.\n"},{"identifier":"/docs/display/kbd","title":"Kbd","text":"\nNOTE: Introduced feature in v0.6.0.\n\nKbd is typically used to communicate a keybinding to the user.\nImports\n"},{"identifier":"/docs/display/list","title":"List","text":"\nNOTE: Introduced feature in v0.2.4.\n\nList is used for rendering simple text lists.\nImports\nElements\nYou can change what type of list is being rendered via the is property.\n"},{"identifier":"/docs/display/table","title":"Table","text":"\nNOTE: Introduced feature in v0.2.7.\n\nTable is typically used to render tabular data in a structured row -> columns format, for end-users to easily read the contents.\nTable Imports\nSpans\n\nNOTE: Introduced feature in v0.4.4.\n\n\nWARNING: This feature was renamed from colspan / rowspan to span_x / span_y in v0.6.0 respectively.\n\nYou can use the span_x / span_y properties on <Table.Column> / <Table.Heading> to adjust the size of table items they take up.\nBorders\nYou can make a Table have borders via the variation property.\nStripes\nYou can make a Table have stripes via the variation property.\nBorders + Stripes\nYou can make a Table have both borders AND stripes via the variation property.\nSizing\n\nNOTE: Introduced feature in v0.3.5.\n\nYou can change the sizes / spacings of the child elements via the sizing property.\nScrollable Tables\nYou can make a Table scrollable by wrapping it with a Scrollable.\n"},{"identifier":"/docs/display/timestamp","title":"TimeStamp","text":"\nNOTE: Introduced feature in v0.4.10.\n\nTimeStamp formats an ISO 8601 / RFC 3339 timestamp into a human readable string, using the user preferences provided by the Browser.\nImports\n12 Hour\nYou can have the timestamp render as 12-hour time (1...12 AM/PM) instead of 24-hour time (0...23) via the hour_12 property.\nCustom Format\n\nNOTE: By using custom format settings, the user's defaults will not be loaded and you will have to opt into each unit of information.\n\nYou can customize how each individual component of the timestamp is displayed via the hour, minute, and second properties respectively.\n"},{"identifier":"/docs/embedded/figure","title":"Figure","text":"\nNOTE: Introduced feature in v0.2.1.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nFigure is a multimedia container Component, providing modifications for things such as images and videos.\nImports\nFit\n\nNOTE: By passing an array, you can set responsive values. e.g. fit={[\"contain\", \"tablet:cover\", \"mobile:cover\"]}\n\nYou can change how the child content is stretched across the Figure container via the fit property.\nRadius\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. radius={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can modify the border radius of the child content via the radius property.\nShape\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. shape={[\"circle\", \"tablet:pill\", \"mobile:pill\"]}\n\nYou can modify the shape of the child content via the shape property.\n"},{"identifier":"/docs/feedback/dot","title":"Dot","text":"\nNOTE: Introduced feature in v0.2.0.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nDot is typically used for calling out other UI elements to the end-user, that they need attention.\nImports\nPalette\nYou can change the color palette of the Dot via the palette property.\n"},{"identifier":"/docs/feedback/ellipsis","title":"Ellipsis","text":"\nNOTE: Introduced feature in v0.2.5.\n\nEllipsis is an indicator used to tell the user that something is loading in the background.\nImports\nSlot\nYou can customize the content used for the animation via the by passing into the default slot.\nAnimations\n\nNOTE: Introduced feature in v0.6.0.\n\nYou can customize which animation is played via the animation property.\nIterations\n\nNOTE: Introduced feature in v0.6.0.\n\nYou can customize how many times the content is repeated via the iterations property.\n"},{"identifier":"/docs/feedback/progress","title":"Progress","text":"\nNOTE: Introduced feature in v0.3.1.\n\nProgress is typically used to render feedback to the end-user about how complete a current task is.\nImports\nRadius\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. radius={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can modify the border radius of a bar Progress via the radius property.\nShape\nYou can modify the shape of the Progress via the shape property.\nPalette\nYou can change the color palette of the Progress via the palette property.\nSizing\n\nWARNING: This feature was renamed from size to sizing in v0.6.0.\n\nYou can change the size of the Progress via the sizing property.\nIndeterminate\nBy not passing the value property, the Progress will render with an animation for tasks that don't have trackable progression.\n"},{"identifier":"/docs/framework/browser-support","title":"Browser Support","text":"Modern Browsers listed below and generally their derivatives. Primary testing happens on Chrome / Firefox, both mobile and desktop. With occasional testing on Gnome Web which is based on WebKit.\n\n\n\n\nChrome\nEdge\nFirefox\nSafari\nEdge (Pre Chromium)\nInternet Explorer\n\n\n\n\nEstimated Minimum\n88+ January 2021\n88+ January 2021\n84+ December 2020\n14.1+ April 2021\nNOT SUPPORTED\nNOT SUPPORTED\n\n\nTested Minimum\n89+\n?\n87+\n?\nNOT SUPPORTED\nNOT SUPPORTED\n\n\n\nFeatures Used\nThe features listed below are used within Kahi UI, and are newer features. So they raise the minimum Browser versions needed.\nCSS\n\nclip-path w/ Shapes\nCSS Custom Properties\nFlexbox w/ Gap\nGrid\ninset\n:is\n:not w/ Selector List\nprefers-color-scheme\n\nJavascript\n\nTODO: Run through the codebase and look for newer JS features used\n\n"},{"identifier":"/docs/framework/custom-builds","title":"Custom Builds","text":"\nWARNING: When using manual builds of Kahi UI, you'll need to rebuild the distributables every time you upgrade Kahi UI.\n\nIf you're building a Web Application that's particularly sensitive to latency, page sizes, etc. It's recommended to create custom builds of the Framework's CSS distributables.\nDownloading\nFirst, you'll need to head over to Releases, download the source code .zip / .tar.gz archive that matches the version of Kahi UI you're developing against, and decompress the archive onto your filesystem.\nInstallation\nOnce you've got everything downloaded and decompressed, open a terminal in the source code directory and install Kahi UI's dependencies.\nBuilding\nNow you can start building the CSS distributables via a NPM script.\nWhich should output in the package/ directory like so.\nThen just copy the files you require into your Web Application's codebase and import them.\nMinifying\nYou can also build the minified versions of the CSS distributables with another NPM script.\nWhich would output to package/ without source maps like so.\nFilters\nEach individual feature of Kahi UI that requires CSS can turned off, removing it from builds. And it's as simple as adding command line parameters. Just run either of the NPM scripts with filter parameters following this format: --disable-{SCOPE}-{FEATURE}.\nFor instance, if wanting to disable Grid and the responsitivity of Spacings (e.g. margin={[\"mobile:medium\"]}), try the following.\n\nUSAGE: The double dashes (--) after build:framework / build:minify is required so NPM passes our command line parameters to the script.\n\nComponents\n\n\nDisclosure\n\n--disable-components-disclosure-accordion — Accordion\n--disable-components-disclosure-carousel — Carousel\n--disable-components-disclosure-tab — Tab\n\n\n\nDisplay\n\n--disable-components-display-badge — Badge\n--disable-components-display-kbd — Kbd\n--disable-components-display-list — List\n--disable-components-display-table — Table\n\n\n\nEmbedded\n\n--disable-components-embedded-figure — Figure\n\n\n\nFeedback\n\n--disable-components-feedback-dot — Dot\n--disable-components-feedback-ellipsis — Ellipsis\n--disable-components-feedback-progress — Progress\n\n\n\nInteractables\n\n--disable-components-interactables-button — Button\n--disable-components-interactables-check — Check\n--disable-components-interactables-file-drop-input — FileDropInput\n--disable-components-interactables-form — Form\n--disable-components-interactables-number-input — NumberInput\n--disable-components-interactables-radio — Radio\n--disable-components-interactables-switch — Switch\n--disable-components-interactables-text-input — TextInput\n\n\n\nLayouts\n\n--disable-components-layouts-center — Center\n--disable-components-layouts-container — Container\n--disable-components-layouts-divider — Divider\n--disable-components-layouts-grid — Grid\n--disable-components-layouts-group — Group\n--disable-components-layouts-mosaic — Mosaic\n--disable-components-layouts-position — Position\n--disable-components-layouts-scrollable — Scrollable\n--disable-components-layouts-spacer — Spacer\n--disable-components-layouts-stack — Stack\n\n\n\nNavigation\n\n--disable-components-navigation-anchor — Anchor\n--disable-components-navigation-aside — Aside\n--disable-components-navigation-breadcrumb — Breadcrumb\n--disable-components-navigation-menu — Menu\n--disable-components-navigation-omni — Omni\n\n\n\nOverlays\n\n--disable-components-overlays-backdrop — Backdrop\n--disable-components-overlays-clickable — Clickable\n--disable-components-overlays-overlay — Overlay\n--disable-components-overlays-popover — Popover\n\n\n\nSurfaces\n\n--disable-components-surfaces-box — Box\n--disable-components-surfaces-card — Card\n--disable-components-surfaces-hero — Hero\n--disable-components-surfaces-tile — Tile\n\n\n\nTypography\n\n--disable-components-typography-blockquote — Blockquote\n--disable-components-typography-code — Code\n--disable-components-typography-heading — Heading\n--disable-components-typography-text — Text\n\n\n\nUtilities\n\n--disable-components-utilities-animation — Animation\n--disable-components-utilities-portal — Portal\n--disable-components-utilities-transition — Transition\n\n\n\nWidgets\n\n--disable-components-widgets-dataselect — DataSelect\n\n\n\nGlobals\n\nWARNING: Most non-Component specific properties are implemented as global CSS attributes to reduce redundancy. If you turn off the feature, it turns off for ALL Components.\n\n\n--disable-globals-alignments — <* alignment=\"{ALIGNMENT}\" alignment_x=\"{ALIGNMENT}\" alignment_y=\"{ALIGNMENT}\">\n--disable-globals-alignments-responsitivity — <* alignment={[\"{VIEWPORT}:{ALIGNMENT}]} alignment_x={[\"{VIEWPORT}:{ALIGNMENT}]} alignment_y={[\"{VIEWPORT}:{ALIGNMENT}]}>\n--disable-globals-elevations — <* elevation=\"{ELEVATION}\">\n--disable-globals-elevations-responsitivity — <* elevation={[\"{VIEWPORT}:{ELEVATION}\"]}>\n--disable-globals-fit — <* fit=\"{FIT}\">\n--disable-globals-fit-responsitivity — <* fit={[\"{VIEWPORT}:{FIT}\"]}>\n--disable-globals-grid — <* points=\"{POINTS}\" span=\"{SPAN}\" span_x=\"{SPAN}\" span_y=\"{SPAN}\">\n--disable-globals-grid-responsitivity — <* points={[\"{VIEWPORT}:{POINTS}\"]} span={[\"{VIEWPORT}:{SPAN}\"]} span_x={[\"{VIEWPORT}:{SPAN}\"]} span_y={[\"{VIEWPORT}:{SPAN}\"]}>\n--disable-globals-intrinsics — <* height max_height min_height margin padding size max_size min_size width max_width min_width>\n--disable-globals-intrinsics-responsitivity — <* height max_height min_height margin padding size max_size min_size width max_width min_width>\n--disable-globals-orientations — <* orientation=\"{ORIENTATION}\">\n--disable-globals-orientations-responsitivity — <* orientation={[\"{VIEWPORT}:{ORIENTATION}\"]}>\n--disable-globals-palettes — <* palette=\"{PALETTE}\">\n--disable-globals-radius — <* radius=\"{RADIUS}\">\n--disable-globals-radius-responsitivity — <* radius={[\"{VIEWPORT}:{RADIUS}\"]}>\n--disable-globals-sizings — <* sizing=\"{SIZING}\">\n--disable-globals-sizings-responsitivity — <* sizing={[\"{VIEWPORT}:{SIZING}\"]}>\n--disable-globals-spacings — <* spacing=\"{SPACING}\" spacing_x=\"{SPACING}\" spacing_y=\"{SPACING}\">\n--disable-globals-spacings-responsitivity— <* spacing={[\"{VIEWPORT}:{SPACING}\"]} spacing_x={[\"{VIEWPORT}:{SPACING}\"]} spacing_y={[\"{VIEWPORT}:{SPACING}\"]}>\n\n"},{"identifier":"/docs/framework/responsitivity","title":"Responsitivity","text":"Kahi UI supports responsive design out of the box for the majority of its Components. Such as Grid, where you can define how many items are displayed at each Viewport.\nViewports\nAs mentioned above, Kahi UI has the concept of four pre-defined breakpoints that are known as Viewports. Which are only active whenever the Browser window's width is within two sizes.\n\n\n\nViewport\nMinimum\nMaximum\n\n\n\n\nmobile\n0px\n640px\n\n\ntablet\n641px\n768px\n\n\ndesktop\n769px\n1024px\n\n\nwidescreen\n1025px\n∞\n\n\n\nSyntax\nTo be able to use Viewport-specific values, you just need to prefix your values with {VIEWPORT}:, e.g. <Grid points=\"mobile:3\">. But then you can't specify default values or other Viewport-specifics. For that you need to pass an array in like below.\n\nUSAGE: REPL does not support viewport values, resize your Browser to observe this feature.\n\n"},{"identifier":"/docs/globals/actions","title":"Actions","text":"\nNOTE: Introduced feature in v0.4.11.\n\nAs a limitation of Svelte, you cannot use  on Components. So the Framework provides a special syntax to support forwarding actions to a Component's main elements.\n\n"},{"identifier":"/docs/globals/contents","title":"Contents","text":"\nNOTE: Introduced feature in v0.5.0.\n\nAll Components have access to the data-contents global HTML attribute via the contents property which removes the Component's bounding box / stylings from the DOM tree.\n\nUSAGE: REPL does not support viewport values, resize your Browser to observe this feature.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. contents={[\"mobile\", \"tablet\"]}\n\n"},{"identifier":"/docs/globals/elements","title":"Elements","text":"Like binding DOM nodes, most Components support binding their top-level layout HTMLElement via the element property instead of this.\n"},{"identifier":"/docs/globals/events","title":"Events","text":"Like binding normal DOM events with Svelte. Various Components in the Framework support forwarding their element's native events, or supply their own events for their own specific logic.\n"},{"identifier":"/docs/globals/hidden","title":"Hidden","text":"\nNOTE: Introduced feature in v0.2.2.\n\nAll Components have access to the data-hidden global HTML attribute via the hidden property. Unlike the standard hidden HTML attribute, data-hidden supports Responsitivity.\n\nUSAGE: REPL does not support viewport values, resize your Browser to observe this feature.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. hidden={[\"mobile\", \"tablet\"]}\n\n"},{"identifier":"/docs/globals/html5","title":"HTML5","text":"All Components have access to common HTML5 global attributes and events.\nclass\n\nNOTE: Introduced feature in v0.2.0.\n\nclass allows you to apply CSS classes that you've defined to Components. However, you will have to use :global on your class names to bypass Svelte's local scoping.\nstyle\n\nNOTE: Introduced feature in v0.2.0.\n\nstyle allows you to apply inline CSS properties to Components.\nid\n\nNOTE: Introduced feature in v0.2.0.\n\nid allows you to set an identifier that other elements can target or targettable for scrolling by a URL fragment.\nname\n\nNOTE: Introduced feature in v0.2.0.\n\nname allows you to set an identifier for the Component to set its value to in a form, or, can targettable by an Anchor.\ntitle\n\nNOTE: Introduced feature in v0.2.0.\n\ntitle allows you to set a timed effect to show a text tooltip whenever an end-user hovers for long enough. Typically you don't want to rely on this attribute for the UI. Rather use it for semantic and assistive purposes.\ntabindex\n\nNOTE: Introduced feature in v0.2.0.\n\ntabindex allows you to configure how the Browser cycles through elements in the current stacking context when they press their tab keyboard button, or similar.\n\nTODO: Event samples\n\n"},{"identifier":"/docs/globals/sizes","title":"Sizes","text":"All Components have access to the global height, width, and size HTML data attributes. All of which, supports Responsitivity.\nWidth\n\nNOTE: Introduced feature in v0.2.0.\n\n\nNOTE: Introduced block sizing feature in v0.6.0.\n\n\nNOTE: Introduced icon sizing feature in v0.6.0.\n\n\nNOTE: Introduced Viewport breakpoint sizing feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. width={[\"25\", \"tablet:viewport-50\"]}\n\nYou can set a defined width for your Components via the width property.\nHeight\n\nNOTE: Introduced feature in v0.2.0.\n\n\nNOTE: Introduced block sizing feature in v0.6.0.\n\n\nNOTE: Introduced icon sizing feature in v0.6.0.\n\n\nNOTE: Introduced Viewport breakpoint sizing feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. height={[\"25\", \"tablet:viewport-50\"]}\n\nYou can set a defined height for your Components via the height property.\nSize\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. size={[\"25\", \"tablet:viewport-50\"]}\n\nYou can set a defined width + height for your Components via the size property.\nMinimums + Maximums\n\nNOTE: Introduced feature in v0.2.0.\n\nYou can also set minimums or maximum sizes via prefixing your properties with max_ or min_.\n"},{"identifier":"/docs/globals/spacings","title":"Spacings","text":"All Components have access to the global margin and padding HTML data attributes. All of which, supports Responsitivity.\nMargin\n\nNOTE: Introduced feature in v0.2.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. margin={[\"small\", \"tablet:large\"]}\n\nYou can set margins for your Components via the margin property.\nPadding\n\nNOTE: Introduced feature in v0.2.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. padding={[\"small\", \"tablet:large\"]}\n\nYou can set paddings for your Components via the padding property.\nDirectional\nAll Spacings properties have directional support via the *_x, *_y, *_left, *_top, *_right, and *_bottom suffixes.\n"},{"identifier":"/docs/globals/sveltekit","title":"SvelteKit","text":"All Components have access to all global  attributes.\nsveltekit:noscroll\n\nNOTE: Introduced feature in v0.2.0.\n\nsveltekit:noscroll configures SvelteKit to disable scrolling to top / linked element ID #hash whenever the link is clicked.\nsveltekit:prefetch\n\nNOTE: Introduced feature in v0.2.0.\n\nsveltekit:prefetch configures SvelteKit to fetch the linked route's load whenever the link is hovered.\n"},{"identifier":"/docs/guides/getting-started","title":"Getting Started","text":"Installation\nUsing a terminal inside of your project's directory, use npm to install the package.\nImporting Stylesheet\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nFirst if your toolchain supports it, import the required CSS files from @kahi-ui/framework/dist:\nOtherwise download the required CSS files from Releases and use <link rel=\"stylesheet\">:\nUsage\nImport Components by their variable name from @kahi-ui/framework:\nSome Components are multi-part patterns, so you'll need to import their namespaces:\n"},{"identifier":"/docs/interactables/button","title":"Button","text":"\nNOTE: Introduced feature in v0.2.0.\n\nButton is used to usually trigger an action in the Web Application, such as submitting forms or opening an Overlay.\nImports\nPalette\nYou can change the color palette of the Button via the palette property.\nClear\nButton components have a special variation that renders as text with no background, that lightly fills in when clicked.\nOutline\nButton components have a special variation that renders them as text with an outline, the fills in when clicked.\nSubtle\n\nNOTE: Introduced feature in v0.5.1.\n\nYou can alter the Button Component to use less intense / remove \"attention grabbing\" animations via the variation property.\nStates\nYou can control the state of the Button via the active and disabled properties.\nSizing\n\nWARNING: This feature was renamed from size to sizing in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. sizing={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can change the size of the Button via the sizing property.\nRadius\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. radius={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can change the border radius of the Button via the radius property.\nShapes\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. shape={[\"circle\", \"tablet:pill\", \"mobile:pill\"]}\n\nYou can change the shape of the Button via the shape property.\nElements\n\nWARNING: This feature was updated to require explicit is property in v0.6.0.\n\nYou can alter the HTML element tag rendered to DOM via the is property to render things like links and form buttons.\n"},{"identifier":"/docs/interactables/check","title":"Check","text":"\nNOTE: Introduced feature in v0.2.7.\n\nCheck is typically used to present a set of options to the end-user, which they can then choose from.\nImports\nStates\nYou can control the state of the Check via the active, disabled, and state properties.\nPalette\nYou can change the color palette of the Check via the palette property.\nSizing\n\nWARNING: This feature was renamed from size to sizing in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. sizing={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can change the size of the Check via the sizing property.\nFlush\n\nNOTE: Introduced feature in v0.2.13.\n\nYou can change the appearance of the Check to be flush with the rest of the Application content via the variation property.\n"},{"identifier":"/docs/interactables/filedropinput","title":"FileDropInput","text":"\nNOTE: Introduced feature in v0.4.6.\n\n\nNOTE: Keep in mind, while the Component does work without Javascript, it cannot display its value like FileInput can without.\n\nFileDropInput acts as a click-to-prompt and drag'n'drop file input stylized as an alternative to FileInput.\nImports\nPalette\nYou can change the color palette of the FileDropInput via the palette property.\n"},{"identifier":"/docs/interactables/form","title":"Form","text":"Form Components are helpers to supplement input Components that are meant for form Components like TextInput.\nHelpText\n\nNOTE: Introduced feature in v0.2.7.\n\nForm.HelpText is typically used for displaying information about how to input information into a form properly.\nImports\nLabel\n\nNOTE: Introduced feature in v0.2.7.\n\n\nIMPORTANT: This feature sets a Svelte Context that inner content can consume.\n\nForm.Label focuses the target input Component whenever its child content is clicked.\nControl\n\nNOTE: Introduced feature in v0.2.7.\n\n\nIMPORTANT: This feature sets a Svelte Context that inner content can consume.\n\nForm.Control is typically used to display form and input Components in a preformatted stack.\nGroup\n\nNOTE: Introduced feature in v0.2.7.\n\n\nNOTE: This feature is renderless, meaning it does not render anything extra to the DOM.\n\nForm.Group lets you directly set the relevant form-related Svelte Contexts via its properties without using any preformatted shown above.\nLegend\n\nNOTE: Introduced feature in v0.6.0.\n\n\nIMPORTANT: When using outside of a Form.FieldSet, use <Form.Legend is=\"span\"> for semantically correct HTML tags.\n\nForm.Legend is typically used for categorization headings, rendering text as smaller bold text with letter spacing.\nFieldSet\n\nNOTE: Introduced feature in v0.6.0.\n\nForm.FieldSet is typically used for grouping together related form Components into a visually distinct box.\n"},{"identifier":"/docs/interactables/hiddeninput","title":"HiddenInput","text":"\nNOTE: Introduced feature in v0.2.13.\n\n\nTODO: documentation\n\n...\n"},{"identifier":"/docs/interactables/numberinput","title":"NumberInput","text":"\nNOTE: Introduced feature in v0.4.14.\n\n\nIMPORTANT: This feature only runs on Javascript-enabled clients, you NEED to ALWAYS validate user input on the server.\n\nNumberInput is a subset of NumberInput, which only accepts numbers and masks user input accordingly.\nImports\nMaximum + Minimum\n\nNOTE: Introduced feature in v0.6.0.\n\nYou can have the NumberInput use disallow typing in numbers not within the range of the max and min properties.\nPalette\nYou can change the color palette of the NumberInput via the palette property.\nBlock\nYou can alter the NumberInput render as an opaque block via the variation property.\nFlush\nYou can change the appearance of the NumberInput to be flush with the rest of the Application content via the variation property.\nSizing\n\nWARNING: This feature was renamed from size to sizing in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. sizing={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can change the size of the NumberInput via the sizing property.\nRadius\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. radius={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can change the border radius of the NumberInput via the radius property.\nShapes\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. shape={[\"circle\", \"tablet:pill\", \"mobile:pill\"]}\n\nYou can change the shape of the NumberInput via the shape property.\nAlignment\n\nWARNING: This feature was renamed from align to alignment_x in v0.6.0.\n\nYou can alter the alignment of the Component via the alignment_x property.\nPlaceholder\nYou can set the NumberInput to show placeholder text whenever there is no current value.\nSpan X\n\nWARNING: This feature was renamed from characters to span_x in v0.6.0.\n\nYou can set how wide your NumberInput to an approximation of character width via the span_x property.\n"},{"identifier":"/docs/interactables/radio","title":"Radio","text":"\nNOTE: Introduced feature in v0.2.7.\n\nRadio is typically used to present a set of mutually-exclusive options to the end-user, which they can then choose from.\nImports\nStates\nYou can control the state of the Radio via the active, disabled, and state properties.\nPalette\nYou can change the color palette of the Radio via the palette property.\nSizing\n\nWARNING: This feature was renamed from size to sizing in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. sizing={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can change the size of the Radio via the sizing property.\nFlush\n\nNOTE: Introduced feature in v0.2.13.\n\nYou can change the appearance of the Radio to be flush with the rest of the Application content via the variation property.\n"},{"identifier":"/docs/interactables/switch","title":"Switch","text":"\nNOTE: Introduced feature in v0.2.7.\n\nSwitch is typically used to present to the end-user features, settings, and other toggles that they can turn on / off.\nImports\nStates\nYou can control the state of the Switch via the active, disabled, and state properties.\nPalette\nYou can change the color palette of the Switch via the palette property.\nSizing\n\nWARNING: This feature was renamed from size to sizing in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. sizing={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can change the size of the Switch via the sizing property.\n"},{"identifier":"/docs/interactables/textinput","title":"TextInput","text":"\nNOTE: Introduced feature in v0.2.7.\n\nTextInput is typically used for capturing string input from an end-user for input into forms, XHR requests, etc.\nImports\nMaximum + Minimum\n\nWARNING: This feature was renamed from max_length / min_length to max / min in v0.6.0 respectively.\n\n...\n\nTODO: snippet\n\nInput Masking\n\nNOTE: Introduced feature in v0.4.14.\n\n\nIMPORTANT: This feature only runs on Javascript-enabled clients, you NEED to ALWAYS validate user input on the server.\n\nYou can enable input masking (dropping input that doesn't match a constraint) by enabling mask and setting the pattern properties.\n\nNOTE: The below input is masked to hexadecimal input, e.g. abcdef1234567890\n\nOr by implementing custom logic via the mask event.\nPalette\nYou can change the color palette of the TextInput via the palette property.\nBlock\nYou can alter the TextInput render as an opaque block via the variation property.\nFlush\n\nNOTE: Introduced feature in v0.2.16.\n\nYou can change the appearance of the TextInput to be flush with the rest of the Application content via the variation property.\nSizing\n\nWARNING: This feature was renamed from size to sizing in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. sizing={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can change the size of the TextInput via the sizing property.\nRadius\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. radius={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can change the border radius of the TextInput via the radius property.\nShapes\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. shape={[\"circle\", \"tablet:pill\", \"mobile:pill\"]}\n\nYou can change the shape of the TextInput via the shape property.\nTypes\nYou can change your input type between email, password, search, text (DEFAULT), url via the type property.\nTextArea\nYou can have the TextInput render as a <textarea> via the is property.\nAlignment\n\nWARNING: This feature was renamed from align to alignment_x in v0.6.0.\n\nYou can alter the alignment of the Component via the alignment_x property.\nPlaceholder\nYou can set the TextInput to show placeholder text whenever there is no current value.\nSpan X + Y\n\nWARNING: This feature was renamed from characters / lines to span_x / span_y in v0.6.0 respectively.\n\nYou can set how wide your TextInput to an approximation of character width and new lines via the span_x and span_y properties respectively.\nResizable TextArea\nYou alter the a <textarea> based TextInput to resizable both axis true, horizontally x, or vertically y via the resizable property.\n"},{"identifier":"/docs/layouts/article","title":"Article","text":"\nNOTE: Introduced feature in v0.6.0.\n\nArticle is typically used to wrap Markdown and other plaintext format outputs to support styling semantic elements as their Kahi UI Component counterparts, with standardized spacing.\nImports\nAnchor\nVia the <a> HTML tag, you can render links with hover effects and emphasis coloring.\nBlockquote\nVia the <blockquote> and <cite> HTML tags, you can present formatted quotes.\nCode\nVia the <code> HTML tag or <pre><code> HTML tag pair, you can wrap chunks of code to be smaller and given a background.\n\nDivider\nVia the <hr> HTML tag, you can break sections of content with a horizontal line.\nEmbedded\n\nTODO: implementation\n\n...\nHeading\nVia the <h1>, <h2>, <h3>, <h4>, <h5>, and <h6> HTML tag, you can wrap text to have header sizing.\nList\nVia the <ol>, <li>, and <ul> HTML tags, you can create formatted lists.\nParagraph\nVia the <p> HTML tag, you can wrap paragraphs of text with bottom margin for formatting.\nSmall\nVia the <small> HTML tag, you can render text smaller than the current font size and have it blend more with the background.\nTable\nVia the <table> HTML tag, you can render out tabular data with semantic elements.\nElements\nYou can change the HTML tag rendered to DOM via the is property.\n"},{"identifier":"/docs/layouts/center","title":"Center","text":"\nNOTE: Introduced feature in v0.4.2.\n\nCenter is a layout primitive used to quickly center the child content within its self.\nImports\n"},{"identifier":"/docs/layouts/container","title":"Container","text":"\nNOTE: Introduced feature in v0.2.0.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nContainer is a layout primitive used to typically constrain chunks of content to a max width or parent width, and centered horizontally with padding. By default it sets the max width to 65 characters.\nImports\nElements\n\nNOTE: Introduced feature <Container is=\"article\"> in v0.6.0.\n\nYou can change the HTML tag rendered to DOM via the is property.\n"},{"identifier":"/docs/layouts/divider","title":"Divider","text":"\nNOTE: Introduced feature in v0.2.0.\n\nDivider is typically used to visually separate content for easier reading comprehension.\nImports\nPalette\nYou can change the color palette of the Divider via the palette property.\nOrientation\nYou can set the Divider to render vertically via the orientation property.\nText\nDivider components can also render text within their separators via passing content into the default slot.\n"},{"identifier":"/docs/layouts/grid","title":"Grid","text":"\nNOTE: Introduced feature in v0.2.0.\n\nGrid is a multi-part layout pattern for setting up a grid of items organized to a 12-point system.\n\nUSAGE: REPL does not support viewport values, resize your Browser to observe this feature.\n\nImports\nPoints\n\nNOTE: By passing an array, you can set responsive values. e.g. points={[\"7\", \"tablet:6\", \"mobile:5\"]}\n\nYou can adjust how many points the Grid.Container items are divided by via the points property.\nSpacing\n\nNOTE: By passing an array, you can set responsive values. e.g. spacing={[\"medium\", \"tablet:small\", \"mobile:tiny\"]}\n\nYou can adjust the spacing between items via the spacing, spacing_x, and spacing_y properties.\nItem Span\n\nNOTE: Introduced feature in v0.2.10.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. span={[\"3\", \"tablet:2\", \"mobile:1\"]}\n\nYou can adjust grid span of individual items via the span, span_x, span_y properties, by wrapping the items in Grid.Item.\n"},{"identifier":"/docs/layouts/group","title":"Group","text":"\nNOTE: Introduced feature in v0.2.0.\n\nGroup is a layout primitive used for grouping together like Components with their inner border radii removed.\nImports\nOrientation\nYou can set the Group to render its children Components vertically, via the orientation property.\nStacked\nYou can set the variation property to stacked to visually stack children Components, like avatar stacks.\n\nSpacing\n\nNOTE: Introduced feature in v0.6.0.\n\nWhen the variation property is set to stacked, you can control the negative spacing via the spacing, spacing_x, and spacing_y properties.\n"},{"identifier":"/docs/layouts/mosaic","title":"Mosaic","text":"\nNOTE: Introduced feature in v0.2.0.\n\n\nWARNING: This feature was renamed from <Mosaic> to <Mosaic.Container> in v0.6.0.\n\nMosaic is a layout primitive for setting up a mosaic of items organized to displaying as many child items at a certain size as possible.\nImports\nSizing\n\nNOTE: By passing an array, you can set responsive values. e.g. sizing={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can alter how large each Mosaic item should be via the sizing property.\nSpacing\n\nNOTE: By passing an array, you can set responsive values. e.g. spacing={[\"medium\", \"tablet:small\", \"mobile:tiny\"]}\n\nYou can adjust the spacing between items via the spacing, spacing_x, and spacing_y properties.\nItem Span\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. span={[\"3\", \"tablet:2\", \"mobile:1\"]}\n\nYou can adjust span of individual items via the span, span_x, span_y properties, by wrapping the items in Mosaic.Item.\n"},{"identifier":"/docs/layouts/position","title":"Position","text":"\nNOTE: Introduced feature in v0.4.2.\n\nPosition is a layout primitive that can float itself and child content in specific regions of the containing Components.\nImports\nAction\n\nNOTE: Introduced feature in v0.5.0.\n\nTypically used for FABs (Floating Action Buttons), you can set the Position to float its self (and its children) into a corner relative to the viewport via the variation property.\nYou can also adjust how far the Position sits away from the corner via the spacing, spacing_x, spacing_y properties respectively.\nYou can also adjust the Position to sit relative to the parent container instead of viewport via the variation property.\nIndicator\nTypically used for unread indicators, you can set the Position to float its self (and its children) onto a corner relative to its parent container via the variation property.\nRaised\nYou can set the Position to raise its self (and its children) in-place via the variation property.\n"},{"identifier":"/docs/layouts/scrollable","title":"Scrollable","text":"\nNOTE: Introduced feature in v0.2.3.\n\nScrollable is a layout primitive for encapsulating a given available space into its own scrollable context.\nImports\n"},{"identifier":"/docs/layouts/spacer","title":"Spacer","text":"\nNOTE: Introduced feature in v0.2.0.\n\nSpacer is a layout primitive that takes up all available space between its two immediate siblings.\nImports\nSpacing\n\nNOTE: By passing an array, you can set responsive values. e.g. spacing={[\"medium\", \"tablet:small\", \"mobile:tiny\"]}\n\nYou can adjust the spacing between the immediate siblings via the spacing, spacing_x, and spacing_y properties.\nInline\n\nNOTE: Changed from variation=\"block/inline\" -> is=\"div/span\" in v0.4.10.\n\nYou can have the Spacer rendering as an inline <span> via the is property.\n"},{"identifier":"/docs/layouts/stack","title":"Stack","text":"\nNOTE: Introduced feature in v0.2.0.\n\n\nWARNING: This feature was renamed from <Stack> to <Stack.Container> in v0.6.0.\n\nStack is a layout primitive for setting up a horizontal / vertical stacking of items with even spacing between children.\nImports\nOrientation\n\nNOTE: By passing an array, you can set responsive values. e.g. orientation={[\"desktop:horizontal\", \"widescreen:horizontal\"]}\n\nYou can set the Stack to render horizontally via the orientation property.\nSpacing\n\nNOTE: By passing an array, you can set responsive values. e.g. spacing={[\"medium\", \"tablet:small\", \"mobile:tiny\"]}\n\nYou can adjust the spacing between items via the spacing, spacing_x, and spacing_y properties.\nAlignment\n\nNOTE: By passing an array, you can set responsive values. e.g. alignment_x={[\"center\", \"tablet:left\", \"mobile:right\"]}\n\nYou can adjust the spacing between items via the alignment, alignment_x, and alignment_y properties.\nWrap\nYou can alter the Stack to wraps its children into the next line via the variation property.\nItem Stretch\n\nNOTE: Introduced feature in v0.6.0.\n\nYou can adjust span of individual items via the variation=\"stretch\" property, when wrapping an item in Stack.Item.\n"},{"identifier":"/docs/migrations/0.4.x-to-0.5.x","title":"0.4.x to 0.5.x","text":"Introduced in v0.5.0\nMain changes introduced were previously deprecated functionality, obsoleted functionality, and refactoring to promote better composability / reuse between Components.\nAside Built-in Collapse Removal\nDue to the multitude of ways you can design an top navigation collapse feature, the built-in collapsing was removed from Aside. Instead the Framework provides an unopinionated baseline that you can use augment with Components to build viewport-aware collapsing.\nBEFORE\nAFTER\nBadge position Property Removal\nDue to the introduction of the Position Component, the position property was obsoleted.\nBEFORE\nAFTER\nCheck Focus Events Removal\nDue to the introduction of the focusin / focusout global HTML5 events, the blur / focus events were removed. The new events should work functionally the same as a drop-in replacement.\nBEFORE\nAFTER\nDot position Property Removal\nDue to the introduction of the Position Component, the position property was obsoleted.\nBEFORE\nAFTER\nEllipsis character Property Removal\nTo allow for embedded icons (e.g. SVGs), the character property was removed in favor of accepting the default slot as character customization.\nBEFORE\nAFTER\nOffscreen Removal in Favor of Overlay\nWith the new changes regarding being able to configure Overlay's animations, and Overlay already having configurable positioning, Offscreen was removed as duplicate work.\nBEFORE\nAFTER\nOffscreen hidden Override Property Removal\nThe Framework now provides this functionality as a global contents property.\nOmni Built-in Collapse Removal\nDue to the multitude of ways you can design an top navigation collapse feature, the built-in collapsing was removed from Omni. Instead the Framework provides an unopinionated baseline that you can use augment with Components to build viewport-aware overflow collapsing.\nBEFORE\nAFTER\nOverlay is now a Multi-Pattern Component\nIn order to better facilitate future features, Overlay was changed to be a multi-pattern Component. With CSS-logic handling staying in the top-level <Overlay.Container>, and rendering related handling splitting off into <Overlay.Section>.\nBEFORE\nAFTER\nAlso note, instead of a seperate ContextButton Component, there is now an Overlay-specific <Overlay.Button> that automatically inherits logic_id.\nBEFORE\nOverlay captive Property Removal\nTo support customization via properties, <Overlay captive> was removed in favor of composable a <Overlay.Backdrop> Component.\nBEFORE\nPopover is now a Multi-Pattern Component\nIn order to better facilitate future features, Popover was changed to be a multi-pattern Component. With CSS-logic handling staying in the top-level <Popover.Container>, and rendering related handling splitting off into <Popover.Section>.\nBEFORE\nAFTER\nAlso note, instead of a seperate ContextButton Component, there is now an Popover-specific <Popover.Button> that automatically inherits logic_id.\nBEFORE\nAFTER\nPopover hidden Override Property Removal\nThe Framework now provides this functionality as a global contents property.\nPosition floated placement Removal\nTo consistently align with Components like Overlay, <Position variation=\"floated\" placement=\"top/bottom\"> was renamed to <Position variation=\"floated\" alignment_y=\"top/bottom\">.\nBEFORE\nAFTER\nRadio Focus Events Removal\nDue to the introduction of the focusin / focusout global HTML5 events, the blur / focus events were removed. The new events should work functionally the same as a drop-in replacement.\nBEFORE\nAFTER\nSpacer orientation Property Removal\nTo simplify the backing CSS, the orientation property was removed in favor of using the existing spacing_x / spacing_y properties for axis-specific spacing.\nBEFORE\nAFTER\nSpacer variation Property Removal\nTo bring Spacer inline with API functionality -> naming used in other Components, variation was removed in favor of is.\nBEFORE\nAFTER\nSwitch Focus Events Removal\nDue to the introduction of the focusin / focusout global HTML5 events, the blur / focus events were removed. The new events should work functionally the same as a drop-in replacement.\nBEFORE\nAFTER\nTextInput Focus Events Removal\nDue to the introduction of the focusin / focusout global HTML5 events, the blur / focus events were removed. The new events should work functionally the same as a drop-in replacement.\nBEFORE\nAFTER\nTransition CSS Custom Properties Removal\nDue to the new <Transition behavior=\"explicit\"> implementation, the current variables would have to get extremely verbose. And ultimately seems a very limited use-case to have animations customizable on that level.\n"},{"identifier":"/docs/migrations/0.5.x-to-0.6.x","title":"0.5.x to 0.6.x","text":"Introduced in v0.6.0\nMain changes introduced were consolidation of various properies and overhaul of how the stylesheet distributables were built for themeing.\nFramework Distributable Split\nThemeing variables are now built to a separate CSS distributable that should be imported after the main Framework import.\nBEFORE\nAFTER\nComponent Selectors Updated to use Class Names\n\nIMPORTANT: You should never use built-in class names or target elements semantically yourself when targeting Kahi UI Components, it is considered unstable internal API! Always use custom class names! e.g. <Card.Footer class=\"my-card-footer\">\n\nPreviously Components would use context-aware selectors or target their elements semantically. e.g.\n\n<Card.Footer> — .card > footer is now .card--footer.\n<Heading is=\"h2\"> — h2 is now h2.heading.\n\nThis makes Kahi UI opt-in regarding Components and reduces conflict.\nhtmlpalette Changed to htmlmode\nSince <html data-palette> is now <html data-mode>, the htmlpalette Svelte Store has been renamed to htmlmode.\nBEFORE\nAFTER\n<html data-palette> Changed to <html data-mode>\nTo clarify intent \"dark\" and \"light\" of theme modes from Component palettes (dark, alert, negative, etc...), <html data-palette> is now <html data-mode>.\nBEFORE\nAFTER\n<* align> Property Consolidated into alignment_x Property\nOriginally align / alignment_x properties had incompatible implementations, since they both now work via CSS Variables, they're being consolidated into a single alignment_x property.\nAFFECTED COMPONENTS:\n\n<Heading>\n<NumberInput>\n<Text>\n<TextInput>\n\nBEFORE\nAFTER\n<* animation> Property Consolidated into Animation Component\nMuch like the Transition Component, all repeating attention grabbing animations have been consolidated into a general purpose Animation Component.\nAFFECTED COMPONENTS:\n\n<Badge>\n<Dot>\n\nBEFORE\nAFTER\n<* calendar> Property Removed / <* highlight timestamp value>\nDue to a bug introduced in Chrome 96+ / Firefox 96+ regarding I18n APIs with the older release of the Temporal API, and bug in Firefox regarding non-ISO 8601 calendars (e.g. Gregorian), cross-calendar datetime manipulation has been removed. And going forward, only ISO 8601 Calendar timestamps will be accepted into property values.\nIf non-ISO 8601 Calendar timestamps are used, e.g. 2021-11-10[u-ca=gregory]. During any interaction by the user with the Component, it will be converted into a ISO 8601 Calendar timestamp.\nAFFECTED COMPONENTS:\n\n<DayPicker>\n<DayStepper>\n<MonthPicker>\n<MonthStepper>\n<YearPicker>\n<YearStepper>\n\n<* size> Property Consolidated into sizing Property\nOriginally size / sizing properties had incompatible implementations, since they both now work via CSS Variables, they're being consolidated into a single sizing property.\nAFFECTED COMPONENTS:\n\n<Button>\n<Check>\n<NumberInput>\n<Overlay.Button>\n<Popover.Button>\n<Progress>\n<Radio>\n<Switch>\n<Text>\n<TextInput>\n\nBEFORE\nAFTER\n<Button href for value> Implicit Elements Changed to Require Explicit is Property\nTo make Button's API consistent with the rest of the Framework's multi-element Components, is is now required to render the other elements besides <button>.\nBEFORE\nAFTER\n<Container viewport> Removed in Favor of Viewport Width Properties\nv0.6.0 introduces Viewport breakpoints to the global size property values. Which you can use to replicate previous behavior via width / max_width properties.\nBEFORE\nAFTER\n<DayStepper step> / <MonthStepper step> / <YearStepper step> Properties Consolidated into <* steps> Property\nTo be consistent with later additions to the Component APIs, the step property was renamed to the steps property. With otherwise no additional changes.\nBEFORE\nAFTER\n<Figure size> Removed in Favor of width / height / size Global Properties\nv0.6.0 introduced new block sizing values to the global sizing properties. Previously <Figure size> would only apply to the width dimension, so if that affects you, you will need to migrate. Otherwise no other changes needed.\nBEFORE\nAFTER\n<Figure variation=\"icon\" size> Removed in Favor of width / height / size Prefixed Global Properties\nv0.6.0 introduced new icon sizing values to the global sizing properties via icon- prefixes.\nBEFORE\nAFTER\n<Menu.SubMenu> Changed to <Menu.Section>\nTo remain consistent in naming with the rest of the Component API, <Menu.SubMenu> was renamed to <Menu.Section>.\nBEFORE\nAFTER\n<Menu.Heading> sub-menu Slot Removed\nMenu Component's DOM structure is now updated to use flat structure of <div> elements, instead of <ul> / <li> elements. So slots are no longer needed, as <Menu.Section> can be a sibling in DOM structure.\nBEFORE\nAFTER\n<Menu.Divider> Merged into <Menu.Header>\nDue to duplicate styling, <Menu.Divider> was merged into <Menu.Header>. With <Menu.Divider /> becoming <Menu.Heading />, and <Menu.Divider>Text Divider</Menu.Divider> becoming <Menu.Heading variation=\"divider\">Text Divider</Menu.Heading>.\nBEFORE\nAFTER\n<Mosaic> Changed to <Mosaic.Container>\nTo facilitate the new <Mosaic.Item> Component, the Mosaic Component API was turned into a multi-pattern namespace. With the original Component being changed from <Mosaic> to <Mosaic.Container>.\nBEFORE\nAFTER\n<Pagination href> Implicit Elements Changed to Require Explicit is Property\nTo make Pagination's API consistent with the rest of the Framework's multi-element Components, is is now required to render the other elements besides <button>.\nBEFORE\nAFTER\n<Spinner> Removed in Favor of <Progress shape=\"circle\">\nDue to <Progress shape=\"circle\"> new indeterminate appearance, and because Progress didn't exist when Spinner was originally added. It is now being removed due to duplicate functionality.\nBEFORE\nAFTER\n<Stack> Changed to <Stack.Container>\nTo facilitate the new <Stack.Item> Component, the Stack Component API was turned into a multi-pattern namespace. With the original Component being changed from <Stack> to <Stack.Container>.\nBEFORE\nAFTER\n<Text is=\"kbd\"> Removed in Favor of <Kbd>\nSince the <kbd> element renders as its own view, rather than strictly acting like a text modifier. It migrated to being its own <Kbd> Component.\nBEFORE\nAFTER\n<TextInput characters lines> Properties Consolidated into <TextInput span_x span_y> Properties\nTo be consistent with later additions to the Component APIs, both the characters and lines properties were renamed to the span_x and span_y properties respectively. With otherwise no additional changes.\nBEFORE\nAFTER\n<TextInput max_length min_length> Properties Consolidated into <TextInput max min> Properties\nTo be consistent with later additions to the Component APIs, both the max_length and min_length properties were renamed to the max and min properties respectively. With otherwise no additional changes.\nBEFORE\nAFTER\n<TimePicker highlight> Property Now Accepts string[] Instead of string\nBoth highlight property was updated to accept string arrays instead of singular strings. Allowing for multiple timestamps to be used.\nBEFORE\nAFTER\n<Wave> Removed in Favor of <Ellipsis>\nv0.6.0 introduces new customizable functionality to the Ellipsis Component for rendering synchronized animated content. Which can duplicate the previously what Wave accomplished.\nBEFORE\nAFTER\n"},{"identifier":"/docs/navigation/anchor","title":"Anchor","text":"\nNOTE: Introduced feature in v0.2.0.\n\nAnchor are used for navigating from page to page, or to external websites.\nImports\nInternal Navigation\nWhen navigating only to an internal Web Application route, you can just set href property with no other properties.\nExternal Navigation\nWhen navigating to external links, for security purposes it's recommended to set rel=\"noopener\" to prevent Window.opener from being set on the newly opened page. And also to set rel=\"noreferrer\" for privacy purposes, to prevent the Browser from sending the Referer header to the new page.\nStates\nYou can control the state of the Anchor via the disabled property.\nPalette\n\nNOTE: Introduced feature in v0.4.3.\n\nYou can change the color palette of the Anchor via the palette property.\n"},{"identifier":"/docs/navigation/aside","title":"Aside","text":"\nNOTE: Introduced feature in v0.2.0.\n\nAside is used to vertically present the end-user with actions and links that can be accessed anytime on the Web Application.\nImports\nPalette\nYou can change the color palette of the Aside via the palette property.\nPlacement\n\nIMPORTANT: The placement property does NOT affect how it will appear in your layout. You need to manually handle that.\n\nYou can adjust which side the content divider border will appear via the placement property.\nCollapsing\n\nUSAGE: REPL does not support viewport values, resize your Browser to observe this feature.\n\nWhile Aside does not have built-in collapsing, the Framework provides the primitives for you to build collapsable interfaces. Via Components like Overlay and features like contents.\n"},{"identifier":"/docs/navigation/breadcrumb","title":"Breadcrumb","text":"\nNOTE: Introduced feature in v0.2.0.\n\nBreadcrumb is typically used to render a series of links with separators. With the each link left of the right-most a state in the end-user's navigation history. Or, a route hierarchy of the Web Application. e.g. directory paths\nImports\nSeparator\nYou can alter the separator between items rendered via the separator property.\nPalette\n\nNOTE: Introduced feature in v0.6.0.\n\nYou can change the color palette of the Breadcrumb.Anchor / Breadcrumb.Button Components via the palette property.\nElements\n\nNOTE: Introduced feature in v0.6.0.\n\nYou can render Breadcrumb items as <button> HTML tags by using <Breadcrumb.Button>, which is useful if your navigation doesn't work via URLs.\n"},{"identifier":"/docs/navigation/menu","title":"Menu","text":"\nNOTE: Introduced feature in v0.2.2.\n\nMenu renders a nestable list of actionable buttons and links. Typically used in context menus or used as the main content body of Aside.\nImports\nOrientation\n\nNOTE: By passing an array, you can set responsive values. e.g. orientation={[\"tablet:horizontal\", \"mobile:horizontal\"]}\n\n\nIMPORTANT: You should never use sub menus whenever using horizontal Menu.Container Components.\n\nYou can alter the orientation of how the Menu.Container lays out the children.\nSections\n\nWARNING: This feature was renamed from <Menu.SubMenu> to <Menu.Section> in v0.6.0.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nYou can nest more menus via the <Menu.Section> Component.\nText Divider\n\nWARNING: This feature was renamed from <Menu.Divider>...</Menu.Divider> to <Menu.Heading variation=\"divider\">...</Menu.Heading> in v0.6.0.\n\nYou can alter <Menu.Heading> to render dividers via the variation property.\nPalette\nYou can change the color palette of the Menu.Anchor, Menu.Button, and Menu.Label Components via the palette property.\nSizing\n\nNOTE: By passing an array, you can set responsive values. e.g. sizing={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can change the sizing / spacing look and feel of the Menu.Container via the sizing property.\n"},{"identifier":"/docs/navigation/omni","title":"Omni","text":"\nNOTE: Introduced feature in v0.2.0.\n\nOmni is used to horizontally present the end-user with actions and links that can be accessed anytime on the Web Application.\nImports\nPalette\nYou can change the color palette of the Omni via the palette property.\nPlacement\n\nIMPORTANT: The placement property does NOT affect how it will appear in your layout. You need to manually handle that.\n\nYou can adjust which side the content divider border will appear via the placement property.\nCollapsing\n\nUSAGE: REPL does not support viewport values, resize your Browser to observe this feature.\n\nWhile Omni does not have built-in collapsing, the Framework provides the primitives for you to build collapsable interfaces. Via Components like Popover and features like hidden.\n"},{"identifier":"/docs/overlays/backdrop","title":"Backdrop","text":"Backdrop stretches across its parent element, providing a dimmed background that sits under sibling content. Useful for things like prompts.\nImports\nPalette\n\nNOTE: Introduced feature in v0.6.0.\n\nYou can change the color palette of the Backdrop via the palette property.\n"},{"identifier":"/docs/overlays/clickable","title":"Clickable","text":"\nNOTE: Introduced feature in v0.4.3.\n\nClickable stretches a nested <Clickable.Anchor> / <Clickable.Label> child across its parent element, while surfacing other interactive elements above the overlay.\nImports\nAnchor\nUse a <Clickable.Anchor> to stretch a clickable <a> across the parent container.\nLabel\nUse a <Clickable.Label> to stretch a clickable <label> across the parent container.\n"},{"identifier":"/docs/overlays/overlay","title":"Overlay","text":"\nNOTE: Introduced feature in v0.2.4.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nOverlay is typically used for rendering full-screen content over the rest of the page, optionally including a backdrop or being toggleable.\nImports\n\nLogic ID\nYou can make the Overlay toggleable via the logic_id property, and then referencing that with a Button. Alternatively, <Overlay.Button> can be used while inside a <Overlay.Container> tree, which automatically inherits logic_id via Svelte Context.\nLogic State\n\nWARNING: This feature is only available in Javascript-enabled clients.\n\nYou can manually open / close the Overlay via the logic_state property.\nAuto Focus\n\nNOTE: Introduced feature in v0.4.13.\n\n\nWARNING: This feature is only available in Javascript-enabled clients.\n\nWhenever the Overlay becomes active, focus is moved to the first found focusable element, then restored to the previously focused element when dismissed.\nYou can customize which element is focused on activation with a reference or CSS Selector, via the focus_target property\nFocus Trapping\n\nNOTE: Introduced feature in v0.4.13.\n\n\nWARNING: This feature is only available in Javascript-enabled clients.\n\n\nUSAGE: This feature can not be demonstrated in the REPL, click the Link button to open in Playground.\n\nWhile the Overlay is active, focus movement is trapped within the first and last found focusable elements.\nYou can customize which elements are used as the first and last with references or CSS Selectors, via the focus_first / focus_last properties.\nLoading\n\nNOTE: Introduced feature in v0.4.13.\n\n\nUSAGE: Use your Browser's devtools to observe this feature.\n\nYou can customize the loading behavior of slotted content via the loading property.\nBackdrop\nYou can optionally include a backdrop by passing via composing the <Overlay.Backdrop> Component.\nDismissible\n\nNOTE: Introduced keybinding support in v0.4.13.\n\n\nWARNING: This feature is only available in Javascript-enabled clients.\n\nYou can optionally have the Overlay dismissible by pressing the ESC key or clicking the <Overlay.Backdrop> if applicable, via the dismissible property.\nOnce\n\nNOTE: Introduced feature in v0.4.11.\n\n\nWARNING: This feature is only available in Javascript-enabled clients.\n\nYou can enable having the Overlay dismissed whenever <Overlay.Section> inner content is clicked via the once property.\nOrientation\n\nNOTE: By passing an array, you can set responsive values. e.g. orientation={[\"desktop:horizontal\", \"widescreen:horizontal\"]}\n\nYou can set the Overlay to render horizontally via the orientation property.\nAlignment\nYou can align <Overlay.Section> child content via the alignment, alignment_x, and alignment_y properties.\nSpacing\nYou can adjust the spacing between <Overlay.Section> child content via the spacing, spacing_x, and spacing_y properties.\nTransition\nYou can change which built-in Transition is animated using clip, fade, scale, or slide via the animation property.\nDirection\nYou can change which direction the entrance animation comes from via the direction property.\n"},{"identifier":"/docs/overlays/popover","title":"Popover","text":"\nNOTE: Introduced feature in v0.2.11.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nPopover is typically used for hiding content that'll clip onto the page when activated via a button or something else.\nImports\n\nLogic ID\nYou can make the Popover toggleable via the logic_id property, and then referencing that with a Button. Alternatively, <Popover.Button> can be used while inside a <Popover.Container> tree, which automatically inherits logic_id via Svelte Context.\nLogic State\n\nWARNING: This feature is only available in Javascript-enabled clients.\n\nYou can manually open / close the Popover via the logic_state property.\nDismissible\n\nNOTE: Introduced keybinding support in v0.4.13.\n\n\nWARNING: This feature is only available in Javascript-enabled clients.\n\nYou can optionally have the Popover dismissible by clicking outside the <Popover.Section> child content, pressing the ESC key, or inner content losing focus, via the dismissible property.\nOnce\n\nNOTE: Introduced feature in v0.4.11.\n\n\nWARNING: This feature is only available in Javascript-enabled clients.\n\nYou can enable having the Popover dismissed whenever inner content is clicked via the once property.\nControl\n\nNOTE: Introduced feature in v0.6.2\n\nYou can alter the functionality of a <Popover.Container> Component to activate by focusing the inner content via the variation property.\nTooltip\n\nNOTE: Introduced feature in v0.6.0.\n\nYou can alter the functionality of a <Popover.Container> Component to activate by hovering or focusing the inner content via the variation property.\nPlacement\nYou can adjust which side your content is placed on via the placement property.\nAlignment\nYou can align Popover which direction the child content breaks, via the alignment_x and alignment_y properties respectively.\n"},{"identifier":"/docs/resources/community","title":"Community","text":"Below you can find resources made by members of the community using Kahi UI or projects that integrate well with Kahi UI.\nWant to List Your Project?\nIf you want to list your project that uses Kahi UI, just create a Pull Request for this file!\nDiscussion / Support\n\nOther community channels besides the main repository for talking about or getting help with Kahi UI.\n\n\nDiscord — Official support Discord, where you can talk to others that use Kahi UI.\n\nIcons\n\nIconography projects that have been shown to work well with Kahi UI.\n\n\nLucide Icons — Community fork of Feather Icons, provides lightweight SVG icons. (used by this documentation site)\n\nWeb Applications\n\nDeployed Web Applications that utilize Kahi UI as their design language.\n\n3D Rendering\n\nThe Raytracer Challenge REPL - jakobwesthoff/the_raytracer_challenge_repl — REPL for rendering raytraced scenes in modern browsers with a live editor.\n\n"},{"identifier":"/docs/resources/faq","title":"F.A.Q.","text":"Where can I get help?\nIf you need help with something not properly documented or needs clarification, you can visit the Issue Tracker. File a new issue and it'll be addressed on a spare time effort. Alternatively, visit the Discord Server to talk to other developers using Kahi UI.\nWhat Browsers are supported?\nVisit the Browser Support documentation for more information.\nCan I use the library without Svelte?\nYes, however there is no official support to do so. Visit Releases and grab the .css distributable files, and read the library source code on how to do markup, progressive enhancements, etc.\nCan I use the library on Browsers that don't support or have Javascript disabled?\nYes! The library is explictly made in mind that Svelte should be used to sprinkle extra functionality ontop of logic baked in HTML / CSS. If you find something not working properly, file an issue.\nIs Accessibility / ARIA Supported?\nWhile I want to implement full proper support, including keyboard navigation. It is currently not being pursued and will be tackled at a later date. However if you encounter something that'll be detrimental file an issue.\n"},{"identifier":"/docs/resources/official","title":"Official","text":"Below you can find resources made maintained by Kahi UI contributors.\nDiscussion / Support\n\nOfficial support provided by contributors and community members.\n\n\nIssue Tracker — Official GitHub issue tracker for filing bugs and requesting support.\n\nShowcase\n\nProjects that show off the Kahi UI framework.\n\n\nkahi-framework/kahi-ui.nbn.dev — Official documentation site.\n\nTemplates\n\nProjects that can be used as a basis for your own project, showing how to integrate with various software.\n\n\nkahi-framework/kahi-ui-template-svelte — Official template for Svelte based on npx degit sveltejs/template my-svelte-project starter.\nkahi-framework/kahi-ui-template-sveltekit — Official template for SvelteKit based on the npm init svelte@next starter.\nkahi-framework/kahi-ui-template-tauri — Official template for Tauri based on the npx create-tauri-app starter.\n\n"},{"identifier":"/docs/stores/darkmode","title":"darkmode","text":"\nNOTE: Introduced feature in v0.2.3.\n\n\nUSAGE: This feature can be demonstrated by clicking the Theme Toggle button in the top navigation.\n\ndarkmode is a readonly Svelte Store, which returns true whenever either htmldark or prefersdark are truthy.\nImports\nLight Mode\n\nNOTE: Introduced feature in v0.6.0.\n\nTo check if lightmode is enabled, the lightmode Store is available.\nStorage\nTo stay unopinonated in your Application's architecture, Kahi UI does NOT supply any mechanism to store data on the user's Browser. So if you want to provide a manual switch for users to change your Application's theme mode like this documentation website. It's recommended to use something like the Web Storage API and htmlmode.\nCompatibility\nThe Store is dependent on MutationObserver / Window.matchMedia. So if you're rendering on the server, it'll always return false for darkmode, defaulting to true for lightmode.\n"},{"identifier":"/docs/stores/htmlmode","title":"htmlmode","text":"\nNOTE: Introduced feature in v0.2.3.\n\n\nWARNING: This feature was renamed from htmlpalette to htmlmode in v0.6.0.\n\n\nUSAGE: This feature can be demonstrated by clicking the Theme Toggle button in the top navigation.\n\nhtmlmode is a Svelte Store, which is bound to <html data-mode=\"XXX\"> and updates whenever that attribute is changed. Defaulting to an empty string (\"\") if not set.\nImports\nBuilt-In Shortcuts\n\nNOTE: Introduced feature in v0.6.0.\n\nThe htmlmode Store also comes with two readonly preconfigured shortcut Stores, htmldark and htmllight.\nCompatibility\nThe Store is dependent on MutationObserver. So if you're rendering on the server, it'll always return an empty string (\"\").\n"},{"identifier":"/docs/stores/mediaquery","title":"mediaquery","text":"\nNOTE: Introduced feature in v0.2.14.\n\nmediaquery / mediaqueries are readonly Svelte Stores, which returns true whenever a provided Media Query is currently active.\nImports\nCompatibility\nThe Stores are dependent on Window.matchMedia. So if you're rendering on the server, it'll always return false.\n"},{"identifier":"/docs/stores/prefersscheme","title":"prefersscheme","text":"\nNOTE: Introduced feature in v0.2.3.\n\nprefersscheme is a readonly Svelte Store, which returns true whenever matchMedia(SCHEME) is validated.\n\nNOTE: Change your Operating System's color settings to see changes.\n\nImports\nBuilt-in Shortcuts\nThe prefersscheme Store also comes with two readonly preconfigured shortcut Stores, prefersdark and preferslight.\nCompatibility\nThe Store is dependent on Window.matchMedia. So if you're rendering on the server, it'll always return false.\n"},{"identifier":"/docs/stores/scrolllock","title":"scrolllock","text":"\nNOTE: Introduced feature in v0.2.4.\n\nscrolllock is a Svelte Store which sets overflow: hidden; on an HTMLElement whenever the Store is set to true. Restoring the previous value of overflow whenever set back to false. Allowing for connecting Component open states like for modals, to the prevent overscrolling the main document body.\n\nNOTE: If no HTMLElement is passed into the Store function, it'll default to the root <html>.\n\nImports\nCompatibility\nThe Store is dependent on setting an element's inline styles via Javascript. So on server, will return a readable Store which will error on having a new value set.\n"},{"identifier":"/docs/stores/viewport","title":"viewport","text":"\nNOTE: Introduced feature in v0.2.14.\n\nviewport / viewports are readonly Svelte Stores, which returns true whenever a Viewport selected in initialization is currently active.\n\nUSAGE: REPL does not support viewport values, resize your Browser to observe this feature.\n\nImports\nCompatibility\nThe Stores are dependent on Window.matchMedia. So if you're rendering on the server, it'll always return false.\n"},{"identifier":"/docs/surfaces/box","title":"Box","text":"\nNOTE: Introduced feature in v0.2.0.\n\nBox is a surface primitive for encapsulating section content in a block of color.\nImports\nPalette\nYou can change the color palette of the Box via the palette property.\nBorders\n\nNOTE: Introduced feature in v0.6.0.\n\nYou can change the appearance of Box to show borders via the variation property.\nElevation\n\nNOTE: Introduced feature in v0.3.5.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. elevation={[\"low\", \"tablet:lowest\", \"mobile:lowest\"]}\n\nYou can set how \"high\" your Box will appear to be over top the page via the elevation property.\nRadius\n\nNOTE: Introduced feature in v0.6.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. radius={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can modify the border radius of the Box via the radius property.\nShape\n\nNOTE: By passing an array, you can set responsive values. e.g. shape={[\"circle\", \"tablet:pill\", \"mobile:pill\"]}\n\nYou can modify the shape of the Box via the shape property.\n"},{"identifier":"/docs/surfaces/card","title":"Card","text":"\nNOTE: Introduced feature in v0.2.0.\n\nCard is a multi-part surface pattern for displaying a section of content in a long-form vertical format.\nImports\nPalette\nYou can change the color palette of the Card via the palette property.\nElevation\n\nNOTE: Introduced feature in v0.3.5.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. elevation={[\"low\", \"tablet:lowest\", \"mobile:lowest\"]}\n\nYou can set how \"high\" your Card will appear to be over top the page via the elevation property.\nOrientation\n\nNOTE: Introduced feature in v0.3.5.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. orientation={[\"desktop:vertical\", \"widescreen:vertical\"]}\n\nYou can set the Card.Footer to render vertically via the orientation property.\nSizing\n\nNOTE: Introduced feature in v0.3.3.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. sizing={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can change the sizes / spacings of the child elements via the sizing property.\nFlush\n\nNOTE: Introduced feature in v0.2.13.\n\nYou can change the appearance of the Card to be flush with the rest of the Application content via the variation property.\n"},{"identifier":"/docs/surfaces/hero","title":"Hero","text":"\nNOTE: Introduced feature in v0.2.0.\n\nHero is a multi-part surface pattern for displaying banner text with subtitling and actions, typically used for landing pages, error messages, and loading placeholders.\nImports\nPalette\nYou can change the color palette of the Hero via the palette property.\n"},{"identifier":"/docs/surfaces/tile","title":"Tile","text":"\nNOTE: Introduced feature in v0.2.1.\n\nTile is a multi-part surface pattern for displaying a section of content in a short-form horizontal format.\nImports\nPalette\nYou can change the color palette of the Tile via the palette property.\nElevation\n\nNOTE: Introduced feature in v0.3.5.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. elevation={[\"low\", \"tablet:lowest\", \"mobile:lowest\"]}\n\nYou can set how \"high\" your Tile will appear to be over top the page via the elevation property.\nOrientation\n\nNOTE: Introduced feature in v0.3.5.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. orientation={[\"desktop:vertical\", \"widescreen:vertical\"]}\n\nYou can set the Tile.Footer to render vertically via the orientation property.\nSizing\n\nNOTE: Introduced feature in v0.3.3.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. sizing={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can change the sizes / spacings of the child elements via the sizing property.\nFlush\n\nNOTE: Introduced feature in v0.2.13.\n\nYou can change the appearance of the Tile to be flush with the rest of the Application content via the variation property.\n"},{"identifier":"/docs/themeing/custom-properties","title":"Custom Properties","text":"\nWARNING: All CSS Custom Properties are considered unstable and subject to change before v1.0.\n\nIn supporting Components and for the global theme, you can use CSS Custom Properties to alter the look and feel of the Framework.\nVia Style\nYou can customize the Custom Properties via inline styles as shown below.\nVia Classes\nYou can also use CSS classes to customize them as well.\nVia Global Stylesheet\n\nIMPORTANT: Make sure to declare your customized Custom Properties after you have loaded the Framework + Theme stylesheets. Otherwise they will be ignored.\n\nYou can finally use global stylesheets to keep all your customizations in one spot.\n\n"},{"identifier":"/docs/themeing/custom-themes","title":"Custom Themes","text":"\nWARNING: When using manual builds of Kahi UI, you'll need to rebuild the distributables every time you upgrade Kahi UI.\n\nIf you want a more compreshensive customization of Kahi UI's look and feel, you can use the Framework's Custom Builds system to produce your own distributables.\nPrerequisites\nMake sure to familiarize yourself with Framework's Custom Builds system before starting. It's also recommended to learn SASS as-well.\nGlobal Theme\nAfter having Kahi UI's source code downloaded and installed, edit the src/themes/default/_theme.scss stylesheet. This file contains all the non-Component specific definitions that apply every where in the Framework. Which is broken up into the headers as seen below.\nPalettes\n\nIMPORTANT: You must ALWAYS include accent, dark, light, neutral, and off color palettes when modifying the theme.\n\nThese definitions relate to the Framework's overall color design. By default, we use the Framework's palette generation system, which mixes the base color into the dark and light colors to produce the various shades that Kahi UI uses in its color design.\n\nUSAGE: When using the generative color system, the dark and light palettes ALWAYS needs to come first.\n\n\nUSAGE: When using the generative color system, the foreground color will be automatically selected from the dark and light palettes based on contrast.\n\n\nAlternatively, you can opt-out of the generative color system and manually specify each palette individually.\n\nUSAGE: Keep in mind that the shading scale used in Kahi UI is lightest blends in the most with the background color and boldest is the least.\n\n\nAs an example accent palette based on the default theme that ships with Kahi UI.\nViewports\n\nIMPORTANT: Viewports are NOT to be modified AT ALL. Due to Custom Media Queries not being supported at the moment by Browsers.\n\nThese definitions relate to the Framework's Viewport breakpoints.\nFont Families\n\nIMPORTANT: You must ALWAYS include block, inline, and monospace font families when modifying the theme.\n\nThese definitions relate to the font family stacks used across the Framework.\nFont Line Heights\n\nIMPORTANT: These definitions must remain unitless! Components typically define their own unit depending on context.\n\nThese definitions relate to the spacing between each line of text. By default we use Modular Scale to generate spacings.\n\nAlternatively, you can opt-out of the generative spacing system and manually specify each spacing individually.\n\nUSAGE: Keep in mind that the spacing scale used in Kahi UI is nano is the smallest spacing and massive is the biggest.\n\nAs an example based on the default theme that ships with Kahi UI.\nFont Sizings\n\nIMPORTANT: These definitions must remain unitless! Components typically define their own unit depending on context.\n\n\nIMPORTANT: You must ALWAYS include block and inline font sizings when modifying the theme.\n\nThese definitions relate to the , typically used in . By default we use Modular Scale to generate sizings.\n\nAlternatively, you can opt-out of the generative sizing system and manually specify each sizing individually.\n\nUSAGE: Keep in mind that the sizing scale used in Kahi UI is nano is the smallest and massive is the biggest.\n\nAs an example based on the inline tier that the default theme that ships with Kahi UI.\nSpacing Tiers\n\nIMPORTANT: These definitions must remain unitless! Components typically define their own unit depending on context.\n\n\nIMPORTANT: You must ALWAYS include block and inline spacings when modifying the theme.\n\nThese definitions relate to spacing modifiers, typically used in Layout Components, letter spacings, or global intrinsics properties like margin. By default we use Modular Scale to generate spacings.\n\nAlternatively, you can opt-out of the generative spacing system and manually specify each spacing individually.\n\nUSAGE: Keep in mind that the spacing scale used in Kahi UI massive is the biggest and nano is the smallest.\n\nAs an example based on the block tier that the default theme that ships with Kahi UI.\nSpacing Constants\nThese definitions relate to spacing modifiers, used for global intrinsics properties like margin.\nSize Tiers\n\nIMPORTANT: These definitions must remain unitless! Components typically define their own unit depending on context.\n\n\nIMPORTANT: You must ALWAYS include block sizings when modifying the theme.\n\nThese definitions relate to size modifiers, used for global intrinsics properties like width. By default we use Modular Scale to generate sizes.\n\nAlternatively, you can opt-out of the generative size system and manually specify each size individually.\n\nUSAGE: Keep in mind that the size scale used in Kahi UI is nano is the smallest and massive is the biggest.\n\nAs an example based on the block tier that the default theme that ships with Kahi UI.\nSize Constants\nThese definitions relate to size modifiers, used for global intrinsics properties like width.\nRadius Sizes\n\nIMPORTANT: These definitions must remain unitless! Components typically define their own unit depending on context.\n\nThese definitions relate to sizing modifiers, typically used for Component radii and global radius properties. By default we use Modular Scale to generate sizes.\n\nAlternatively, you can opt-out of the generative size system and manually specify each individually.\n\nUSAGE: Keep in mind that the size scale used in Kahi UI is nano is the smallest and massive is the biggest.\n\nAs an example based on the default theme that ships with Kahi UI.\nRadius Constants\nThese definitions relate to border radius modifiers, used for global intrinsics properties like shape.\nEasings\n\nTODO: documentation\n\n...\nAnimations\n\nTODO: documentation\n\n...\nZ-Index\n\nTODO: documentation\n\n...\nElevations\n\nTODO: documentation\n\n...\nComponent Theme\nComponents are usually have this or similar directory structure depending on format (multi-pattern or singular).\nYou can edit each Component's :component.default.css stylesheet to modify its default theme, just like with the global theme. Using the Badge Component as an example, the stylesheets typically look similar to this.\n\nFor detailed documentation on what each Component's variables are, visit their documentation page and scroll down to the API Reference.\n"},{"identifier":"/docs/themeing/elevations","title":"Elevations","text":"Kahi UI uses box shadows to convey the physicality of \"how far hovering above the page\" any given Component is.\n"},{"identifier":"/docs/themeing/fonts","title":"Fonts","text":"\nIMPORTANT: Font size CSS Custom Properties are defined as a unitless multipliers, so Components can customize scaling based on context.\n\nKahi UI in its default theme uses Modular Scale to produce generative font size and line height tiers used throughout the Framework.\nFamilies\nKahi UI provides a few standard font stacks used in different places across the Framework.\nLine Heights\nKahi UI typically uses line heights, that is, spacing between lines of text, to make things easier to read or to provide extra padding.\nInline Sizes\nKahi UI typically uses inline font sizes for text that is meant to be composed inside other content. Or blocks of text that the user is meant to read.\nBlock Sizes\nKahi UI typically uses block font sizes for giant headlining text that is small in length that needs to capture the user's attention.\n"},{"identifier":"/docs/themeing/manual-mode","title":"Manual Mode","text":"By default, Kahi UI switches between dark and light mode depending on the user's preferences. As reported by the Browser / OS. However to provide a theme toggle or if you want to disable this behavior. You can use the data-mode=\"dark/light\" attribute on the <html> element.\n\n"},{"identifier":"/docs/themeing/palettes","title":"Palettes","text":"\nIMPORTANT: Palette CSS Custom Properties are defined as a hue, saturation, lightness tuple, so Components can customize opacity based on context.\n\nKahi UI in its default theme uses a simplistic generative palette generator, which mixes the dark and light colors in steps to produce shading.\nWhen producing palette shades, the \"lightest\" shade blends in the background the most and \"boldest\" shade stands out of the background the most. With the background palette depending on if the theme is in light or dark mode. In light mode using light as the background, and in dark mode using dark as the background.\n"},{"identifier":"/docs/themeing/sizes","title":"Sizes","text":"Kahi UI in its default theme uses Modular Scale and stepping scaling to produce generative size tiers used throughout the Framework.\nBlock Sizes\n\nIMPORTANT: Block size CSS Custom Properties are defined as a unitless multipliers, so Components can customize scaling based on context.\n\nKahi UI typically uses block sizes to show chunks of content in uniform sizes, such as Mosaic.\nBorder Sizes\nKahi UI uses border sizes to provide a standard set of border widths for Components.\nIcon Sizes\nKahi UI provides icon sizes that reflect standard icon sizing used in other applications and environments.\nProse Size\nKahi UI defines a single variable to determine how long a paragraph should get before being broken into a new line.\n"},{"identifier":"/docs/themeing/spacings","title":"Spacings","text":"\nIMPORTANT: Spacing CSS Custom Properties are defined as a unitless multipliers, so Components can customize scaling based on context.\n\nKahi UI in its default theme uses Modular Scale to produce generative spacing tiers used throughout the Framework.\nBlock Spacings\nKahi UI typically uses block spacing for more obvious distinctions chunks of content, such as spacing between grid items.\nInline Spacings\nKahi UI typically uses inline spacing for more fine-grained visuals where subtlely is needed. Such as spacing between letters in categorization legends.\n"},{"identifier":"/docs/typography/blockquote","title":"Blockquote","text":"\nNOTE: Introduced feature in v0.2.5.\n\nBlockquote is typically used to render a block of text, that's attributed to a certain source of information.\nImports\nPalette\nYou can change the color palette of the Blockquote.Container via the palette property.\n"},{"identifier":"/docs/typography/code","title":"Code","text":"\nNOTE: Introduced feature in v0.2.0.\n\nCode is used to render inline monospaced text, typically for showing programming code / application configuration to an user.\nImports\nPalette\nYou can change the color palette of Code via the palette property.\nCode Block\nYou can display blocks of code via a <pre> HTML tag by passing is=\"pre\".\n\n"},{"identifier":"/docs/typography/heading","title":"Heading","text":"\nNOTE: Introduced feature in v0.2.0.\n\nHeading is typically used for delineating sections of content within your Web Application.\nImports\nSizing\nYou can adjust the size of Heading by passing the is property.\nYou can also access bigger font sizing via the variation property.\nPalette\n\nNOTE: Introduced feature in v0.2.16.\n\nYou can change the color palette of Heading via the palette property.\nAlignment\n\nWARNING: This feature was renamed from align to alignment_x in v0.6.0.\n\nYou can adjust the text alignment of the Heading via the alignment_x property.\nTransform\nYou can alter the rendered text capitalization via the transform property.\nVariation\nYou can apply variations to the rendered text, like truncating, via the variation property.\n"},{"identifier":"/docs/typography/text","title":"Text","text":"\nNOTE: Introduced feature in v0.2.0.\n\nText is used to render paragraphs of text in your interface, among other types of text.\nImports\nSizing\n\nWARNING: This feature was renamed from size to sizing in v0.6.0.\n\nYou can adjust the size of Text by passing the sizing property.\nYou can also access bigger font sizing via the variation property.\nPalette\nYou can change the color palette of Text via the palette property.\nAlignment\n\nWARNING: This feature was renamed from align to alignment_x in v0.6.0.\n\nYou can adjust the text alignment of the Text via the alignment_x property.\nTransform\nYou can alter the rendered text capitalization via the transform property.\nVariation\nYou can apply variations to the rendered text, like truncating, via the variation property.\nElements\n\nWARNING: The feature <Text is=\"kbd\"> was moved to standalone Component <Kbd> in v0.6.0.\n\nYou can also access most of the other HTML text tags via the is property.\n"},{"identifier":"/docs/utilities/animation","title":"Animation","text":"\nNOTE: Introduced feature in v0.6.0.\n\nAnimation is used to apply infinitely repeating animations on a containing element that will also include its children. Typically used for situations like alerting users to new E-Mail in their inbox, etc...\nImports\nDelay\nBased on the animaton duration properties in the currently loaded theme. You can use a multiplier percentage decimal to delay it via the delay property.\nDuration\nBased on the animaton duration properties in the currently loaded theme. You can use a multiplier percentage decimal to increase / shorten the animation duration via the duration property.\nIterations\nYou can control how many times the animation repeats before stopping via the iterations property.\nVariation\nYou can control whether the animation is playing or paused via the variation property.\nElements\nYou can change the HTML tag rendered to DOM via the is property.\nBounce\nYou can have content \"bounce\" up and down via the animation property.\nPing\nYou can have content \"explode\" outwards, fading as the animation is playing via the animation property.\nPulse\nYou can have content \"glow\" bright and dim via the animation property.\n"},{"identifier":"/docs/utilities/browserrender","title":"BrowserRender","text":"\nNOTE: Introduced feature in v0.4.1.\n\n\nNOTE: This feature is renderless, meaning it does not render anything extra to the DOM.\n\nBrowserRender disables rendering of child content that either doesn't work in a SSR environment or doesn't make sense there. e.g. <canvas> rendering\n\nUSAGE: REPL renders in your Browser, so this feature will always render the content.\n\nImports\n"},{"identifier":"/docs/utilities/intersectionrender","title":"IntersectionRender","text":"\nNOTE: Introduced feature in v0.4.1.\n\nIntersectionRender disables rendering of child content before it has come into the root element's viewport at least once. Useful for lazy loading content besides media.\nImports\nCompatibility\nThe Component only runs on clientside Browsers with Javascript enabled. So you need to plan a SSR-compatible fallback if using in a SSR scenario. It is also dependent on IntersectionObserver.\nEager\n\nNOTE: It is good practice to give the IntersectionRender a fixed size that generally matches the child content when using this mode. Otherwise you can end up with janky scrolling.\n\nYou can change the behavior of IntersectionObserver by passing in the loading attribute. Which will make the Component ALWAYS disable rendering when outside of the root viewport, not just on initial load.\nFallthrough\n\nUSAGE: REPL renders in your Browser, so this feature will always conditionally render anyway.\n\nBy default, IntersectionRender will never render when running in SSR environments. You can change it to always render in those environments via the fallthrough property.\n"},{"identifier":"/docs/utilities/mediaqueryrender","title":"MediaQueryRender","text":"\nNOTE: Introduced feature in v0.5.1.\n\n\nUSAGE: REPL does not support viewport values, resize your Browser to observe this feature.\n\nMediaQueryRender disables rendering of child content while the provided Media Quer(y/eries) are not active.\nImports\nCompatibility\nThe Component only runs on clientside Browsers with Javascript enabled. So you need to plan a SSR-compatible fallback if using in a SSR scenario.\nMultiple Queries\n\nUSAGE: REPL does not support viewport values, resize your Browser to observe this feature.\n\nYou can specify multiple Media Queries by passing in a string array (string[]) via the queries property.\nBehavior\n\nUSAGE: REPL does not support viewport values, resize your Browser to observe this feature.\n\nWhen working with multiple Media Queries, you can specify that ALL Media Queries must be valid in order to render. Via the behavior property.\nFallthrough\n\nUSAGE: REPL renders in your Browser, so this feature will always conditionally render anyway.\n\nBy default, MediaQueryRender will never render when running in SSR environments. You can change it to always render in those environments via the fallthrough property.\n"},{"identifier":"/docs/utilities/portal","title":"Portal","text":"\nNOTE: Introduced feature in v0.2.0.\n\nPortal is used to render a layout outside of its original containing DOM tree, moving it somewhere else.\nImports\nCompatibility\nPortal wraps your slotted content in a display: contents containing element, so keep that in mind in your CSS selectors. It also only remounts its self to the target on clientside Browsers with Javascript enabled. So you need to plan a SSR-compatible fallback if using in a SSR scenario.\nLoading\n\nNOTE: Introduced feature in v0.3.5.\n\n\nUSAGE: Use your Browser's devtools to observe this feature.\n\nYou can customize the slot loading behavior of Portal Components to not render their children, via the loading property.\n"},{"identifier":"/docs/utilities/serverrender","title":"ServerRender","text":"\nNOTE: Introduced feature in v0.4.1.\n\n\nNOTE: This feature is renderless, meaning it does not render anything extra to the DOM.\n\nServerRender disables rendering of child content that doesn't work on the Browser, or doesn't make sense there. e.g. reading a file from local disk\n\nUSAGE: REPL renders in your Browser, so this feature will never render the content.\n\nImports\n"},{"identifier":"/docs/utilities/transition","title":"Transition","text":"\nNOTE: Introduced feature in v0.4.0.\n\nTransition is used to apply transitional animations on a containing element that will also include its children. Typically used for situations like changing between pages.\nImports\nExplicit\n\nNOTE: Introduced feature in v0.5.0.\n\n\nWARNING: This feature is only available in Javascript-enabled clients.\n\nYou can alter Transition to use its CSS Transitions implementation instead of the CSS Animations implementation for animations. Which skips the first-paint iteration of the animation via the behavior property.\nDelay\nBased on the animaton duration properties in the currently loaded theme. You can use a multiplier percentage decimal to delay it via the delay property.\nDuration\n\nNOTE: Introduced feature in v0.4.2.\n\nBased on the animaton duration properties in the currently loaded theme. You can use a multiplier percentage decimal to increase / shorten the animation duration via the duration property.\nDirection\nYou can control which direction the Transition animation will \"expand\", \"move\", or whatever your selected animations performs. Via the direction property.\nElements\n\nNOTE: Introduced feature in v0.6.0.\n\nYou can change the HTML tag rendered to DOM via the is property.\nFade\nThe simplest of all the animations, you can fade content in and out via the animation property.\nBy supplying a variation off the bat, you can also have the animation played as soon as the DOM is loaded.\nClip\nYou can have content \"clip\" in and out via the animation property.\nBy supplying a variation off the bat, you can also have the animation played as soon as the DOM is loaded.\nScale\nYou can have content \"scale\" in and out via the animation property.\nBy supplying a variation off the bat, you can also have the animation played as soon as the DOM is loaded.\nSlide\nYou can have content \"slide\" in and out via the animation property.\nBy supplying a variation off the bat, you can also have the animation played as soon as the DOM is loaded.\n"},{"identifier":"/docs/utilities/viewportrender","title":"ViewportRender","text":"\nNOTE: Introduced feature in v0.5.1.\n\n\nUSAGE: REPL does not support viewport values, resize your Browser to observe this feature.\n\nViewportRender disables rendering of child content while the provided Viewport(s) are not active.\nImports\nCompatibility\nThe Component only runs on clientside Browsers with Javascript enabled. So you need to plan a SSR-compatible fallback if using in a SSR scenario. If the child content getting mounted is not of concern, then it's recommended to use SSR-compatible hidden global property.\nFallthrough\n\nUSAGE: REPL renders in your Browser, so this feature will always render conditionally anyway.\n\n\nUSAGE: REPL does not support viewport values, resize your Browser to observe this feature.\n\nBy default, ViewportRender will never render when running in SSR environments. You can change it to always render in those environments via the fallthrough property.\n"},{"identifier":"/docs/widgets/dataselect","title":"DataSelect","text":"\nNOTE: Introduced feature in v0.6.2.\n\nDataSelect uses various built-in Components to render a list of selectable options into a hovering box that is highly customizable, while supporting working in normal HTML forms.\nImports\nMultiple\nYou can allow the user to select multiple items via the multiple property.\nLogic State\nYou can control which items are already selected via the logic_state property.\nSearching\n\nWARNING: This feature is only available in Javascript-enabled clients.\n\nDataTable includes a bottom left search box which allows users to filter rows based on the input. You can customize the default via the searching property.\nMaximum\nYou can control the maximum amount of items selectable by the user via the max property.\nPalette\nYou can change the color palette of the inner TextInput via the palette property.\nSizing\nYou can change the sizing of the inner TextInput via the sizing property.\nItem Disabled\nYou can disable individual inner Check / Radio Components via the items.T[].disabled property member.\nItem Palette\nYou can change the color palette of individual inner Check / Radio Components via the items.T[].palette property member.\n"},{"identifier":"/docs/widgets/datatable","title":"DataTable","text":"\nNOTE: Introduced feature in v0.5.3.\n\n\nWARNING: This feature can cause layout shifting and performance degradation during rehydration.\n\nDataTable is a subset of Table Widget which automatically handles formatting tabular data into HTML.\nImports\nPagination\nVia the paginate property, you can enable pagination of the input rows.\nYou can control the current page via the page property.\nFinally, you can also set up how many rows appear per page via the paging property.\nSearching\nDataTable includes a bottom left search box which allows users to filter rows based on the input. You can customize the default via the searching property.\nBy default, DataTable fuzzy filters each row's members converted into lower case strings. You can customize this behavior via the searching_algorithm property.\nSorting\nBy passing in the sorting member in your columns property metadata, you can enable sorting on individual columns.\nBy passing a column key to the sorting property, you can set which is the column actively being sorted by. Then you can set the sorting_mode property to choose either ascending or descending sort.\nBy default, DataTable alphabetizes each row's members converted into lower case strings. You can customize this behavior on a per column-basis via the sorting_algorithm member in the column metadata.\nSlot\nYou can customize how each row member is rendered via the default slot.\nYou can also customize the icons of the decrement / increment paging buttons via the previous / next slots respectively.\nFinally, you can also customize the icons for the not sorted, ascending sort, and descending sorting buttons via the unsorted, ascending, and descending slots respectively.\nVariation\nJust like the Table Component, you can customize the variation property.\nPalette\nYou can change the color palette of all the interactables via the palette property.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/daypicker","title":"DayPicker","text":"\nNOTE: Introduced feature in v0.4.10.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nDayPicker is a Widget that displays a calendar-style grid of days that a user can select from.\nImports\nDisabled\nYou can disable all interactivity via the disabled property.\nDisabled Days\nYou can disable specific days from being selected via the disabled property.\nMultiple\nYou can allow for multiple days to be selected via the multiple property.\nOnce\nYou can disable selected days from being unselected via the once property.\nReadonly\nYou can disable interactivity without changing the visuals via the readonly property.\nHighlight\n\nNOTE: By default, the current day is used.\n\nYou can select a specific set of days to be highlighted as outlines via the highlight property.\nMaximum + Minimum\nYou can set maximum and minimum range of selectable days via the max / min properties.\nCustom Format\nYou can customize how the day component of the available timestamps is displayed via the day and weekday properties respectively.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/daystepper","title":"DayStepper","text":"\nNOTE: Introduced feature in v0.4.10.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nDayStepper is a Widget that lets users increment / decrement the currently provided day by a set number.\nImports\nDisabled\nYou can disable all interactivity via the disabled property.\nReadonly\nYou can disable interactivity without changing the visuals via the readonly property.\nMaximum + Minimum\nYou can set maximum and minimum range of steppable days via the max / min properties.\nSteps\n\nWARNING: This feature was renamed from step to steps in v0.6.0.\n\nYou can control how many days the buttons increment / decrement via the steps property.\nCustom Format\nYou can customize how the day and month components of the current timestamp is displayed via the day, weekday, and month properties respectively.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/monthpicker","title":"MonthPicker","text":"\nNOTE: Introduced feature in v0.4.10.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nMonthPicker is a Widget that displays a fiscal quaterly grid of months that a user can select from.\nImports\nDisabled\nYou can disable all interactivity via the disabled property.\nDisabled Months\nYou can disable specific months from being selected via the disabled property.\nMultiple\nYou can allow for multiple months to be selected via the multiple property.\nOnce\nYou can disable selected months from being unselected via the once property.\nReadonly\nYou can disable interactivity without changing the visuals via the readonly property.\nHighlight\n\nNOTE: By default, the current month is used.\n\nYou can select a specific set of months to be highlighted as outlines via the highlight property.\nMaximum + Minimum\nYou can set maximum and minimum range of selectable months via the max / min properties.\nCustom Format\nYou can customize how the month component of the available timestamps is displayed via the month property.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/monthstepper","title":"MonthStepper","text":"\nNOTE: Introduced feature in v0.4.10.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nMonthStepper is a Widget that lets users increment / decrement the currently provided month by a set number.\nImports\nDisabled\nYou can disable all interactivity via the disabled property.\nReadonly\nYou can disable interactivity without changing the visuals via the readonly property.\nMaximum + Minimum\nYou can set maximum and minimum range of steppable months via the max / min properties.\nSteps\n\nWARNING: This feature was renamed from step to steps in v0.6.0.\n\nYou can control how many months the buttons increment / decrement via the steps property.\nCustom Format\nYou can customize how the month and year components of the current timestamp is displayed via the month and year properties respectively.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/pagination","title":"Pagination","text":"\nNOTE: Introduced feature in v0.5.1.\n\nPagination is typically used for allowing the user to navigate data or content that is separated into groupings of information, or \"pages\".\nImports\nPaging\nYou can set how many pages there are for the associated content and which page is current via the pages / value properties respectively.\nAnchors\n\nWARNING: This feature was updated to require explicit is property in v0.6.0.\n\n\nIMPORTANT: The ${page} token is non-standard string substitution provided by this feature, and must be set via string expressions, e.g. href={\"/path/to/list/${page}\"}.\n\nYou can have the paging buttons be anchors via href property. And adding ${page} in your link where you want the page number to be inserted.\nSteps\nYou can change how many incremental / decremental steps of paging buttons are displayed via the steps property.\nSlot\nYou can alter the icons / text used for the previous / next buttons via the previous / next slots respectively.\n\nPalette\nYou can change the color palette of the Pagination via the palette property.\nSizing\nYou can alter the overall sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/timepicker","title":"TimePicker","text":"\nNOTE: Introduced feature in v0.4.10.\n\nTimePicker is a Widget that displays a set of hour, minute, second clock scrollable areas that a user can select from.\nImports\nNow\nYou can enable the displaying of a \"NOW\" button to allow the user to set the picker to the current time, via the now property.\nAuto Scroll\n\nWARNING: This feature can cause performance degradation in when mounted.\n\nYou can enable auto scrolling to the currently set value when TimePicker is mounted, via the scroll property.\n12 Hour\n\nNOTE: By default, this value respects the user default if available.\n\nYou can have the hours render as 12-hour time (1...12 AM/PM) instead of 24-hour time (0...23) via the hour_12 property.\n24 Hour\n\nNOTE: By default, this value respects the user default if available.\n\nYou can have the hours render as 24-hour time (0...23) instead of 12-hour time (1...12 AM/PM) via the hour_12 property.\nDisabled\nYou can disable all interactivity via the disabled property.\nDisabled Timestamps\n\nNOTE: Introduced feature in v0.6.0.\n\nYou can disable specific timestamps from being selected via the disabled property.\nHighlight\n\nNOTE: By default, the current time is used.\n\n\nWARNING: This feature was changed to accept string[] instead of string in v0.6.0.\n\nYou can select a specific timestamp to be highlighted as outlines via the highlight property.\nMaximum + Minimum\nYou can set maximum and minimum range of selectable times via the max / min properties.\nCustom Format\nYou can customize how the hour, minute, second components of the available timestamps is displayed via the hour, minute, and second properties respectively.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/yearpicker","title":"YearPicker","text":"\nNOTE: Introduced feature in v0.4.10.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nYearPicker is a Widget that displays a decade-based grid of years that a user can select from.\nImports\nDisabled\nYou can disable all interactivity via the disabled property.\nDisabled Years\nYou can disable specific years from being selected via the disabled property.\nMultiple\nYou can allow for multiple years to be selected via the multiple property.\nOnce\nYou can disable selected years from being unselected via the once property.\nReadonly\nYou can disable interactivity without changing the visuals via the readonly property.\nHighlight\n\nNOTE: By default, the current year is used.\n\nYou can select a specific set of years to be highlighted as outlines via the highlight property.\nMaximum + Minimum\nYou can set maximum and minimum range of selectable years via the max / min properties.\nCustom Format\nYou can customize how the year component of the available timestamps is displayed via the year property.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/yearstepper","title":"YearStepper","text":"\nNOTE: Introduced feature in v0.4.10.\n\n\nWARNING: This feature received a breaking change in v0.6.0.\n\nYearStepper is a Widget that lets users increment / decrement the currently provided year by a set number.\nImports\nDisabled\nYou can disable all interactivity via the disabled property.\nReadonly\nYou can disable interactivity without changing the visuals via the readonly property.\nMaximum + Minimum\nYou can set maximum and minimum range of steppable years via the max / min properties.\nSteps\n\nWARNING: This feature was renamed from step to steps in v0.6.0.\n\nYou can control how many years the buttons increment / decrement via the steps property.\nCustom Format\nYou can customize how the year component of the current timestamp is displayed via the year property.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/samples/calculator","title":"Calculator","text":"Sample code for a calculator.\n"}]}