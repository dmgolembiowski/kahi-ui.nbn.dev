{"data":[{"identifier":"/docs/actions/auto_focus","title":"auto_focus","text":"auto_focus\n\nNOTE: New since v0.4.13.\n\nauto_focus is a Svelte Action, which when IAutoFocusOptions.enabled: boolean is true, focuses the first focusable element found within the attached element. When false, restores focus to the previously focused element.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement.\nTarget\nYou can set the element that is focused with a reference or CSS Selector when enabled via IAutoFocusOptions.target: HTMLElement | string option.\n"},{"identifier":"/docs/actions/click_inside","title":"click_inside","text":"click_inside\n\nNOTE: New since v0.4.13.\n\nclick_inside is a Svelte Action, which runs a on_click_inside(event: MouseEvent): void callback whenever your attached element is clicked inside of.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement.\nIgnore\nYou can ignore elements that matches a given CSS Selector via the IClickInsideOptions.ignore: string option.\n"},{"identifier":"/docs/actions/click_outside","title":"click_outside","text":"click_outside\n\nNOTE: New since v0.2.11.\n\nclick_outside is a Svelte Action, which runs a on_click_outside(event: MouseEvent): void callback whenever your attached element is clicked outside of.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement.\nIgnore\n\nNOTE: New since v0.4.13.\n\nYou can ignore elements that matches a given CSS Selector via the IClickOutsideOptions.ignore: string option.\n"},{"identifier":"/docs/actions/intersection_observer","title":"intersection_observer","text":"intersection_observer\n\nNOTE: New since v0.4.1.\n\nintersection_observer is a Svelte Action, which runs a on_intersect(intersections: IntersectionObserverEntry[]): void callback whenever the targetted element intersects the root viewport.\n\nNOTE: The below REPL basically reimplements IntersectionRender.\n\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement. The Action is dependent on IntersectionObserver.\n"},{"identifier":"/docs/actions/keybind","title":"keybind","text":"keybind\n\nNOTE: New since v0.3.1.\n\nkeybind is a Svelte Action, which runs a on_bind(event: IKeybindEvent): void callback whenever your assigned element has focus.\nImports\nCompatibility\nSvelte Actions are always ran on the Browser only with Javascript is enabled. So should not be used for critical end-user functionality, only progressive enhancement.\nBuilt-In\n\nNOTE: New since v0.5.3.\n\nThe Framework provides a series of built-in keybinds using pre-configured standard keybinds that you can use in your own code.\n\n\naction_activate — Used for activating the current context, e.g. a focused label.\n\nEnter,   (space)\n\n\n\naction_exit — Used for exiting the current context, e.g. a prompt.\n\nEsc\n\n\n\naction_submit — Used for submitting the current context, e.g. a focused input.\n\nEnter\n\n\n\nnavigate_down — Used for navigating to the next item down.\n\nArrowDown\nRepeatable, 250ms throttle\n\n\n\nnavigate_left — Used for navigating to the next item left.\n\nArrowLeft\nRepeatable, 250ms throttle\n\n\n\nnavigate_right — Used for navigating to the next item right.\n\nArrowRight\nRepeatable, 250ms throttle\n\n\n\nnavigate_up — Used for navigating to the next item up.\n\nArrowUp\nRepeatable, 250ms throttle\n\n\n\nBinding\nYou can configure which set of keys you want to activate the binding by listing the Key Values in a key1+key2+keyN format via the IKeybindOptions.binds: string | string[] option. You can (theoretically) listen to as many keys as you want.\nYou can also have a single binding listen to multiple sets of keys by passing in an array.\nActive Binding\nYou can detect if the keybind is currently being pressed via the IKeybindEvent.detail.active member.\nEvent Management\nJust like with regular events, you can use IKeybindEvent.preventDefault: () => void / IKeybindEvent.stopPropagation: () => void functions to cancel propagation / the Browser using default behavior.\nRepeat\nYou can enable listening to repeat binding activations (e.g. binding being held down) via the IKeybindOptions.repeat: boolean option. And then detect if the current callback is a repeat via the IKeybindEvent.detail.repeat member.\nThrottling\nWhen listening to repeat binding activations, you can throttle activation callbacks for every N amount of milliseconds via the IKeybindOptions.repeat_throttle: number option.\n\nNOTE: New since v0.4.13.\n\n\nNOTE: By using throttle_cancel in this pseudo search UI, the Browser scrolling via arrow keys is disabled.\n\nYou can also enable the keybind Action to automatically call preventDefault / stopPropagation on all throttled keydown / keyup events via the IKeybindOptions.throttle_cancel: boolean option.\n"},{"identifier":"/docs/actions/lost_focus","title":"lost_focus","text":"lost_focus\n\nNOTE: New since v0.5.0.\n\nlost_focus is a Svelte Action, which runs a on_lost_focus(): void callback whenever another element is focused which is not a child of the attached element, OR, the Browser window / tab is no longer actively focused.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement.\nIgnore\nYou can ignore elements that matches a given CSS Selector via the ILostFocusOptions.ignore: string option.\n\nTODO: snippet\n\n"},{"identifier":"/docs/actions/mutation_observer","title":"mutation_observer","text":"mutation_observer\n\nNOTE: New since v0.4.1.\n\nmutation_observer is a Svelte Action, which runs a on_mutate(mutations: MutationRecord[]): void callback whenever the targetted element intersects the root viewport.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement. The Action is dependent on MutationObserver.\n"},{"identifier":"/docs/actions/overflow_clipping","title":"overflow_clipping","text":"overflow_clipping\n\nNOTE: New since v0.4.13.\n\n\nIMPORTANT: overflow_clipping only detects if the attached element has is clipping on a given axis, not if the scrollbar is visible.\n\n\nWARNING: This feature can cause layout thrashing.\n\noverflow_clipping is a Svelte Action, which when IOverflowClippingOptions.enabled: boolean is true, runs the IOverflowClippingOptions.on_clip: (entry: {horizontal: boolean, vertical: boolean}) => void callback. Whenever content is clipping the bounding box of the attached element.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement.\n"},{"identifier":"/docs/actions/trap_focus","title":"trap_focus","text":"trap_focus\n\nNOTE: New since v0.4.13.\n\n\nNOTE: Click the Link button, to test out the functionality in the Playground.\n\ntrap_focus is a Svelte Action, which when ITrapFocusOptions.enabled: boolean is true, traps focus movement (TAB / SHIFT+TAB) to within the attached element's first and last found focusable elements.\nImports\nCompatibility\nSvelte Actions are always ran on Javascript-enabled Browser. So should not be used for critical end-user functionality, only progressive enhancement.\nFirst + Last\n\nNOTE: Click the Link button, to test out the functionality in the Playground.\n\nYou can customize the first / last focusable elements with references or CSS Selectors via the ITrapFocusOptions.first: HTMLElement | string / ITrapFocusOptions.last: HTMLElement | string options.\n"},{"identifier":"/docs/disclosure/accordion","title":"Accordion","text":"Accordion\n\nNOTE: New since v0.4.5.\n\nAccordion Components are typically used for displaying related content into collapsible stack of buttons, that toggles between views.\nImports\n\nLogic State\n\nNOTE: New since v0.5.2.\n\n\nWARNING: This feature is only available in Javascript-enabled Browsers.\n\nYou can manually choose which <Accordion.Section> Components are active via the logic_state property.\nInclusive\nYou can change the behavior of the Accordion to allow multiple items to be revealed at once via the behavior property.\nSlot\n\nNOTE: New since v0.5.2.\n\nYou can customize the icons the icons that represent the if an <Accordion.Section> Component is open or not via the close / open slots.\nPalette\nYou can change the color palette of the Accordion buttons via the palette property.\nLoading\n\nNOTE: Use the in-Browser developer tools to see this functionality in action.\n\nYou can customize the slot loading behavior of individual Accordion.Section Components to not render their children, via the loading property.\nTransitions\nYou can use Transition Components to provide fancy switching animations.\n"},{"identifier":"/docs/disclosure/carousel","title":"Carousel","text":"Carousel\n\nNOTE: New since v0.4.6.\n\nCarousel allows the user to scroll through \"slides\" of content without having to extend the page dimensions.\nImports\nOrientation\nYou can set the Carousel to render vertically via the orientation property.\nSpacing\n\nNOTE: By passing an array, you can set responsive values. e.g. spacing={[\"medium\", \"tablet:small\", \"mobile:tiny\"]}\n\nYou can adjust the spacing between items via the spacing, spacing_x, and spacing_y properties.\n"},{"identifier":"/docs/disclosure/tab","title":"Tab","text":"Tab\n\nNOTE: New since v0.3.1.\n\nTab Components are typically used for turning what would be multi-page content, into a single page with a set of radio buttons to toggle between views.\nImports\n\nLogic State\n\nNOTE: New since v0.5.2.\n\n\nWARNING: This feature is only available in Javascript-enabled Browsers.\n\nYou can manually choose which <Tab.Section> Component is active via the logic_state property.\nPalette\nYou can change the color palette of the Tab radio buttons via the palette property.\nSizing\nYou can alter how large each Tab radio button should be via the sizing property.\nAlignment\nYou can change the alignment of each Tab radio button via the alignment_x property.\nLoading\n\nNOTE: Use the in-Browser developer tools to see this functionality in action.\n\nYou can customize the slot loading behavior of individual Tab.Section Components to not render their children, via the loading property.\nAnchor\nYou can substitute Tab.Label for Tab.Anchor to support per-page tabbed views.\nTransitions\nYou can use Transition Components to provide fancy switching animations.\n"},{"identifier":"/docs/display/badge","title":"Badge","text":"Badge\n\nNOTE: New since v0.2.0.\n\n\nWARNING: Received a breaking refactoring in v0.5.0.\n\nBadge is typically used to subtlely display to the user some type of ancillary information, relating to its siblings / parent UI elements.\nImports\nPalette\nYou can change the color palette of the Badge via the palette property.\nShape\nYou can modify the shape of the Shape via the shape property.\n"},{"identifier":"/docs/display/datestamp","title":"DateStamp","text":"DateStamp\n\nNOTE: New since v0.4.10.\n\nDateStamp formats an ISO 8601 / RFC 3339 timestamp into a human readable string, using the user preferences provided by the Browser.\nImports\nCustom Format\n\nNOTE: By using custom format settings, the user's defaults will not be loaded and you will have to opt into each unit of information.\n\nYou can customize how each individual component of the timestamp is displayed via the day, month, weekday, and year properties respectively.\n"},{"identifier":"/docs/display/datetimestamp","title":"DateTimeStamp","text":"DateTimeStamp\n\nNOTE: New since v0.4.10.\n\nDateTimeStamp formats an ISO 8601 / RFC 3339 timestamp into a human readable string, using the user preferences provided by the Browser.\nImports\n12 Hour\nYou can have the timestamp render as 12-hour time (1...12 AM/PM) instead of 24-hour time (0...23) via the hour_12 property.\nCustom Format\n\nNOTE: By using custom format settings, the user's defaults will not be loaded and you will have to opt into each unit of information.\n\nYou can customize how each individual component of the timestamp is displayed via the day, month, weekday,  year, hour , minute, and second properties respectively.\n"},{"identifier":"/docs/display/list","title":"List","text":"List\n\nNOTE: New since v0.2.4.\n\nList is used for rendering simple text lists.\nImports\nTypes\nYou can change what type of list is being rendered via the is property.\n"},{"identifier":"/docs/display/table","title":"Table","text":"Table\n\nNOTE: New since v0.2.7.\n\nTable is typically used to render tabular data in a structured row -> columns format, for end-users to easily read the contents.\nTable Imports\nSpans\n\nNOTE: New since v0.4.4.\n\n\nDEPRECATED: This feature will be renamed from colspan / rowspan -> span_x / span_y in v0.6.0 to consolidate API surface.\n\nYou can use the span_x / span_y properties on <Table.Column> / <Table.Heading> to adjust the size of table items they take up.\nBorders\nYou can make a Table have borders via the variation property.\nStripes\nYou can make a Table have stripes via the variation property.\nBorders + Stripes\nYou can make a Table have both borders AND stripes via the variation property.\nSizing\n\nNOTE: New since v0.3.5.\n\nYou can change the sizes / spacings of the child elements via the sizing property.\nScrollable Tables\nYou can make a Table scrollable by wrapping it with a Scrollable.\n"},{"identifier":"/docs/display/timestamp","title":"TimeStamp","text":"TimeStamp\n\nNOTE: New since v0.4.10.\n\nTimeStamp formats an ISO 8601 / RFC 3339 timestamp into a human readable string, using the user preferences provided by the Browser.\nImports\n12 Hour\nYou can have the timestamp render as 12-hour time (1...12 AM/PM) instead of 24-hour time (0...23) via the hour_12 property.\nCustom Format\n\nNOTE: By using custom format settings, the user's defaults will not be loaded and you will have to opt into each unit of information.\n\nYou can customize how each individual component of the timestamp is displayed via the hour, minute, and second properties respectively.\n"},{"identifier":"/docs/embedded/figure","title":"Figure","text":"Figure\n\nNOTE: New since v0.2.1.\n\nFigure is a multimedia container Component, providing modifications for things such as images and videos.\nImports\nShape\nYou can modify the shape of the child content via the shape property.\nSize\n\nDEPRECATED: This property will be elevated to becoming a global property in v0.6.0.\n\n\nDEPRECATED: variation=\"icon\" will be removed in favor size=\"icon-{SIZE}\" in v0.6.0, e.g. size=\"icon-huge\".\n\nYou can modify the size of the child content between five presets via the size property. Along with separate set of sizes meant for icon-sized content by including variation=\"icon\".\nFit\nYou can change how the child content is stretched across the Figure container via the fit property.\n"},{"identifier":"/docs/feedback/dot","title":"Dot","text":"Dot\n\nNOTE: New since v0.2.0.\n\n\nWARNING: Received a breaking refactoring in v0.5.0.\n\nDot is typically used for calling out other UI elements to the end-user, that they need attention.\nImports\nPalette\nYou can change the color palette of the Dot via the palette property.\nAnimation\n\nDEPRECATED: This feature will be removed in favor of a standalone Animation Component in v0.6.0.\n\nYou can have the Dot perform animations to grab the end-user's attention via the animation property.\n"},{"identifier":"/docs/feedback/ellipsis","title":"Ellipsis","text":"Ellipsis\n\nNOTE: New since v0.2.5.\n\n\nWARNING: Received a breaking refactoring in v0.5.0.\n\nEllipsis is a text-based indicator used to tell the end-user that the Web Application is loading something in the background.\nImports\nSlot\nYou can customize the text character used for the animation via the by passing into the default slot.\n"},{"identifier":"/docs/feedback/progress","title":"Progress","text":"Progress\n\nNOTE: New since v0.3.1.\n\nProgress is typically used to render feedback to the end-user about how complete a current task is.\nImports\nShape\nYou can modify the shape of the Progress via the shape property.\nPalette\nYou can change the color palette of the Progress via the palette property.\nSizing\n\nDEPRECATED: This property will be renamed size -> sizing in v0.6.0.\n\nYou can change the size of the Progress via the sizing property.\nIndeterminate\nBy not passing the value property, the Progress will render with an animation for tasks that don't have trackable progression.\n"},{"identifier":"/docs/feedback/spinner","title":"Spinner","text":"Spinner\n\nNOTE: New since v0.2.0.\n\n\nDEPRECATED: This feature will be removed for <Progress shape=\"circle\" value={undefined}> in v0.6.0 due to duplicate functionality.\n\nSpinner is an indicator used to tell the end-user that the Web Application is loading something in the background.\nImports\nPalette\nYou can change the color palette of the Spinner via the palette property.\nSizing\n\nDEPRECATED: This property will be renamed size -> sizing in v0.6.0.\n\nYou can change the size of the Spinner via the sizing property.\n"},{"identifier":"/docs/feedback/wave","title":"Wave","text":"Wave\n\nNOTE: New since v0.2.5.\n\n\nDEPRECATED: This feature will be removed for <Ellipsis animation=\"bounce\" iterations=\"5\"> in v0.6.0 due to expanded functionality.\n\nWave is an indicator used to tell the end-user that the Web Application is loading something in the background.\nImports\nPalette\nYou can change the color palette of the Wave via the palette property.\n"},{"identifier":"/docs/framework/actions","title":"Actions","text":"Actions\n\nNOTE: New since v0.4.11.\n\nAs a limitation of Svelte, you cannot use Actions on Components. So the Framework provides a special syntax to support forwarding actions to a Component's main elements.\n\n"},{"identifier":"/docs/framework/browser-support","title":"Browser Support","text":"Browser Support\nModern Browsers listed below and generally their derivatives. Primary testing happens on Chrome / Firefox, both mobile and desktop. With occasional testing on Gnome Web which is based on WebKit.\n\n\n\n\nChrome\nEdge\nFirefox\nSafari\nEdge (Pre Chromium)\nInternet Explorer\n\n\n\n\nEstimated Minimum\n88+ January 2021\n88+ January 2021\n84+ December 2020\n14.1+ April 2021\nNOT SUPPORTED\nNOT SUPPORTED\n\n\nTested Minimum\n89+\n?\n87+\n?\nNOT SUPPORTED\nNOT SUPPORTED\n\n\n\nFeatures Used\nThe features listed below are used within Kahi UI, and are newer features. So they raise the minimum Browser versions needed.\nCSS\n\nclip-path w/ Shapes\nCSS Custom Properties\nFlexbox w/ Gap\nGrid\ninset\n:is\n:not w/ Selector List\nprefers-color-scheme\n\nJavascript\n\nTODO: Run through the codebase and look for newer JS features used\n\n"},{"identifier":"/docs/framework/custom-properties","title":"Custom Properties","text":"Custom Properties\n\nWARNING: The global theme Custom Properties are considered unstable and subject to change before v1.0.\n\nIn supporting Components and for the global theme, you can use CSS Custom Properties to alter the look and feel of the Framework.\nVia Style\nYou can customize the Custom Properties via inline styles as shown below.\nVia Classes\nYou can also use CSS classes to customize them as well.\nVia Global Stylesheet\n\nIMPORTANT: Make sure to declare your customized Custom Properties after you have loaded the Framework stylesheet. Otherwise they will be ignored.\n\nYou can finally use global stylesheets to keep all your customizations in one spot.\n"},{"identifier":"/docs/framework/elements","title":"Elements","text":"Elements\nLike binding DOM nodes, most Components support binding their top-level layout HTMLElement via the element property instead of this.\n"},{"identifier":"/docs/framework/events","title":"Events","text":"Events\nLike binding normal DOM events with Svelte. Various Components in the Framework support forwarding their element's native events, or supply their own events for their own specific logic.\n"},{"identifier":"/docs/framework/faq","title":"F.A.Q.","text":"F.A.Q.\nWhere can I get help?\nIf you need help with something not properly documented or needs clarification, you can visit the Issue Tracker. File a new issue and it'll be addressed on a spare time effort. Alternatively, visit the Discord Server to talk to other Kahi UI developers.\nWhat Browsers are supported?\nVisit the Browser Support documentation for more information.\nCan I use the library without Svelte?\nYes, however there is no official support to do so. Visit Releases and grab the .css distributable files, and read the library source code on how to do markup, progressive enhancements, etc.\nCan I use the library on Browsers that don't support or have Javascript disabled?\nYes! The library is explictly made in mind that Svelte should be used to sprinkle extra functionality ontop of logic baked in HTML / CSS. If you find something not working properly, file an issue.\nIs Themeing Supported?\nNot at the moment, but that'll be tackled via global CSS Custom Properties at a later time.\nIs Accessibility / ARIA Supported?\nWhile I want to implement full proper support, including keyboard navigation. It is currently not being pursued and will be tackled at a later date. However if you encounter something that'll be detrimental file an issue.\n"},{"identifier":"/docs/framework/getting-started","title":"Getting Started","text":"Getting Started\nInstallation\nUsing a terminal inside of your project's directory, use npm to install the package.\nImporting Stylesheet\n\nDEPRECATED: This feature will require an additional theme import in v0.6.0.\n\nFirst if your toolchain supports it, import the required CSS files from @kahi-ui/framework/dist:\nOtherwise download the required CSS files from Releases and use <link rel=\"stylesheet\">:\nUsage\nImport Components by their variable name from @kahi-ui/framework:\nSome Components are multi-part patterns, so you'll need to import their namespaces:\n"},{"identifier":"/docs/framework/responsitivity","title":"Responsitivity","text":"Responsitivity\nKahi UI supports responsive design out of the box for the majority of its Components. Such as Grid, where you can define how many items are displayed at each Viewport.\nViewports\nAs mentioned above, Kahi UI has the concept of four pre-defined breakpoints that are known as Viewports. Which are only active whenever the Browser window's width is within two sizes.\n\n\n\nViewport\nMinimum\nMaximum\n\n\n\n\nmobile\n0px\n640px\n\n\ntablet\n641px\n768px\n\n\ndesktop\n769px\n1024px\n\n\nwidescreen\n1025px\n∞\n\n\n\nSyntax\nTo be able to use Viewport-specific values, you just need to prefix your values with {VIEWPORT}:, e.g. <Grid points=\"mobile:3\">. But then you can't specify default values or other Viewport-specifics. For that you need to pass an array in like below.\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\n"},{"identifier":"/docs/globals/contents","title":"Contents","text":"Contents\n\nNOTE: New since v0.5.0.\n\nAll Components have access to the data-contents global HTML attribute via the contents property which removes the Component's bounding box / stylings from the DOM tree.\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. contents={[\"mobile\", \"tablet\"]}\n\n"},{"identifier":"/docs/globals/hidden","title":"Hidden","text":"Hidden\n\nNOTE: New since v0.2.2.\n\nAll Components have access to the data-hidden global HTML attribute via the hidden property. Unlike the standard hidden HTML attribute, data-hidden supports Responsitivity.\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. hidden={[\"mobile\", \"tablet\"]}\n\n"},{"identifier":"/docs/globals/html5","title":"HTML5","text":"HTML5\nAll Components have access to common HTML5 global attributes and events.\nclass\n\nNOTE: New since v0.2.0.\n\nclass allows you to apply CSS classes that you've defined to Components. However, you will have to use :global on your class names to bypass Svelte's local scoping.\nstyle\n\nNOTE: New since v0.2.0.\n\nstyle allows you to apply inline CSS properties to Components.\nid\n\nNOTE: New since v0.2.0.\n\nid allows you to set an identifier that other elements can target or targettable for scrolling by a URL fragment.\nname\n\nNOTE: New since v0.2.0.\n\nname allows you to set an identifier for the Component to set its value to in a form, or, can targettable by an Anchor.\ntitle\n\nNOTE: New since v0.2.0.\n\ntitle allows you to set a timed effect to show a text tooltip whenever an end-user hovers for long enough. Typically you don't want to rely on this attribute for the UI. Rather use it for semantic and assistive purposes.\ntabindex\n\nNOTE: New since v0.2.0.\n\ntabindex allows you to configure how the Browser cycles through elements in the current stacking context when they press their tab keyboard button, or similar.\n\nTODO: Event samples\n\n"},{"identifier":"/docs/globals/sizings","title":"Sizings","text":"Sizings\nAll Components have access to the global width and height HTML data attributes. All of which, supports Responsitivity.\nWidth\n\nNOTE: New since v0.2.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. width={[\"25\", \"tablet:viewport-50\"]}\n\nYou can set a defined width for your Components via the width property.\nHeight\n\nNOTE: New since v0.2.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. height={[\"25\", \"tablet:viewport-50\"]}\n\nYou can set a defined height for your Components via the height property.\nMinimums / Maximums\n\nNOTE: New since v0.2.0.\n\nYou can also set minimums or maximum sizes via prefixing your properties with max_ or min_.\n"},{"identifier":"/docs/globals/spacings","title":"Spacings","text":"Spacings\nAll Components have access to the global margin and padding HTML data attributes. All of which, supports Responitivity.\nMargin\n\nNOTE: New since v0.2.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. margin={[\"small\", \"tablet:large\"]}\n\nYou can set margins for your Components via the margin property.\nPadding\n\nNOTE: New since v0.2.0.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. padding={[\"small\", \"tablet:large\"]}\n\nYou can set paddings for your Components via the padding property.\nDirectional\nAll Spacings properties have directional support via the *_x, *_y, *_left, *_top, *_right, and *_bottom suffixes.\n"},{"identifier":"/docs/globals/sveltekit","title":"SvelteKit","text":"SvelteKit\nAll Components have access to all global SvelteKit attributes.\nsveltekit:noscroll\n\nNOTE: New since v0.2.0.\n\nsveltekit:noscroll configures SvelteKit to disable scrolling to top / linked element ID #hash whenever the link is clicked.\nsveltekit:prefetch\n\nNOTE: New since v0.2.0.\n\nsveltekit:prefetch configures SvelteKit to fetch the linked route's load whenever the link is hovered.\n"},{"identifier":"/docs/interactables/button","title":"Button","text":"Button\n\nNOTE: New since v0.2.0.\n\nButton is used to usually trigger an action in the Web Application, such as submitting forms or opening an Overlay.\nImports\nPalette\nYou can change the color palette of the Button via the palette property.\nSizing\n\nDEPRECATED: This property will be renamed size -> sizing in v0.6.0.\n\nYou can change the size of the Button via the sizing property.\nClear\nButton components have a special variation that renders as text with no background, that lightly fills in when clicked.\nOutline\nButton components have a special variation that renders them as text with an outline, the fills in when clicked.\nSubtle\n\nNOTE: New since v0.5.1.\n\nYou can alter the Button Component to use less intense / remove \"attention grabbing\" animations via the variation property.\nTypes\n\nDEPRECATED: This feature will require an explicit is property in v0.6.0.\n\nYou can change make the Button a <a> by passing the href property, or a <label> by passing the for property. And also, change the input type between <input type=\"button\" /> (DEFAULT), <input type=\"reset\" />, <input type=\"submit\" /> via the type / value properties.\n"},{"identifier":"/docs/interactables/check","title":"Check","text":"Check\n\nNOTE: New since v0.2.7.\n\n\nWARNING: Received a breaking change in v0.5.0.\n\nCheck is typically used to present a set of options to the end-user, which they can then choose from.\nImports\nStates\nYou can control the state of the Check via the active, disabled, and state properties.\nPalette\nYou can change the color palette of the Check via the palette property.\nSizing\n\nDEPRECATED: This property will be renamed size -> sizing in v0.6.0.\n\nYou can change the size of the Check via the sizing property.\nFlush\n\nNOTE: New since v0.2.13.\n\nYou can change the appearance of the Check to be flush with the rest of the Application content via the variation property.\n"},{"identifier":"/docs/interactables/filedropinput","title":"FileDropInput","text":"FileDropInput\n\nNOTE: New since v0.4.6.\n\n\nNOTE: Keep in mind, while the Component does work without Javascript, it cannot display its value like FileInput can without.\n\nFileDropInput acts as a click-to-prompt and drag'n'drop file input stylized as an alternative to FileInput.\nImports\nPalette\nYou can change the color palette of the FileDropInput via the palette property.\n"},{"identifier":"/docs/interactables/form","title":"Form","text":"Form\nForm Components are helpers to supplement input Components that are meant for webforms like TextInput.\nHelpText\n\nNOTE: New since v0.2.7.\n\nForm.HelpText is typically used for displaying information about how to input information into a form properly.\nLabel\n\nNOTE: New since v0.2.7.\n\n\nNOTE: This Component sets a Svelte Context for Form IDs / Names that child input Components consume.\n\nForm.Label focuses the target input Component whenever its child content is clicked.\nControl\n\nNOTE: New since v0.2.7.\n\n\nNOTE: This Component sets a Svelte Context for Form IDs / Names that child input Components consume.\n\nForm.Control is typically used to display form and input Components in a preformatted stack.\nGroup\n\nNOTE: New since v0.2.7.\n\n\nNOTE: This Component is renderless, it does not render its own DOM nodes.\n\nForm.Group let's you directly set the relevant form-related Svelte Contexts via its properties without using any preformatted shown above.\n"},{"identifier":"/docs/interactables/hiddeninput","title":"HiddenInput","text":"HiddenInput\n\nNOTE: New since v0.2.13.\n\n\nTODO: documentation\n\n...\n"},{"identifier":"/docs/interactables/numberinput","title":"NumberInput","text":"NumberInput\n\nNOTE: New since v0.4.14.\n\n\nIMPORTANT: Input masking only runs on the Browser, you need to ALWAYS validate user-generated input on the server.\n\nNumberInput is a subset of TextInput, which only accepts numbers and masks user input accordingly.\nImports\nPalette\nYou can change the color palette of the NumberInput via the palette property.\nSizing\n\nDEPRECATED: This property will be renamed size -> sizing in v0.6.0.\n\nYou can change the size of the NumberInput via the sizing property.\nBlock\nYou can alter the NumberInput render as an opaque block via the variation property.\nFlush\nYou can change the appearance of the NumberInput to be flush with the rest of the Application content via the variation property.\nPlaceholder\nYou can set the NumberInput to show placeholder text whenever there is no current value.\nField Character Size\n\nDEPRECATED: This feature will be renamed from characters -> span_x in v0.6.0 to consolidate API surface.\n\nYou can set how wide your NumberInput to an approximation of character width via the span_x property.\n"},{"identifier":"/docs/interactables/radio","title":"Radio","text":"Radio\n\nNOTE: New since v0.2.7.\n\n\nWARNING: Received a breaking change in v0.5.0.\n\nRadio is typically used to present a set of mutually-exclusive options to the end-user, which they can then choose from.\nImports\nStates\nYou can control the state of the Radio via the active, disabled, and state properties.\nPalette\nYou can change the color palette of the Radio via the palette property.\nSizing\n\nDEPRECATED: This property will be renamed size -> sizing in v0.6.0.\n\nYou can change the size of the Radio via the sizing property.\nFlush\n\nNOTE: New since v0.2.13.\n\nYou can change the appearance of the Radio to be flush with the rest of the Application content via the variation property.\n"},{"identifier":"/docs/interactables/switch","title":"Switch","text":"Switch\n\nNOTE: New since v0.2.7.\n\n\nWARNING: Received a breaking change in v0.5.0.\n\nSwitch is typically used to present to the end-user features, settings, and other toggles that they can turn on / off.\nImports\nStates\nYou can control the state of the Switch via the active, disabled, and state properties.\nPalette\nYou can change the color palette of the Switch via the palette property.\nSizing\n\nDEPRECATED: This property will be renamed size -> sizing in v0.6.0.\n\nYou can change the size of the Switch via the sizing property.\n"},{"identifier":"/docs/interactables/textinput","title":"TextInput","text":"TextInput\n\nNOTE: New since v0.2.7.\n\n\nWARNING: Received a breaking change in v0.5.0.\n\nTextInput is typically used for capturing string input from an end-user for input into forms, XHR requests, etc.\nImports\nInput Masking\n\nNOTE: New since v0.4.14.\n\n\nWARNING: This feature is only available in Javascript-enabled Browsers.\n\n\nIMPORTANT: This feature only runs on the Browser, you need to ALWAYS validate user-generated input on the server.\n\nYou can enable input masking (dropping input that doesn't match a constraint) by enabling mask and setting the pattern properties.\n\nNOTE: The below input is masked to hexadecimal input, e.g. abcdef1234567890\n\nOr by implementing custom logic via the mask event.\nPalette\nYou can change the color palette of the TextInput via the palette property.\nSizing\n\nDEPRECATED: This property will be renamed size -> sizing in v0.6.0.\n\nYou can change the size of the TextInput via the sizing property.\nBlock\nYou can alter the TextInput render as an opaque block via the variation property.\nFlush\n\nNOTE: New since v0.2.16.\n\nYou can change the appearance of the TextInput to be flush with the rest of the Application content via the variation property.\nInput Type\nYou can change your input type between email, password, search, text (DEFAULT), url via the type property.\nPlaceholder\nYou can set the TextInput to show placeholder text whenever there is no current value.\nField Character Size\n\nDEPRECATED: This feature will be renamed from characters -> span_x in v0.6.0 to consolidate API surface.\n\nYou can set how wide your TextInput to an approximation of character width via the span_x property.\nTextArea\nYou can have the TextInput render as a <textarea> via the is property.\nField Line Size\n\nDEPRECATED: This feature will be renamed from lines -> span_y in v0.6.0 to consolidate API surface.\n\nYou can set how tall your <textarea> based TextInput to an approximation of character lines via the span_y property.\nResizable TextArea\nYou alter the a <textarea> based TextInput to resizable both axis true, horizontally x, and vertically y via the resizable property.\n"},{"identifier":"/docs/layouts/center","title":"Center","text":"Center\n\nNOTE: New since v0.4.2.\n\nCenter is a layout primitive used to quickly center the child content within its self.\nImports\n"},{"identifier":"/docs/layouts/container","title":"Container","text":"Container\n\nNOTE: New since v0.2.0.\n\nContainer is a layout primitive used to typically constrain chunks of content to a max width or parent width, and centered horizontally with padding. By default it sets the max width to 65 characters.\nImports\nViewports\n\nDEPRECATED: This property will be removed in v0.6.0, in favor of new width / max_width values.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. viewport={[\"mobile\", \"widescreen:prose\"]}\n\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\nYou can customize the Container to be constrained to specific Viewport sizes.\n"},{"identifier":"/docs/layouts/divider","title":"Divider","text":"Divider\n\nNOTE: New since v0.2.0.\n\nDivider is typically used to visually separate content for easier reading comprehension.\nImports\nPalette\nYou can change the color palette of the Divider via the palette property.\nOrientation\nYou can set the Divider to render vertically via the orientation property.\nText\nDivider components can also render text within their separators via passing content into the default slot.\n"},{"identifier":"/docs/layouts/grid","title":"Grid","text":"Grid\n\nNOTE: New since v0.2.0.\n\nGrid is a multi-part layout pattern for setting up a grid of items organized to a 12-point system.\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\nImports\nPoints\n\nNOTE: By passing an array, you can set responsive values. e.g. points={[\"7\", \"tablet:6\", \"mobile:5\"]}\n\nYou can adjust how many points the Grid.Container items are divided by via the points property.\nSpacing\n\nNOTE: By passing an array, you can set responsive values. e.g. spacing={[\"medium\", \"tablet:small\", \"mobile:tiny\"]}\n\nYou can adjust the spacing between items via the spacing, spacing_x, and spacing_y properties.\nItem Span\n\nNOTE: New since v0.2.10.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. span={[\"3\", \"tablet:2\", \"mobile:1\"]}\n\nYou can adjust grid span of individual items via the span, span_x, span_y properties, by wrapping the items in Grid.Item.\n"},{"identifier":"/docs/layouts/group","title":"Group","text":"Group\n\nNOTE: New since v0.2.0.\n\nGroup is a layout primitive used for grouping together like Components with their inner border radii removed.\nImports\nOrientation\nYou can set the Group to render its children Components vertically, via the orientation property.\nStacked\nYou can set the variation property to stacked to visually stack children Components, like avatar stacks.\n\n"},{"identifier":"/docs/layouts/mosaic","title":"Mosaic","text":"Mosaic\n\nNOTE: New since v0.2.0.\n\n\nDEPRECATED: This feature will be renamed from <Mosaic> -> <Mosaic.Container> in v0.6.0 to facilitate per-item customization.\n\nMosaic is a layout primitive for setting up a mosaic of items organized to displaying as many child items at a certain size as possible.\nImports\n\nDEPRECATED: <Mosaic> will be renamed to <Mosaic.Container> in v0.6.0.\n\nSizing\n\nNOTE: By passing an array, you can set responsive values. e.g. sizing={[\"tiny\", \"tablet:medium\", \"mobile:medium\"]}\n\nYou can alter how large each Mosaic item should be via the sizing property.\nSpacing\n\nNOTE: By passing an array, you can set responsive values. e.g. spacing={[\"medium\", \"tablet:small\", \"mobile:tiny\"]}\n\nYou can adjust the spacing between items via the spacing, spacing_x, and spacing_y properties.\n"},{"identifier":"/docs/layouts/position","title":"Position","text":"Position\n\nNOTE: New since v0.4.2.\n\n\nWARNING: Received a breaking refactoring in v0.5.0.\n\nPosition is a layout primitive that can float itself and child content in specific regions of the containing Components.\nImports\nAction\n\nNOTE: New since v0.5.0.\n\nTypically used for FABs (Floating Action Buttons), you can set the Position to float its self (and its children) into a corner relative to the viewport via the variation property.\nYou can also adjust how far the Position sits away from the corner via the spacing, spacing_x, spacing_y properties respectively.\nYou can also adjust the Position to sit relative to the parent container instead of viewport via the variation property.\nIndicator\n\nWARNING: <Position variation=\"floated\"> was deprecated and renamed to <Position variation=\"indicator\"> in v0.5.0.\n\n\nIMPORTANT: <Position variation=\"indicator\" placement=\"top/bottom\"> was removed and renamed to <Position variation=\"indicator\" alignment_y=\"top/bottom\"> in v0.5.0.\n\nTypically used for unread indicators, you can set the Position to float its self (and its children) onto a corner relative to its parent container via the variation property.\nRaised\nYou can set the Position to raise its self (and its children) in-place via the variation property.\n"},{"identifier":"/docs/layouts/scrollable","title":"Scrollable","text":"Scrollable\n\nNOTE: New since v0.2.3.\n\nScrollable is a layout primitive for encapsulating a given available space into its own scrollable context.\nImports\n"},{"identifier":"/docs/layouts/spacer","title":"Spacer","text":"Spacer\n\nNOTE: New since v0.2.0.\n\n\nWARNING: Received a breaking refactoring in v0.5.0.\n\nSpacer is a layout primitive that takes up all available space between its two immediate siblings.\nImports\nSpacing\n\nNOTE: By passing an array, you can set responsive values. e.g. spacing={[\"medium\", \"tablet:small\", \"mobile:tiny\"]}\n\nYou can adjust the spacing between the immediate siblings via the spacing, spacing_x, and spacing_y properties.\nInline\n\nNOTE: Changed from variation=\"block/inline\" -> is=\"div/span\" in v0.4.10.\n\nYou can have the Spacer rendering as an inline <span> via the is property.\n"},{"identifier":"/docs/layouts/stack","title":"Stack","text":"Stack\n\nNOTE: New since v0.2.0.\n\n\nDEPRECATED: This feature will be renamed from <Stack> -> <Stack.Container> in v0.6.0 to facilitate per-item customization.\n\nStack is a layout primitive for setting up a horizontal / vertical stacking of items with even spacing between children. With optional wrapping.\nImports\n\nDEPRECATED: <Stack> will be renamed to <Stack.Container> in v0.6.0.\n\nOrientation\n\nNOTE: By passing an array, you can set responsive values. e.g. orientation={[\"desktop:horizontal\", \"widescreen:horizontal\"]}\n\nYou can set the Stack to render horizontally via the orientation property.\nSpacing\n\nNOTE: By passing an array, you can set responsive values. e.g. spacing={[\"medium\", \"tablet:small\", \"mobile:tiny\"]}\n\nYou can adjust the spacing between items via the spacing, spacing_x, and spacing_y properties.\nAlignment\n\nNOTE: By passing an array, you can set responsive values. e.g. alignment_x={[\"center\", \"tablet:left\", \"mobile:right\"]}\n\nYou can adjust the spacing between items via the alignment, alignment_x, and alignment_y properties.\nWrap\nYou can alter the Stack to wraps its children into the next line via the variation property.\n"},{"identifier":"/docs/migrations/0.4.x-to-0.5.x","title":"0.4.x to 0.5.x","text":"0.4.x to 0.5.x\nIntroduced in v0.5.0\nMain changes introduced were previously deprecated functionality, obsoleted functionality, and refactoring to promote better composability / reuse between Components.\nAside Built-in Collapse Removal\nDue to the multitude of ways you can design an top navigation collapse feature, the built-in collapsing was removed from Aside. Instead the Framework provides an unopinionated baseline that you can use augment with Components to build viewport-aware collapsing.\nBEFORE\nAFTER\nBadge position Property Removal\nDue to the introduction of the Position Component, the position property was obsoleted.\nBEFORE\nAFTER\nCheck Focus Events Removal\nDue to the introduction of the focusin / focusout global HTML5 events, the blur / focus events were removed. The new events should work functionally the same as a drop-in replacement.\nBEFORE\nAFTER\nDot position Property Removal\nDue to the introduction of the Position Component, the position property was obsoleted.\nBEFORE\nAFTER\nEllipsis character Property Removal\nTo allow for embedded icons (e.g. SVGs), the character property was removed in favor of accepting the default slot as character customization.\nBEFORE\nAFTER\nOffscreen Removal in Favor of Overlay\nWith the new changes regarding being able to configure Overlay's animations, and Overlay already having configurable positioning, Offscreen was removed as duplicate work.\nBEFORE\nAFTER\nOffscreen hidden Override Property Removal\nThe Framework now provides this functionality as a global contents property.\nOmni Built-in Collapse Removal\nDue to the multitude of ways you can design an top navigation collapse feature, the built-in collapsing was removed from Omni. Instead the Framework provides an unopinionated baseline that you can use augment with Components to build viewport-aware overflow collapsing.\nBEFORE\nAFTER\nOverlay is now a Multi-Pattern Component\nIn order to better facilitate future features, Overlay was changed to be a multi-pattern Component. With CSS-logic handling staying in the top-level <Overlay.Container>, and rendering related handling splitting off into <Overlay.Section>.\nBEFORE\nAFTER\nAlso note, instead of a seperate ContextButton Component, there is now an Overlay-specific <Overlay.Button> that automatically inherits logic_id.\nBEFORE\nOverlay captive Property Removal\nTo support customization via properties, <Overlay captive> was removed in favor of composable a <Overlay.Backdrop> Component.\nBEFORE\nPopover is now a Multi-Pattern Component\nIn order to better facilitate future features, Popover was changed to be a multi-pattern Component. With CSS-logic handling staying in the top-level <Popover.Container>, and rendering related handling splitting off into <Popover.Section>.\nBEFORE\nAFTER\nAlso note, instead of a seperate ContextButton Component, there is now an Popover-specific <Popover.Button> that automatically inherits logic_id.\nBEFORE\nAFTER\nPopover hidden Override Property Removal\nThe Framework now provides this functionality as a global contents property.\nPosition floated placement Removal\nTo consistently align with Components like Overlay, <Position variation=\"floated\" placement=\"top/bottom\"> was renamed to <Position variation=\"floated\" alignment_y=\"top/bottom\">.\nBEFORE\nAFTER\nRadio Focus Events Removal\nDue to the introduction of the focusin / focusout global HTML5 events, the blur / focus events were removed. The new events should work functionally the same as a drop-in replacement.\nBEFORE\nAFTER\nSpacer orientation Property Removal\nTo simplify the backing CSS, the orientation property was removed in favor of using the existing spacing_x / spacing_y properties for axis-specific spacing.\nBEFORE\nAFTER\nSpacer variation Property Removal\nTo bring Spacer inline with API functionality -> naming used in other Components, variation was removed in favor of is.\nBEFORE\nAFTER\nSwitch Focus Events Removal\nDue to the introduction of the focusin / focusout global HTML5 events, the blur / focus events were removed. The new events should work functionally the same as a drop-in replacement.\nBEFORE\nAFTER\nTextInput Focus Events Removal\nDue to the introduction of the focusin / focusout global HTML5 events, the blur / focus events were removed. The new events should work functionally the same as a drop-in replacement.\nBEFORE\nAFTER\nTransition CSS Custom Properties Removal\nDue to the new <Transition behavior=\"explicit\"> implementation, the current variables would have to get extremely verbose. And ultimately seems a very limited use-case to have animations customizable on that level.\n"},{"identifier":"/docs/navigation/anchor","title":"Anchor","text":"Anchor\n\nNOTE: New since v0.2.0.\n\nAnchor are used for navigating from page to page, or to external websites.\nImports\nInternal Navigation\nWhen navigating only to an internal Web Application route, you can just set href property with no other properties.\nExternal Navigation\nWhen navigating to external links, for security purposes it's recommended to set rel=\"noopener\" to prevent Window.opener from being set on the newly opened page. And also to set rel=\"noreferrer\" for privacy purposes, to prevent the Browser from sending the Referer header to the new page.\nPalette\n\nNOTE: New since v0.4.3.\n\nYou can change the color palette of the Anchor via the palette property.\n"},{"identifier":"/docs/navigation/aside","title":"Aside","text":"Aside\n\nNOTE: New since v0.2.0.\n\n\nWARNING: Received a breaking refactoring in v0.5.0.\n\nAside is used to vertically present the end-user with actions and links that can be accessed anytime on the Web Application.\nImports\nPalette\nYou can change the color palette of the Aside via the palette property.\nPlacement\n\nIMPORTANT: The placement property does NOT affect how it will appear in your layout. You need to manually handle that.\n\nYou can adjust which side the content divider border will appear via the placement property.\nCollapsing\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\nWhile this Component does not have built-in collapsing, the Framework provides the primitives for you to build unopinionated collapsable navigations interfaces. Via Components like Overlay and features like contents.\n"},{"identifier":"/docs/navigation/breadcrumb","title":"Breadcrumb","text":"Breadcrumb\n\nNOTE: New since v0.2.0.\n\nBreadcrumb is typically used to render a series of links with separators. With the each link left of the right-most a state in the end-user's navigation history. Or, a route hierarchy of the Web Application. e.g. directory paths\nImports\nSeparator\nYou can alter the separator between items rendered via the separator property.\n"},{"identifier":"/docs/navigation/menu","title":"Menu","text":"Menu\n\nNOTE: New since v0.2.2.\n\nMenu renders a nestable list of actionable buttons and links. Typically used in context menus or used as the main content body of Aside.\nImports\nOrientation\n\nNOTE: By passing an array, you can set responsive values. e.g. orientation={[\"tablet:horizontal\", \"mobile:horizontal\"]}\n\n\nIMPORTANT: You should never use sub menus whenever using horizontal Menu.Container Components.\n\nYou can alter the orientation of how the Menu.Container lays out the children.\nSection\n\nDEPRECATED: <Menu.SubMenu> will be renamed to <Menu.Section> in v0.6.0.\n\nYou can nest more menus via <Menu.Section> Component and using <svelte:fragment slot=\"sub-menu\"> in <Menu.Divider> or <Menu.Heading> Components.\nText Divider\nIn place of <Menu.Heading> you can also use <Menu.Divider> with text content.\nPalette\nYou can change the color palette of the Menu.Anchor / Menu.Button / Menu.Label via the palette property.\n"},{"identifier":"/docs/navigation/omni","title":"Omni","text":"Omni\n\nNOTE: New since v0.2.0.\n\n\nWARNING: Received a breaking refactoring in v0.5.0.\n\nOmni is used to horizontally present the end-user with actions and links that can be accessed anytime on the Web Application.\nImports\nPalette\nYou can change the color palette of the Omni via the palette property.\nPlacement\n\nIMPORTANT: The placement property does NOT affect how it will appear in your layout. You need to manually handle that.\n\nYou can adjust which side the content divider border will appear via the placement property.\nCollapsing\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\nWhile this Component does not have built-in collapsing, the Framework provides the primitives for you to build unopinionated collapsable navigations interfaces. Via Components like Popover and features like hidden.\n"},{"identifier":"/docs/overlays/backdrop","title":"Backdrop","text":"Backdrop\n\nWARNING: Received a breaking refactoring in v0.5.0.\n\nBackdrop stretches across its parent element, providing a dimmed background that sits under sibling content. Useful for things like prompts.\n"},{"identifier":"/docs/overlays/clickable","title":"Clickable","text":"Clickable\n\nNOTE: New since v0.4.3.\n\nClickable stretches a nested <Clickable.Anchor> / <Clickable.Label> child across its parent element, while surfacing other interactive elements above the overlay.\nImports\nAnchor\nUse a <Clickable.Anchor> to stretch a clickable <a> across the parent container.\nLabel\nUse a <Clickable.Label> to stretch a clickable <label> across the parent container.\n"},{"identifier":"/docs/overlays/overlay","title":"Overlay","text":"Overlay\n\nNOTE: New since v0.2.4.\n\n\nWARNING: Received a breaking refactoring in v0.5.0.\n\nOverlay is typically used for rendering full-screen content over the rest of the page, optionally including a backdrop or being toggleable.\nImports\n\nLogic ID\nYou can make the Overlay toggleable via the logic_id property, and then referencing that with a Button. Alternatively, <Overlay.Button> can be used while inside a <Overlay.Container> tree, which automatically inherits logic_id via Svelte Context.\nLogic State\n\nWARNING: This feature is only available in Javascript-enabled Browsers.\n\nYou can manually open / close the Overlay via the logic_state property.\nAuto Focus\n\nNOTE: New since v0.4.13.\n\n\nWARNING: This feature is only available in Javascript-enabled Browsers.\n\nWhenever the Overlay becomes active, focus is moved to the first found focusable element, then restored to the previously focused element when dismissed.\nYou can customize which element is focused on activation with a reference or CSS Selector, via the focus_target property\nFocus Trapping\n\nNOTE: New since v0.4.13.\n\n\nWARNING: This feature is only available in Javascript-enabled Browsers.\n\n\nNOTE: Click the Link button, to test out the functionality in the Playground.\n\nWhile the Overlay is active, focus movement is trapped within the first and last found focusable elements.\nYou can customize which elements are used as the first and last with references or CSS Selectors, via the focus_first / focus_last properties.\nLoading\n\nNOTE: New since v0.4.13.\n\n\nNOTE: Use the in-Browser developer tools to see this functionality in action.\n\nYou can customize the loading behavior of slotted content via the loading property.\nBackdrop\nYou can optionally include a backdrop by passing via composing the <Overlay.Backdrop> Component.\nDismissible\n\nNOTE: Added keybinding support since v0.4.13.\n\n\nWARNING: This feature is only available in Javascript-enabled Browsers.\n\nYou can optionally have the Overlay dismissible by pressing the ESC key or clicking the <Overlay.Backdrop> if applicable, via the dismissible property.\nOnce\n\nNOTE: New since v0.4.11.\n\n\nWARNING: This feature is only available in Javascript-enabled Browsers.\n\nYou can enable having the Overlay dismissed whenever <Overlay.Section> inner content is clicked via the once property.\nOrientation\n\nNOTE: By passing an array, you can set responsive values. e.g. orientation={[\"desktop:horizontal\", \"widescreen:horizontal\"]}\n\nYou can set the Overlay to render horizontally via the orientation property.\nAlignment\nYou can align <Overlay.Section> child content via the alignment, alignment_x, and alignment_y properties.\nSpacing\nYou can adjust the spacing between <Overlay.Section> child content via the spacing, spacing_x, and spacing_y properties.\nTransition\nYou can change which built-in Transition is animated using clip, fade, scale, or slide via the animation property.\nDirection\nYou can change which direction the entrance animation comes from via the direction property.\n"},{"identifier":"/docs/overlays/popover","title":"Popover","text":"Popover\n\nNOTE: New since v0.2.11.\n\n\nWARNING: Received a breaking refactoring in v0.5.0.\n\nPopover is typically used for hiding content that'll clip onto the page when activated via a button or something else.\nImports\n\nLogic ID\nYou can make the Popover toggleable via the logic_id property, and then referencing that with a Button. Alternatively, <Popover.Button> can be used while inside a <Popover.Container> tree, which automatically inherits logic_id via Svelte Context.\nLogic State\n\nWARNING: This feature is only available in Javascript-enabled Browsers.\n\nYou can manually open / close the Popover via the logic_state property.\nDismissible\n\nNOTE: Added keybinding support since v0.4.13.\n\n\nWARNING: This feature is only available in Javascript-enabled Browsers.\n\nYou can optionally have the Popover dismissible by clicking outside the <Popover.Section> child content, pressing the ESC key, or inner content losing focus, via the dismissible property.\nOnce\n\nNOTE: New since v0.4.11.\n\n\nWARNING: This feature is only available in Javascript-enabled Browsers.\n\nYou can enable having the Popover dismissed whenever inner content is clicked via the once property.\nPlacement\nYou can adjust which side your content is placed on via the placement property.\nAlignment\nYou can align Popover which direction the child content breaks, via the alignment_x and alignment_y properties respectively.\n"},{"identifier":"/docs/resources/community","title":"Community","text":"Community\nBelow you can find resources made by members of the community using Kahi UI or projects that integrate well with Kahi UI.\nWant to List Your Project?\nIf you want to list your project that uses Kahi UI, just create a Pull Request for this file!\nDiscussion / Support\n\nOther community channels besides the main repository for talking about or getting help with Kahi UI.\n\n\nDiscord — Official support Discord, where you can talk to others that use Kahi UI.\n\nIcons\n\nIconography projects that have been shown to work well with Kahi UI.\n\n\nLucide Icons — Community fork of Feather Icons, provides lightweight SVG icons. (used by this documentation site)\n\nWeb Applications\n\nDeployed Web Applications that utilize Kahi UI as their design language.\n\n3D Rendering\n\nThe Raytracer Challenge REPL - jakobwesthoff/the_raytracer_challenge_repl — REPL for rendering raytraced scenes in modern browsers with a live editor.\n\n"},{"identifier":"/docs/resources/official","title":"Official","text":"Official\nBelow you can find resources made maintained by Kahi UI contributors.\nDiscussion / Support\n\nOfficial support provided by contributors and community members.\n\n\nIssue Tracker — Official GitHub issue tracker for filing bugs and requesting support.\n\nShowcase\n\nProjects that show off the Kahi UI framework.\n\n\nkahi-framework/kahi-ui.nbn.dev — Official documentation site.\n\nTemplates\n\nProjects that can be used as a basis for your own project, showing how to integrate with various software.\n\n\nkahi-framework/kahi-ui-template-svelte — Official template for Svelte based on npx degit sveltejs/template my-svelte-project starter.\nkahi-framework/kahi-ui-template-sveltekit — Official template for SvelteKit based on the npm init svelte@next starter.\n\n"},{"identifier":"/docs/stores/darkmode","title":"darkmode","text":"darkmode\n\nNOTE: New since v0.2.3.\n\ndarkmode is a Svelte Store, which returns true whenever either <html data-palette=\"dark\"> or prefersscheme(\"dark\") is validated.\n\nNOTE: Click the color scheme button in the top navigation to see changes.\n\nImports\nCompatibility\nThe Store is dependent on MutationObserver / Window.matchMedia. So if you're rendering on the server, it'll always return false.\n"},{"identifier":"/docs/stores/htmlpalette","title":"htmlpalette","text":"htmlpalette\n\nNOTE: New since v0.2.3.\n\n\nDEPRECATED: This feature will be renamed htmlpalette -> htmlmode in v0.6.0.\n\nhtmlpalette is a Svelte Store, which is bound to <html data-palette=\"XXX\"> and returns the changes to that attribute. Defaulting to \"light\" if not set.\n\nNOTE: Click the color scheme button in the Navigation topbar to see changes.\n\nImports\nCompatibility\nThe Store is dependent on MutationObserver. So if you're rendering on the server, it'll always return \"\".\n"},{"identifier":"/docs/stores/mediaquery","title":"mediaquery","text":"mediaquery\n\nNOTE: New since v0.2.14.\n\nmediaquery / mediaqueries are Svelte Stores, which returns true whenever a provided Media Query is currently active.\nImports\nCompatibility\nThe Stores are dependent on Window.matchMedia. So if you're rendering on the server, it'll always return false.\n"},{"identifier":"/docs/stores/prefersscheme","title":"prefersscheme","text":"prefersscheme\n\nNOTE: New since v0.2.3.\n\nprefersscheme is a Svelte Store, which returns true whenever matchMedia(SCHEME) is validated.\n\nNOTE: Change your Operating System's color settings to see changes.\n\nImports\nBuilt-in Shortcuts\nThe prefersscheme Store also comes with two preconfigured default shortcuts, prefersdark and preferslight.\nCompatibility\nThe Store is dependent on Window.matchMedia. So if you're rendering on the server, it'll always return false.\n"},{"identifier":"/docs/stores/scrolllock","title":"scrolllock","text":"scrolllock\n\nNOTE: New since v0.2.4.\n\nscrolllock is a Svelte Store which sets overflow: hidden; on an HTMLElement whenever the Store is set to true. Restoring the previous value of overflow whenever set back to false. Allowing for connecting Component open states like for modals, to the prevent overscrolling the main document body.\n\nNOTE: If no HTMLElement is passed into the Store function, it'll default to the root <html>.\n\nImports\nCompatibility\nThe Store is dependent on setting an element's inline styles via Javascript. So on server, will return a readable Store which will error on having a new value set.\n"},{"identifier":"/docs/stores/viewport","title":"viewport","text":"viewport\n\nNOTE: New since v0.2.14.\n\nviewport / viewports are Svelte Stores, which returns true whenever a Viewport selected in initialization is currently active.\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\nImports\nCompatibility\nThe Stores are dependent on Window.matchMedia. So if you're rendering on the server, it'll always return false.\n"},{"identifier":"/docs/surfaces/box","title":"Box","text":"Box\n\nNOTE: New since v0.2.0.\n\nBox is a surface primitive for encapsulating section content in a block of color.\nImports\nPalette\nYou can change the color palette of the Box via the palette property.\nElevation\n\nNOTE: New since v0.3.5.\n\nYou can set how \"high\" your Box will appear to be over top the page via the elevation property.\nShape\nYou can modify the shape of the Box via the shape property.\n"},{"identifier":"/docs/surfaces/card","title":"Card","text":"Card\n\nNOTE: New since v0.2.0.\n\nCard is a multi-part surface pattern for displaying a section of content in a long-form vertical format.\nImports\nPalette\nYou can change the color palette of the Card via the palette property.\nElevation\n\nNOTE: New since v0.3.5.\n\nYou can set how \"high\" your Card will appear to be over top the page via the elevation property.\nOrientation\n\nNOTE: New since v0.3.5.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. orientation={[\"desktop:vertical\", \"widescreen:vertical\"]}\n\nYou can set the Card.Footer to render vertically via the orientation property.\nSizing\n\nNOTE: New since v0.3.3.\n\nYou can change the sizes / spacings of the child elements via the sizing property.\nFlush\n\nNOTE: New since v0.2.13.\n\nYou can change the appearance of the Card to be flush with the rest of the Application content via the variation property.\n"},{"identifier":"/docs/surfaces/hero","title":"Hero","text":"Hero\n\nNOTE: New since v0.2.0.\n\nHero is a multi-part surface pattern for displaying banner text with subtitling and actions, typically used for landing pages, error messages, and loading placeholders.\nImports\nPalette\nYou can change the color palette of the Hero via the palette property.\n"},{"identifier":"/docs/surfaces/tile","title":"Tile","text":"Tile\n\nNOTE: New since v0.2.1.\n\nTile is a multi-part surface pattern for displaying a section of content in a short-form horizontal format.\nImports\nPalette\nYou can change the color palette of the Tile via the palette property.\nElevation\n\nNOTE: New since v0.3.5.\n\nYou can set how \"high\" your Tile will appear to be over top the page via the elevation property.\nOrientation\n\nNOTE: New since v0.3.5.\n\n\nNOTE: By passing an array, you can set responsive values. e.g. orientation={[\"desktop:vertical\", \"widescreen:vertical\"]}\n\nYou can set the Tile.Footer to render vertically via the orientation property.\nSizing\n\nNOTE: New since v0.3.3.\n\nYou can change the sizes / spacings of the child elements via the sizing property.\nFlush\n\nNOTE: New since v0.2.13.\n\nYou can change the appearance of the Tile to be flush with the rest of the Application content via the variation property.\n"},{"identifier":"/docs/typography/blockquote","title":"Blockquote","text":"Blockquote\n\nNOTE: New since v0.2.5.\n\nBlockquote is typically used to render a block of text, that's attributed to a certain source of information.\nImports\nPalette\nYou can change the color palette of the Blockquote.Container via the palette property.\n"},{"identifier":"/docs/typography/code","title":"Code","text":"Code\n\nNOTE: New since v0.2.0.\n\nCode is used to render inline monospaced text, typically for showing programming code / application configuration to an end-user.\nImports\nPalette\nYou can change the color palette of Code via the palette property.\nCode Block\nYou can display blocks of code via a <pre> HTML tag by passing is=\"pre\".\n\n"},{"identifier":"/docs/typography/heading","title":"Heading","text":"Heading\n\nNOTE: New since v0.2.0.\n\nHeading is typically used for delineating sections of content within your Web Application.\nImports\nSizing\nYou can adjust the size of Heading by passing the is property.\nPalette\n\nNOTE: New since v0.2.16.\n\nYou can change the color palette of Heading via the palette property.\nAlignment\n\nDEPRECATED: This property will be renamed align -> alignment_x in v0.6.0.\n\nYou can adjust the text alignment of the Heading via the alignment_x property.\nTransform\nYou can alter the rendered text capitalization via the transform property.\nVariation\nYou can apply variations to the rendered text, like truncating, via the variation property.\n"},{"identifier":"/docs/typography/text","title":"Text","text":"Text\n\nNOTE: New since v0.2.0.\n\nText is used to render paragraphs of text in your interface, among other types of text.\nImports\nSizing\n\nDEPRECATED: This property will be renamed size -> sizing in v0.6.0.\n\nYou can adjust the size of Text by passing the sizing property.\nPalette\nYou can change the color palette of Text via the palette property.\nAlignment\n\nDEPRECATED: This property will be renamed align -> alignment_x in v0.6.0.\n\nYou can adjust the text alignment of the Text via the alignment_x property.\nTransform\nYou can alter the rendered text capitalization via the transform property.\nVariation\nYou can apply variations to the rendered text, like truncating, via the variation property.\nPre Formatted\nYou can render text with whitespace and linebreaks preserved via the is property.\n\nOther Tags\n\nDEPRECATED: The feature <Text is=\"kbd\"> will be elevated to a standalone <Kbd> Component in v0.6.0.\n\nYou can also access most of the other HTML text tags via the is property.\n"},{"identifier":"/docs/utilities/browserrender","title":"BrowserRender","text":"BrowserRender\n\nNOTE: New since v0.4.1.\n\n\nNOTE: This Component is renderless, it does not render its own DOM nodes.\n\nBrowserRender disables rendering of child content that either doesn't work in a SSR environment or doesn't make sense there. e.g. <canvas> rendering\n\nNOTE: The REPL runs on your Browser, so this will always show the content.\n\nImports\n"},{"identifier":"/docs/utilities/intersectionrender","title":"IntersectionRender","text":"IntersectionRender\n\nNOTE: New since v0.4.1.\n\nIntersectionRender disables rendering of child content before it has come into the root element's viewport at least once. Useful for lazy loading content besides media.\nImports\nCompatibility\nThe Component only runs on clientside Browsers with Javascript enabled. So you need to plan a SSR-compatible fallback if using in a SSR scenario. It is also dependent on IntersectionObserver.\nEager\n\nNOTE: It is good practice to give the IntersectionRender a fixed size that generally matches the child content when using this mode. Otherwise you can end up with janky scrolling.\n\nYou can change the behavior of IntersectionObserver by passing in the loading attribute. Which will make the Component ALWAYS disable rendering when outside of the root viewport, not just on initial load.\nFallthrough\n\nNOTE: The REPL runs on your Browser, so this will always render anyway.\n\nBy default, IntersectionRender will never render when running in SSR environments. You can change it to always render in those environments via the fallthrough property.\n"},{"identifier":"/docs/utilities/mediaqueryrender","title":"MediaQueryRender","text":"MediaQueryRender\n\nNOTE: New since v0.5.1.\n\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\nMediaQueryRender disables rendering of child content while the provided Media Quer(y/eries) are not active.\nImports\nCompatibility\nThe Component only runs on clientside Browsers with Javascript enabled. So you need to plan a SSR-compatible fallback if using in a SSR scenario.\nMultiple Queries\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\nYou can specify multiple Media Queries by passing in a string array (string[]) via the queries property.\nBehavior\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\nWhen working with multiple Media Queries, you can specify that ALL Media Queries must be valid in order to render. Via the behavior property.\nFallthrough\n\nNOTE: The REPL runs on your Browser, so this will always render anyway.\n\nBy default, MediaQueryRender will never render when running in SSR environments. You can change it to always render in those environments via the fallthrough property.\n"},{"identifier":"/docs/utilities/portal","title":"Portal","text":"Portal\n\nNOTE: New since v0.2.0.\n\nPortal is used to render a layout outside of its original containing DOM tree, moving it somewhere else.\nImports\nCompatibility\nPortal wraps your slotted content in a display: contents containing element, so keep that in mind in your CSS selectors. It also only remounts its self to the target on clientside Browsers with Javascript enabled. So you need to plan a SSR-compatible fallback if using in a SSR scenario.\nLoading\n\nNOTE: New since v0.3.5.\n\n\nNOTE: Use the in-Browser developer tools to see this functionality in action.\n\nYou can customize the slot loading behavior of Portal Components to not render their children, via the loading property.\n"},{"identifier":"/docs/utilities/serverrender","title":"ServerRender","text":"ServerRender\n\nNOTE: New since v0.4.1.\n\n\nNOTE: This Component is renderless, it does not render its own DOM nodes.\n\nServerRender disables rendering of child content that doesn't work on the Browser, or doesn't make sense there. e.g. reading a file from local disk\n\nNOTE: The REPL runs on your Browser, so this will always be blank.\n\nImports\n"},{"identifier":"/docs/utilities/transition","title":"Transition","text":"Transition\n\nNOTE: New since v0.4.0.\n\nTransition is used to apply transitional animations on a containing element that will also include its children. Typically used for situations like changing between pages.\nImports\nExplicit\n\nNOTE: New since v0.5.0.\n\n\nWARNING: This feature is only available in Javascript-enabled Browsers.\n\nYou can alter Transition to use its CSS Transitions implementation instead of the CSS Animations implementation for animations. Which skips the first-paint iteration of the animation via the behavior property.\nDelay\nBased on the animaton duration properties in the currently loaded theme. You can use a multiplier percentage decimal to delay it via the delay property.\nDuration\n\nNOTE: New since v0.4.2.\n\nBased on the animaton duration properties in the currently loaded theme. You can use a multiplier percentage decimal to increase / shorten the animation duration via the duration property.\nDirection\nYou can control which direction the Transition animation will \"expand\", \"move\", or whatever your selected animations performs. Via the direction property.\nFade\nThe simplest of all the animations, you can fade content in and out via the animation property.\nBy supplying a variation off the bat, you can also have the animation played as soon as the DOM is loaded.\nClip\nYou can have content \"clip\" in and out via the animation property.\nBy supplying a variation off the bat, you can also have the animation played as soon as the DOM is loaded.\nScale\nYou can have content \"scale\" in and out via the animation property.\nBy supplying a variation off the bat, you can also have the animation played as soon as the DOM is loaded.\nSlide\nYou can have content \"slide\" in and out via the animation property.\nBy supplying a variation off the bat, you can also have the animation played as soon as the DOM is loaded.\n"},{"identifier":"/docs/utilities/viewportrender","title":"ViewportRender","text":"ViewportRender\n\nNOTE: New since v0.5.1.\n\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\nViewportRender disables rendering of child content while the provided Viewport(s) are not active.\nImports\nCompatibility\nThe Component only runs on clientside Browsers with Javascript enabled. So you need to plan a SSR-compatible fallback if using in a SSR scenario. If the child content getting mounted is not of concern, then it's recommended to use SSR-compatible hidden global property.\nFallthrough\n\nNOTE: The REPL runs on your Browser, so this will always render anyway.\n\n\nNOTE: The REPL currently does not support viewport values. Resize your Browser instead.\n\nBy default, ViewportRender will never render when running in SSR environments. You can change it to always render in those environments via the fallthrough property.\n"},{"identifier":"/docs/widgets/datatable","title":"DataTable","text":"DataTable\n\nNOTE: New since v0.5.3.\n\n\nWARNING: While this Widget is available in Javascript-disabled Browsers, it can result in Cumulative Layout Shift.\n\nDataTable is a subset of Table Widget which automatically handles formatting tabular data into HTML.\nImports\nPagination\nVia the paginate property, you can enable pagination of the input rows.\nYou can control the current page via the page property.\nFinally, you can also set up how many rows appear per page via the paging property.\nSearching\nDataTable includes a bottom left search box which allows users to filter rows based on the input. You can customize the default via the searching property.\nBy default, DataTable fuzzy filters each row's members converted into lower case strings. You can customize this behavior via the searching_algorithm property.\nSorting\nBy passing in the sorting member in your columns property metadata, you can enable sorting on individual columns.\nBy passing a column key to the sorting property, you can set which is the column actively being sorted by. Then you can set the sorting_mode property to choose either ascending or descending sort.\nBy default, DataTable alphabetizes each row's members converted into lower case strings. You can customize this behavior on a per column-basis via the sorting_algorithm member in the column metadata.\nSlot\nYou can customize how each row member is rendered via the default slot.\nYou can also customize the icons of the decrement / increment paging buttons via the previous / next slots respectively.\nFinally, you can also customize the icons for the not sorted, ascending sort, and descending sorting buttons via the unsorted, ascending, and descending slots respectively.\nVariation\nJust like the Table Component, you can customize the variation property.\nPalette\nYou can change the color palette of all the interactables via the palette property.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/daypicker","title":"DayPicker","text":"DayPicker\n\nNOTE: New since v0.4.10.\n\n\nDEPRECATED: This feature will only accept ISO 8601 calendar datestamps in v0.6.0.\n\nDayPicker is a Widget that displays a calendar-style grid of days that a user can select from.\nImports\nDisabled\nYou can disable all interactivity via the disabled property.\nDisabled Days\nYou can disable specific days from being selected via the disabled property.\nMultiple\nYou can allow for multiple days to be selected via the multiple property.\nOnce\nYou can disable selected days from being unselected via the once property.\nReadonly\nYou can disable interactivity without changing the visuals via the readonly property.\nHighlight\n\nNOTE: By default, the current day is used.\n\nYou can select a specific set of days to be highlighted as outlines via the highlight property.\nMaximum + Minimum\nYou can set maximum and minimum range of selectable days via the maximum / minimum properties.\nCustom Format\nYou can customize how the day component of the available timestamps is displayed via the day and weekday properties respectively.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/daystepper","title":"DayStepper","text":"DayStepper\n\nNOTE: New since v0.4.10.\n\n\nDEPRECATED: This feature will only accept ISO 8601 calendar datestamps in v0.6.0.\n\nDayStepper is a Widget that lets users increment / decrement the currently provided day by a set number.\nImports\nDisabled\nYou can disable all interactivity via the disabled property.\nReadonly\nYou can disable interactivity without changing the visuals via the readonly property.\nMaximum + Minimum\nYou can set maximum and minimum range of steppable days via the maximum / minimum properties.\nStep\n\nDEPRECATED: This feature will be renamed from step -> steps in v0.6.0 to consolidate API surface.\n\nYou can control how many days the buttons increment / decrement via the steps property.\nCustom Format\nYou can customize how the day and month components of the current timestamp is displayed via the day, weekday, and month properties respectively.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/monthpicker","title":"MonthPicker","text":"MonthPicker\n\nNOTE: New since v0.4.10.\n\n\nDEPRECATED: This feature will only accept ISO 8601 calendar datestamps in v0.6.0.\n\nMonthPicker is a Widget that displays a fiscal quaterly grid of months that a user can select from.\nImports\nDisabled\nYou can disable all interactivity via the disabled property.\nDisabled Months\nYou can disable specific months from being selected via the disabled property.\nMultiple\nYou can allow for multiple months to be selected via the multiple property.\nOnce\nYou can disable selected months from being unselected via the once property.\nReadonly\nYou can disable interactivity without changing the visuals via the readonly property.\nHighlight\n\nNOTE: By default, the current month is used.\n\nYou can select a specific set of months to be highlighted as outlines via the highlight property.\nMaximum + Minimum\nYou can set maximum and minimum range of selectable months via the maximum / minimum properties.\nCustom Format\nYou can customize how the month component of the available timestamps is displayed via the month property.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/monthstepper","title":"MonthStepper","text":"MonthStepper\n\nNOTE: New since v0.4.10.\n\n\nDEPRECATED: This feature will only accept ISO 8601 calendar datestamps in v0.6.0.\n\nMonthStepper is a Widget that lets users increment / decrement the currently provided month by a set number.\nImports\nDisabled\nYou can disable all interactivity via the disabled property.\nReadonly\nYou can disable interactivity without changing the visuals via the readonly property.\nMaximum + Minimum\nYou can set maximum and minimum range of steppable months via the maximum / minimum properties.\nStep\n\nDEPRECATED: This feature will be renamed from step -> steps in v0.6.0 to consolidate API surface.\n\nYou can control how many months the buttons increment / decrement via the steps property.\nCustom Format\nYou can customize how the month and year components of the current timestamp is displayed via the month and year properties respectively.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/pagination","title":"Pagination","text":"Pagination\n\nNOTE: New since v0.5.1.\n\nPagination is typically used for allowing the user to navigate data or content that is separated into groupings of information, or \"pages\".\nImports\nPaging\nYou can set how many pages there are for the associated content and which page is current via the pages / value properties respectively.\nAnchors\n\nIMPORTANT: The ${page} token is non-standard, it needs to be set as a Javascript string literal, e.g. href={\"/path/to/list/${href}\"}\n\nYou can have the paging buttons be anchors via href property. And adding ${page} in your link where you want the page number to be inserted.\nSteps\nYou can change how many incremental / decremental steps of paging buttons are displayed via the steps property.\nSlot\nYou can alter the icons / text used for the previous / next buttons via the previous / next slots respectively.\n\nPalette\nYou can change the color palette of the Pagination via the palette property.\nSizing\nYou can alter the overall sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/timepicker","title":"TimePicker","text":"TimePicker\n\nNOTE: New since v0.4.10.\n\nTimePicker is a Widget that displays a set of hour, minute, second clock scrollable areas that a user can select from.\nImports\nNow\nYou can enable the displaying of a \"NOW\" button to allow the user to set the picker to the current time, via the now property.\nAuto Scroll\n\nWARNING: This property will cause layout reflowing. And can result poor performance when mounted during points of high activity. e.g. when your web page first loads\n\nYou can enable auto scrolling to the currently set value when TimePicker is mounted, via the scroll property.\n12 Hour\n\nNOTE: By default, this value respects the user default if available.\n\nYou can have the hours render as 12-hour time (1...12 AM/PM) instead of 24-hour time (0...23) via the hour_12 property.\n24 Hour\n\nNOTE: By default, this value respects the user default if available.\n\nYou can have the hours render as 24-hour time (0...23) instead of 12-hour time (1...12 AM/PM) via the hour_12 property.\nDisabled\nYou can disable all interactivity via the disabled property.\nHighlight\n\nNOTE: By default, the current time is used.\n\n\nDEPRECATED: This feature will be switched from supporting singular strings (string) to string arrays (string[]) in v0.6.0.\n\nYou can select a specific timestamp to be highlighted as outlines via the highlight property.\nMaximum + Minimum\nYou can set maximum and minimum range of selectable times via the maximum / minimum properties.\nCustom Format\nYou can customize how the hour, minute, second components of the available timestamps is displayed via the hour, minute, and second properties respectively.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/yearpicker","title":"YearPicker","text":"YearPicker\n\nNOTE: New since v0.4.10.\n\n\nDEPRECATED: This feature will only accept ISO 8601 calendar datestamps in v0.6.0.\n\nYearPicker is a Widget that displays a decade-based grid of years that a user can select from.\nImports\nDisabled\nYou can disable all interactivity via the disabled property.\nDisabled Years\nYou can disable specific years from being selected via the disabled property.\nMultiple\nYou can allow for multiple years to be selected via the multiple property.\nOnce\nYou can disable selected years from being unselected via the once property.\nReadonly\nYou can disable interactivity without changing the visuals via the readonly property.\nHighlight\n\nNOTE: By default, the current year is used.\n\nYou can select a specific set of years to be highlighted as outlines via the highlight property.\nMaximum + Minimum\nYou can set maximum and minimum range of selectable years via the maximum / minimum properties.\nCustom Format\nYou can customize how the year component of the available timestamps is displayed via the year property.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"},{"identifier":"/docs/widgets/yearstepper","title":"YearStepper","text":"YearStepper\n\nNOTE: New since v0.4.10.\n\n\nDEPRECATED: This feature will only accept ISO 8601 calendar datestamps in v0.6.0.\n\nYearStepper is a Widget that lets users increment / decrement the currently provided year by a set number.\nImports\nDisabled\nYou can disable all interactivity via the disabled property.\nReadonly\nYou can disable interactivity without changing the visuals via the readonly property.\nMaximum + Minimum\nYou can set maximum and minimum range of steppable years via the maximum / minimum properties.\nStep\n\nDEPRECATED: This feature will be renamed from step -> steps in v0.6.0 to consolidate API surface.\n\nYou can control how many years the buttons increment / decrement via the steps property.\nCustom Format\nYou can customize how the year component of the current timestamp is displayed via the year property.\nSizing\nYou can alter the overall spacing / sizing look and feel via the sizing property.\n"}]}